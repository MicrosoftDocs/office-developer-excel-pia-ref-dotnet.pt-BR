<Type Name="Styles" FullName="Microsoft.Office.Interop.Excel.Styles">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d5b16d0cbfdec51d146c93cd55fc38ef3293d37f" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="09/03/2018" />
    <Meta Name="ms.locfileid" Value="20587245" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface Styles : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Styles implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.Styles" />
  <TypeSignature Language="VB.NET" Value="Public Interface Styles&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class Styles : System::Collections::IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00020853-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="86aaf-101">Uma coleção de todos os <see cref="T:Microsoft.Office.Interop.Excel.Style" /> objetos na pasta de trabalho ativa ou especificada.</span>
      <span class="sxs-lookup">
        <span data-stu-id="86aaf-101">A collection of all the <see cref="T:Microsoft.Office.Interop.Excel.Style" /> objects in the specified or active workbook.</span>
      </span>
    </summary>
    <remarks>
      <span data-ttu-id="86aaf-102">
        <para>Cada objeto de <b>estilo</b> representa uma descrição de estilo para um intervalo. O objeto <b>Style</b> contém todos os atributos de estilo (fonte, formato de número, alinhamento e assim por diante) como propriedades. Existem vários estilos internos — incluindo Normal, moeda e porcentagem — que são listados na caixa Nome do estilo na caixa de diálogo estilo (menu Formatar).</para>
        <para>Uso o <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Styles" /> propriedade para retornar a coleção <b>Styles</b> .</para>
        <para>Uso o <see cref="M:Microsoft.Office.Interop.Excel.Styles.Add(System.String,System.Object)" /> método para criar um novo estilo e adicioná-lo à coleção.</para>
        <para>Usam <b>estilos</b>(<paramref name="index" />), onde <paramref name="index" /> é o número de índice do estilo ou um nome, para retornar um único objeto <b>Style</b> da pasta de trabalho coleção <b>Styles</b> .</para>
        <para></para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="86aaf-102">
          <para>Each <b>Style</b> object represents a style description for a range. The <b>Style</b> object contains all style attributes (font, number format, alignment, and so on) as properties. There are several built-in styles — including Normal, Currency, and Percent — which are listed in the Style name box in the Style dialog box (Format menu).</para>
          <para>Use the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Styles" /> property to return the <b>Styles</b> collection.</para>
          <para>Use the <see cref="M:Microsoft.Office.Interop.Excel.Styles.Add(System.String,System.Object)" /> method to create a new style and add it to the collection.</para>
          <para>Use <b>Styles</b>(<paramref name="index" />), where <paramref name="index" /> is the style index number or name, to return a single <b>Style</b> object from the workbook <b>Styles</b> collection.</para>
          <para></para>
        </span>
      </span>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="_Default">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Style this[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Style _Default(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Styles._Default(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property _Default(Index As Object) As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Style ^ default[System::Object ^] { Microsoft::Office::Interop::Excel::Style ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Style</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="86aaf-103">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86aaf-103">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Style Add (string Name, object BasedOn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Style Add([in]string Name, [in]object BasedOn) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Styles.Add(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (Name As String, Optional BasedOn As Object) As Style" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(181)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Style</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.String" />
        <Parameter Name="BasedOn" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name">
          <span data-ttu-id="86aaf-104">
            <b>String</b> necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86aaf-104">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="86aaf-105">O nome do novo estilo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86aaf-105">The new style name.</span>
          </span>
        </param>
        <param name="BasedOn">
          <span data-ttu-id="86aaf-106">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86aaf-106">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="86aaf-107">Uma <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objeto que se refere a uma célula que é usada como base para o novo estilo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86aaf-107">A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that refers to a cell that's used as the basis for the new style.</span>
          </span>
          <span data-ttu-id="86aaf-108">Se esse argumento for omitido, o estilo recém-criado baseia-se no estilo Normal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86aaf-108">If this argument is omitted, the newly created style is based on the Normal style.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86aaf-109">Cria um novo estilo e o adiciona à lista dos estilos que estão disponíveis para a pasta de trabalho atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86aaf-109">Creates a new style and adds it to the list of styles that are available for the current workbook.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="86aaf-110">
            <para>Se um estilo com o nome especificado já existir, este método redefinirá o estilo existente com base na célula especificada em <paramref name="BasedOn" />.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="86aaf-110">
              <para>If a style with the specified name already exists, this method redefines the existing style based on the cell specified in <paramref name="BasedOn" />.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Styles.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86aaf-111">Retorna um <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object que representa o aplicativo Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86aaf-111">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Styles.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86aaf-112">Retorna o número de objetos na coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86aaf-112">Returns the number of objects in the collection.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Styles.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86aaf-113">Retorna um inteiro de 32 bits que indica o aplicativo no qual esse objeto foi criado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86aaf-113">Returns a 32-bit integer that indicates the application in which this object was created.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="86aaf-114">
            <para>Se o objeto foi criado no Microsoft Excel, essa propriedade retorna a cadeia de caracteres XCEL, que é equivalente à c. 5843454 número hexadecimal</para> Propriedade 
          <para>o <b>criador</b> foi projetada para ser usado no Microsoft Excel para Macintosh, onde cada aplicativo possui um código de criador de quatro caracteres. Por exemplo, o Microsoft Excel tem o código de criador XCEL.</para><para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="86aaf-114">
              <para>If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</para>
              <para>The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code. For example, Microsoft Excel has the creator code XCEL.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Styles.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-4)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Style Item[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Style Item(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Styles.Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item(Index As Object) As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Style ^ Item[System::Object ^] { Microsoft::Office::Interop::Excel::Style ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Style</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="86aaf-115">
            <b>Objeto</b>necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86aaf-115">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="86aaf-116">O nome ou número de índice do objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86aaf-116">The name or index number of the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86aaf-117">Retorna um único objeto de uma coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86aaf-117">Returns a single object from a collection.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Merge">
      <MemberSignature Language="C#" Value="public object Merge (object Workbook);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Merge([in]object Workbook) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Styles.Merge(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Merge (Workbook As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Merge(System::Object ^ Workbook);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(564)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Workbook" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Workbook">
          <span data-ttu-id="86aaf-118">
            <b>Objeto</b>necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86aaf-118">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="86aaf-119">Uma <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object que representa a pasta de trabalho que contém os estilos a serem mesclados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86aaf-119">A <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object that represents the workbook containing styles to be merged.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86aaf-120">Mescla os estilos de outra pasta de trabalho para o <see cref="T:Microsoft.Office.Interop.Excel.Styles" /> conjunto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86aaf-120">Merges the styles from another workbook into the <see cref="T:Microsoft.Office.Interop.Excel.Styles" /> collection.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="86aaf-121">
            <para>o valor de um intervalo mesclado é especificado na célula do canto superior esquerdo do intervalo.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="86aaf-121">
              <para>The value of a merged range is specified in the cell of the range's upper-left corner.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Styles.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86aaf-122">Retorna o objeto pai para o objeto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86aaf-122">Returns the parent object for the specified object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>