<Type Name="Workbooks" FullName="Microsoft.Office.Interop.Excel.Workbooks">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e216142f85071dc6b33c9b1eb3c9ddffaa7369de" /><Meta Name="ms.sourcegitcommit" Value="f58b07bd9753015d401a69461f61bc174edee843" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="01/27/2021" /><Meta Name="ms.locfileid" Value="50008613" /></Metadata><TypeSignature Language="C#" Value="public interface Workbooks : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Workbooks implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.Workbooks" />
  <TypeSignature Language="VB.NET" Value="Public Interface Workbooks&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class Workbooks : System::Collections::IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000208DB-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4288)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="f1c25-101">Uma coleção de todos os <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> objetos que estão abertos no aplicativo Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="f1c25-101">A collection of all the <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> objects that are currently open in the Microsoft Excel application.</span></span></summary>
    <remarks><para><span data-ttu-id="f1c25-102">Use a <see cref="P:Microsoft.Office.Interop.Excel._Application.Workbooks" /> propriedade para retornar a coleção <b>Workbooks</b> .</span><span class="sxs-lookup"><span data-stu-id="f1c25-102">Use the <see cref="P:Microsoft.Office.Interop.Excel._Application.Workbooks" /> property to return the <b>Workbooks</b> collection.</span></span></para>
      <para><span data-ttu-id="f1c25-103">Use o <see cref="M:Microsoft.Office.Interop.Excel.Workbooks.Add(System.Object)" /> método para criar uma nova livro de trabalho vazia e adicioná-la à coleção.</span><span class="sxs-lookup"><span data-stu-id="f1c25-103">Use the <see cref="M:Microsoft.Office.Interop.Excel.Workbooks.Add(System.Object)" /> method to create a new, empty workbook and add it to the collection.</span></span></para>
      <para><span data-ttu-id="f1c25-104">Use o <see cref="M:Microsoft.Office.Interop.Excel.Workbooks.Open(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> método para abrir um arquivo.</span><span class="sxs-lookup"><span data-stu-id="f1c25-104">Use the <see cref="M:Microsoft.Office.Interop.Excel.Workbooks.Open(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method to open a file.</span></span></para>
      <para><span data-ttu-id="f1c25-105">Para obter mais informações sobre como usar <b>um único objeto Workbook,</b> consulte o <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> objeto.</span><span class="sxs-lookup"><span data-stu-id="f1c25-105">For more information about using a single <b>Workbook</b> object, see the <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object.</span></span></para>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="__OpenText">
      <MemberSignature Language="C#" Value="public void __OpenText (string Filename, object Origin, object StartRow, object DataType, Microsoft.Office.Interop.Excel.XlTextQualifier TextQualifier = Microsoft.Office.Interop.Excel.XlTextQualifier.xlTextQualifierDoubleQuote, object ConsecutiveDelimiter, object Tab, object Semicolon, object Comma, object Space, object Other, object OtherChar, object FieldInfo, object TextVisualLayout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void __OpenText([in]string Filename, [in]object Origin, [in]object StartRow, [in]object DataType, [in]valuetype Microsoft.Office.Interop.Excel.XlTextQualifier TextQualifier, [in]object ConsecutiveDelimiter, [in]object Tab, [in]object Semicolon, [in]object Comma, [in]object Space, [in]object Other, [in]object OtherChar, [in]object FieldInfo, [in]object TextVisualLayout) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.__OpenText(System.String,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlTextQualifier,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub __OpenText (Filename As String, Optional Origin As Object, Optional StartRow As Object, Optional DataType As Object, Optional TextQualifier As XlTextQualifier = Microsoft.Office.Interop.Excel.XlTextQualifier.xlTextQualifierDoubleQuote, Optional ConsecutiveDelimiter As Object, Optional Tab As Object, Optional Semicolon As Object, Optional Comma As Object, Optional Space As Object, Optional Other As Object, Optional OtherChar As Object, Optional FieldInfo As Object, Optional TextVisualLayout As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(683)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(14)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="Origin" Type="System.Object" />
        <Parameter Name="StartRow" Type="System.Object" />
        <Parameter Name="DataType" Type="System.Object" />
        <Parameter Name="TextQualifier" Type="Microsoft.Office.Interop.Excel.XlTextQualifier" />
        <Parameter Name="ConsecutiveDelimiter" Type="System.Object" />
        <Parameter Name="Tab" Type="System.Object" />
        <Parameter Name="Semicolon" Type="System.Object" />
        <Parameter Name="Comma" Type="System.Object" />
        <Parameter Name="Space" Type="System.Object" />
        <Parameter Name="Other" Type="System.Object" />
        <Parameter Name="OtherChar" Type="System.Object" />
        <Parameter Name="FieldInfo" Type="System.Object" />
        <Parameter Name="TextVisualLayout" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">To be added.</param>
        <param name="Origin">To be added.</param>
        <param name="StartRow">To be added.</param>
        <param name="DataType">To be added.</param>
        <param name="TextQualifier">To be added.</param>
        <param name="ConsecutiveDelimiter">To be added.</param>
        <param name="Tab">To be added.</param>
        <param name="Semicolon">To be added.</param>
        <param name="Comma">To be added.</param>
        <param name="Space">To be added.</param>
        <param name="Other">To be added.</param>
        <param name="OtherChar">To be added.</param>
        <param name="FieldInfo">To be added.</param>
        <param name="TextVisualLayout">To be added.</param>
        <summary><span data-ttu-id="f1c25-106">Reservado para uso interno.</span><span class="sxs-lookup"><span data-stu-id="f1c25-106">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Default">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook this[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Workbook _Default(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Workbooks._Default(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property _Default(Index As Object) As Workbook" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Workbook ^ default[System::Object ^] { Microsoft::Office::Interop::Excel::Workbook ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary><span data-ttu-id="f1c25-107">Reservado para uso interno.</span><span class="sxs-lookup"><span data-stu-id="f1c25-107">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Open">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook _Open (string Filename, object UpdateLinks, object ReadOnly, object Format, object Password, object WriteResPassword, object IgnoreReadOnlyRecommended, object Origin, object Delimiter, object Editable, object Notify, object Converter, object AddToMru);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Workbook _Open([in]string Filename, [in]object UpdateLinks, [in]object ReadOnly, [in]object Format, [in]object Password, [in]object WriteResPassword, [in]object IgnoreReadOnlyRecommended, [in]object Origin, [in]object Delimiter, [in]object Editable, [in]object Notify, [in]object Converter, [in]object AddToMru) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks._Open(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _Open (Filename As String, Optional UpdateLinks As Object, Optional ReadOnly As Object, Optional Format As Object, Optional Password As Object, Optional WriteResPassword As Object, Optional IgnoreReadOnlyRecommended As Object, Optional Origin As Object, Optional Delimiter As Object, Optional Editable As Object, Optional Notify As Object, Optional Converter As Object, Optional AddToMru As Object) As Workbook" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(682)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(13)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="UpdateLinks" Type="System.Object" />
        <Parameter Name="ReadOnly" Type="System.Object" />
        <Parameter Name="Format" Type="System.Object" />
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="WriteResPassword" Type="System.Object" />
        <Parameter Name="IgnoreReadOnlyRecommended" Type="System.Object" />
        <Parameter Name="Origin" Type="System.Object" />
        <Parameter Name="Delimiter" Type="System.Object" />
        <Parameter Name="Editable" Type="System.Object" />
        <Parameter Name="Notify" Type="System.Object" />
        <Parameter Name="Converter" Type="System.Object" />
        <Parameter Name="AddToMru" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">To be added.</param>
        <param name="UpdateLinks">To be added.</param>
        <param name="ReadOnly">To be added.</param>
        <param name="Format">To be added.</param>
        <param name="Password">To be added.</param>
        <param name="WriteResPassword">To be added.</param>
        <param name="IgnoreReadOnlyRecommended">To be added.</param>
        <param name="Origin">To be added.</param>
        <param name="Delimiter">To be added.</param>
        <param name="Editable">To be added.</param>
        <param name="Notify">To be added.</param>
        <param name="Converter">To be added.</param>
        <param name="AddToMru">To be added.</param>
        <summary><span data-ttu-id="f1c25-108">Reservado para uso interno.</span><span class="sxs-lookup"><span data-stu-id="f1c25-108">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_OpenText">
      <MemberSignature Language="C#" Value="public void _OpenText (string Filename, object Origin, object StartRow, object DataType, Microsoft.Office.Interop.Excel.XlTextQualifier TextQualifier = Microsoft.Office.Interop.Excel.XlTextQualifier.xlTextQualifierDoubleQuote, object ConsecutiveDelimiter, object Tab, object Semicolon, object Comma, object Space, object Other, object OtherChar, object FieldInfo, object TextVisualLayout, object DecimalSeparator, object ThousandsSeparator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _OpenText([in]string Filename, [in]object Origin, [in]object StartRow, [in]object DataType, [in]valuetype Microsoft.Office.Interop.Excel.XlTextQualifier TextQualifier, [in]object ConsecutiveDelimiter, [in]object Tab, [in]object Semicolon, [in]object Comma, [in]object Space, [in]object Other, [in]object OtherChar, [in]object FieldInfo, [in]object TextVisualLayout, [in]object DecimalSeparator, [in]object ThousandsSeparator) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks._OpenText(System.String,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlTextQualifier,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _OpenText (Filename As String, Optional Origin As Object, Optional StartRow As Object, Optional DataType As Object, Optional TextQualifier As XlTextQualifier = Microsoft.Office.Interop.Excel.XlTextQualifier.xlTextQualifierDoubleQuote, Optional ConsecutiveDelimiter As Object, Optional Tab As Object, Optional Semicolon As Object, Optional Comma As Object, Optional Space As Object, Optional Other As Object, Optional OtherChar As Object, Optional FieldInfo As Object, Optional TextVisualLayout As Object, Optional DecimalSeparator As Object, Optional ThousandsSeparator As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1773)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(16)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="Origin" Type="System.Object" />
        <Parameter Name="StartRow" Type="System.Object" />
        <Parameter Name="DataType" Type="System.Object" />
        <Parameter Name="TextQualifier" Type="Microsoft.Office.Interop.Excel.XlTextQualifier" />
        <Parameter Name="ConsecutiveDelimiter" Type="System.Object" />
        <Parameter Name="Tab" Type="System.Object" />
        <Parameter Name="Semicolon" Type="System.Object" />
        <Parameter Name="Comma" Type="System.Object" />
        <Parameter Name="Space" Type="System.Object" />
        <Parameter Name="Other" Type="System.Object" />
        <Parameter Name="OtherChar" Type="System.Object" />
        <Parameter Name="FieldInfo" Type="System.Object" />
        <Parameter Name="TextVisualLayout" Type="System.Object" />
        <Parameter Name="DecimalSeparator" Type="System.Object" />
        <Parameter Name="ThousandsSeparator" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">To be added.</param>
        <param name="Origin">To be added.</param>
        <param name="StartRow">To be added.</param>
        <param name="DataType">To be added.</param>
        <param name="TextQualifier">To be added.</param>
        <param name="ConsecutiveDelimiter">To be added.</param>
        <param name="Tab">To be added.</param>
        <param name="Semicolon">To be added.</param>
        <param name="Comma">To be added.</param>
        <param name="Space">To be added.</param>
        <param name="Other">To be added.</param>
        <param name="OtherChar">To be added.</param>
        <param name="FieldInfo">To be added.</param>
        <param name="TextVisualLayout">To be added.</param>
        <param name="DecimalSeparator">To be added.</param>
        <param name="ThousandsSeparator">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_OpenXML">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook _OpenXML (string Filename, object Stylesheets);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Workbook _OpenXML([in]string Filename, [in]object Stylesheets) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks._OpenXML(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _OpenXML (Filename As String, Optional Stylesheets As Object) As Workbook" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2071)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="Stylesheets" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">To be added.</param>
        <param name="Stylesheets">To be added.</param>
        <summary><span data-ttu-id="f1c25-109">Reservado para uso interno.</span><span class="sxs-lookup"><span data-stu-id="f1c25-109">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook Add (object Template);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Workbook Add([in]object Template) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (Optional Template As Object) As Workbook" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(181)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Template" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Template"><span data-ttu-id="f1c25-110">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="f1c25-110">Optional <b>Object</b>.</span></span> <span data-ttu-id="f1c25-111">Determina como a nova pasta de trabalho será criada.</span><span class="sxs-lookup"><span data-stu-id="f1c25-111">Determines how the new workbook is created.</span></span> <span data-ttu-id="f1c25-112">Se este argumento for uma cadeia de caracteres especificando o nome de um arquivo do Microsoft Excel existente, a nova pasta de trabalho será criada com o arquivo especificado como modelo.</span><span class="sxs-lookup"><span data-stu-id="f1c25-112">If this argument is a string specifying the name of an existing Microsoft Excel file, the new workbook is created with the specified file as a template.</span></span> <span data-ttu-id="f1c25-113">Se esse argumento for uma constante, a nova pasta de trabalho conterá uma única planilha do tipo especificado.</span><span class="sxs-lookup"><span data-stu-id="f1c25-113">If this argument is a constant, the new workbook contains a single sheet of the specified type.</span></span> <span data-ttu-id="f1c25-114">Pode ser uma das seguintes <see cref="T:Microsoft.Office.Interop.Excel.XlWBATemplate" /> constantes: <b>xlWBATChart</b>, <b>xlWBATExcel4IntlMacroSheet</b>, <b>xlWBATExcel4MacroSheet</b>ou <b>xlWBATWorksheet</b>.</span><span class="sxs-lookup"><span data-stu-id="f1c25-114">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlWBATemplate" /> constants: <b>xlWBATChart</b>, <b>xlWBATExcel4IntlMacroSheet</b>, <b>xlWBATExcel4MacroSheet</b>, or <b>xlWBATWorksheet</b>.</span></span> <span data-ttu-id="f1c25-115">Se esse argumento for omitido, o Microsoft Excel criará uma nova pasta de trabalho com algumas planilhas em branco (o número de planilhas é definido pela propriedade <b>SheetsInNewWorkbook</b>).</span><span class="sxs-lookup"><span data-stu-id="f1c25-115">If this argument is omitted, Microsoft Excel creates a new workbook with a number of blank sheets (the number of sheets is set by the <b>SheetsInNewWorkbook</b> property).</span></span></param>
        <summary><span data-ttu-id="f1c25-116">Cria uma nova agenda.</span><span class="sxs-lookup"><span data-stu-id="f1c25-116">Creates a new workbook.</span></span> <span data-ttu-id="f1c25-117">A nova pasta de trabalho se transforma na pasta de trabalho ativa.</span><span class="sxs-lookup"><span data-stu-id="f1c25-117">The new workbook becomes the active workbook.</span></span> <span data-ttu-id="f1c25-118">Retorna um <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> objeto.</span><span class="sxs-lookup"><span data-stu-id="f1c25-118">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="f1c25-119">Se o <paramref name="Template" /> argumento especificar um arquivo, o nome do arquivo poderá incluir um caminho.</span><span class="sxs-lookup"><span data-stu-id="f1c25-119">If the <paramref name="Template" /> argument specifies a file, the file name can include a path.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Workbooks.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f1c25-120">Retorna um <see cref="T:Microsoft.Office.Interop.Excel.Application" /> objeto que representa o aplicativo Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="f1c25-120">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span></span> <span data-ttu-id="f1c25-121">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="f1c25-121">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanCheckOut">
      <MemberSignature Language="C#" Value="public bool CanCheckOut (string Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanCheckOut([in]string Filename) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.CanCheckOut(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanCheckOut (Filename As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanCheckOut(System::String ^ Filename);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2070)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Filename"><span data-ttu-id="f1c25-122"><b>String</b> necessário.</span><span class="sxs-lookup"><span data-stu-id="f1c25-122">Required <b>String</b>.</span></span> <span data-ttu-id="f1c25-123">O nome do arquivo para ser retirado.</span><span class="sxs-lookup"><span data-stu-id="f1c25-123">The name of the file to check out.</span></span></param>
        <summary><span data-ttu-id="f1c25-124"><b>True</b> se o Microsoft Excel puder fazer check out de uma pasta de trabalho especificada em um servidor.</span><span class="sxs-lookup"><span data-stu-id="f1c25-124"><b>True</b> if Microsoft Excel can check out a specified workbook from a server.</span></span> <span data-ttu-id="f1c25-125"><b>Boolean</b> de leitura/gravação.</span><span class="sxs-lookup"><span data-stu-id="f1c25-125">Read/write <b>Boolean</b>.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckOut">
      <MemberSignature Language="C#" Value="public void CheckOut (string Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CheckOut([in]string Filename) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.CheckOut(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckOut (Filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CheckOut(System::String ^ Filename);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2069)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Filename"><span data-ttu-id="f1c25-126"><b>String</b> necessário.</span><span class="sxs-lookup"><span data-stu-id="f1c25-126">Required <b>String</b>.</span></span> <span data-ttu-id="f1c25-127">O nome do arquivo para ser retirado.</span><span class="sxs-lookup"><span data-stu-id="f1c25-127">The name of the file to check out.</span></span></param>
        <summary><span data-ttu-id="f1c25-128">Copia a agenda especificada de um servidor para um computador local para edição.</span><span class="sxs-lookup"><span data-stu-id="f1c25-128">Copies the specified workbook from a server to a local computer for editing.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(277)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f1c25-129">Fecha o objeto.</span><span class="sxs-lookup"><span data-stu-id="f1c25-129">Closes the object.</span></span></summary>
        <remarks><para><span data-ttu-id="f1c25-130">Fechar uma área de trabalho usando <b>o método Close</b> não executará Auto_Close macros na área de trabalho.</span><span class="sxs-lookup"><span data-stu-id="f1c25-130">Closing a workbook using the <b>Close</b> method doesn't run any Auto_Close macros in the workbook.</span></span> <span data-ttu-id="f1c25-131">Use o <see cref="M:Microsoft.Office.Interop.Excel._Workbook.RunAutoMacros(Microsoft.Office.Interop.Excel.XlRunAutoMacro)" /> método para executar as macros de fechamento automático.</span><span class="sxs-lookup"><span data-stu-id="f1c25-131">Use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.RunAutoMacros(Microsoft.Office.Interop.Excel.XlRunAutoMacro)" /> method to run the auto close macros.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Workbooks.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f1c25-132">Retorna o número de objetos na coleção.</span><span class="sxs-lookup"><span data-stu-id="f1c25-132">Returns the number of objects in the collection.</span></span> <span data-ttu-id="f1c25-133"><b>Integer</b> somente leitura.</span><span class="sxs-lookup"><span data-stu-id="f1c25-133">Read-only <b>Integer</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Workbooks.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f1c25-134">Retorna um inteiro de 32 bits que indica o aplicativo no qual esse objeto foi criado.</span><span class="sxs-lookup"><span data-stu-id="f1c25-134">Returns a 32-bit integer that indicates the application in which this object was created.</span></span> <span data-ttu-id="f1c25-135">Se o objeto foi criado no Microsoft Excel, essa propriedade retornará a sequência XCEL, que é equivalente ao número hexadecimal 5843454C.</span><span class="sxs-lookup"><span data-stu-id="f1c25-135">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span></span> <span data-ttu-id="f1c25-136">Somente <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> leitura.</span><span class="sxs-lookup"><span data-stu-id="f1c25-136">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="f1c25-137">A propriedade <b>Creator</b> foi projetada para ser usada no Microsoft Excel para Macintosh, onde cada aplicativo possui um código de criador de quatro caracteres.</span><span class="sxs-lookup"><span data-stu-id="f1c25-137">The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span></span> <span data-ttu-id="f1c25-138">Por exemplo, o Microsoft Excel possui o código de criador XCEL.</span><span class="sxs-lookup"><span data-stu-id="f1c25-138">For example, Microsoft Excel has the creator code XCEL.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-4)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook Item[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Workbook Item(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Workbooks.Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item(Index As Object) As Workbook" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Workbook ^ Item[System::Object ^] { Microsoft::Office::Interop::Excel::Workbook ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="f1c25-139">Objeto <b>Required</b>.</span><span class="sxs-lookup"><span data-stu-id="f1c25-139">Required <b>Object</b>.</span></span> <span data-ttu-id="f1c25-140">O nome ou número de índice do objeto.</span><span class="sxs-lookup"><span data-stu-id="f1c25-140">The name or index number of the object.</span></span></param>
        <summary><span data-ttu-id="f1c25-141">Retorna um único objeto de uma coleção.</span><span class="sxs-lookup"><span data-stu-id="f1c25-141">Returns a single object from a collection.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook Open (string Filename, object UpdateLinks, object ReadOnly, object Format, object Password, object WriteResPassword, object IgnoreReadOnlyRecommended, object Origin, object Delimiter, object Editable, object Notify, object Converter, object AddToMru, object Local, object CorruptLoad);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Workbook Open([in]string Filename, [in]object UpdateLinks, [in]object ReadOnly, [in]object Format, [in]object Password, [in]object WriteResPassword, [in]object IgnoreReadOnlyRecommended, [in]object Origin, [in]object Delimiter, [in]object Editable, [in]object Notify, [in]object Converter, [in]object AddToMru, [in]object Local, [in]object CorruptLoad) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.Open(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Open (Filename As String, Optional UpdateLinks As Object, Optional ReadOnly As Object, Optional Format As Object, Optional Password As Object, Optional WriteResPassword As Object, Optional IgnoreReadOnlyRecommended As Object, Optional Origin As Object, Optional Delimiter As Object, Optional Editable As Object, Optional Notify As Object, Optional Converter As Object, Optional AddToMru As Object, Optional Local As Object, Optional CorruptLoad As Object) As Workbook" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1923)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(15)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="UpdateLinks" Type="System.Object" />
        <Parameter Name="ReadOnly" Type="System.Object" />
        <Parameter Name="Format" Type="System.Object" />
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="WriteResPassword" Type="System.Object" />
        <Parameter Name="IgnoreReadOnlyRecommended" Type="System.Object" />
        <Parameter Name="Origin" Type="System.Object" />
        <Parameter Name="Delimiter" Type="System.Object" />
        <Parameter Name="Editable" Type="System.Object" />
        <Parameter Name="Notify" Type="System.Object" />
        <Parameter Name="Converter" Type="System.Object" />
        <Parameter Name="AddToMru" Type="System.Object" />
        <Parameter Name="Local" Type="System.Object" />
        <Parameter Name="CorruptLoad" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename"><span data-ttu-id="f1c25-142"><b>String</b> necessário.</span><span class="sxs-lookup"><span data-stu-id="f1c25-142">Required <b>String</b>.</span></span> <span data-ttu-id="f1c25-143">O nome de arquivo da pasta de trabalho a ser aberta.</span><span class="sxs-lookup"><span data-stu-id="f1c25-143">The file name of the workbook to be opened.</span></span></param>
        <param name="UpdateLinks"><span data-ttu-id="f1c25-144">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="f1c25-144">Optional <b>Object</b>.</span></span> <span data-ttu-id="f1c25-145">Especifica a maneira como os links no arquivo são atualizados.</span><span class="sxs-lookup"><span data-stu-id="f1c25-145">Specifies the way links in the file are updated.</span></span> <span data-ttu-id="f1c25-146">Se esse argumento for omitido, será solicitado que o usuário especifique como os links serão atualizados.</span><span class="sxs-lookup"><span data-stu-id="f1c25-146">If this argument is omitted, the user is prompted to specify how links will be updated.</span></span> <span data-ttu-id="f1c25-147">Caso contrário, esse argumento será um dos valores listados na tabela a seguir. Se o Microsoft Excel estiver abrindo um arquivo no formato WKS, WK1 ou WK3 e o argumento for 2, o Microsoft Excel gerará gráficos a partir dos gráficos anexados ao <paramref name="UpdateLinks" /> arquivo.</span><span class="sxs-lookup"><span data-stu-id="f1c25-147">Otherwise, this argument is one of the values listed in the following table.If Microsoft Excel is opening a file in the WKS, WK1, or WK3 format and the <paramref name="UpdateLinks" /> argument is 2, Microsoft Excel generates charts from the graphs attached to the file.</span></span> <span data-ttu-id="f1c25-148">Se o argumento for 0, nenhum gráfico será criado.</span><span class="sxs-lookup"><span data-stu-id="f1c25-148">If the argument is 0, no charts are created.</span></span></param>
        <param name="ReadOnly"><span data-ttu-id="f1c25-149">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="f1c25-149">Optional <b>Object</b>.</span></span> <span data-ttu-id="f1c25-150">Verdadeiro para abrir a pasta de trabalho em modo somente leitura.</span><span class="sxs-lookup"><span data-stu-id="f1c25-150">True to open the workbook in read-only mode.</span></span></param>
        <param name="Format"><span data-ttu-id="f1c25-151">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="f1c25-151">Optional <b>Object</b>.</span></span> <span data-ttu-id="f1c25-152">Se o Microsoft Excel estiver abrindo um arquivo de texto, esse argumento especificará o caractere dolimidor, conforme mostrado na tabela a seguir.</span><span class="sxs-lookup"><span data-stu-id="f1c25-152">If Microsoft Excel is opening a text file, this argument specifies the delimiter character, as shown in the following table.</span></span> <span data-ttu-id="f1c25-153">Se esse argumento for omitido, o delimitador atual será usado.</span><span class="sxs-lookup"><span data-stu-id="f1c25-153">If this argument is omitted, the current delimiter is used.</span></span></param>
        <param name="Password"><span data-ttu-id="f1c25-154">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="f1c25-154">Optional <b>Object</b>.</span></span> <span data-ttu-id="f1c25-155">Uma cadeia de caracteres que contém a senha necessária para abrir uma pasta de trabalho protegida.</span><span class="sxs-lookup"><span data-stu-id="f1c25-155">A string that contains the password required to open a protected workbook.</span></span> <span data-ttu-id="f1c25-156">Se esse argumento for omitido e a pasta de trabalho exigir uma senha, será solicitada a senha do usuário.</span><span class="sxs-lookup"><span data-stu-id="f1c25-156">If this argument is omitted and the workbook requires a password, the user is prompted for the password.</span></span></param>
        <param name="WriteResPassword"><span data-ttu-id="f1c25-157">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="f1c25-157">Optional <b>Object</b>.</span></span> <span data-ttu-id="f1c25-158">Uma cadeia de caracteres que contém a senha necessária para gravar uma pasta de trabalho reservada para gravação.</span><span class="sxs-lookup"><span data-stu-id="f1c25-158">A string that contains the password required to write to a write-reserved workbook.</span></span> <span data-ttu-id="f1c25-159">Se esse argumento for omitido e se a pasta de trabalho exigir uma senha, a senha será solicitada do usuário.</span><span class="sxs-lookup"><span data-stu-id="f1c25-159">If this argument is omitted and the workbook requires a password, the user will be prompted for the password.</span></span></param>
        <param name="IgnoreReadOnlyRecommended"><span data-ttu-id="f1c25-160">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="f1c25-160">Optional <b>Object</b>.</span></span> <span data-ttu-id="f1c25-161"><b>True</b> para fazer com que o Microsoft Excel não exiba a mensagem recomendada somente leitura (se a pasta de trabalho tiver sido salva com a opção <b>Somente Leitura Recomendada</b>).</span><span class="sxs-lookup"><span data-stu-id="f1c25-161"><b>True</b> to have Microsoft Excel not display the read-only recommended message (if the workbook was saved with the <b>Read-Only Recommended</b> option).</span></span></param>
        <param name="Origin"><span data-ttu-id="f1c25-162">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="f1c25-162">Optional <b>Object</b>.</span></span> <span data-ttu-id="f1c25-163">Se o arquivo for um arquivo de texto, esse argumento indicará a origem (para que as páginas de código e o Retorno de Carro/Alimentação de Linha (CR/LF) possam ser mapeados corretamente).</span><span class="sxs-lookup"><span data-stu-id="f1c25-163">If the file is a text file, this argument indicates where it originated (so that code pages and Carriage Return/Line Feed (CR/LF) can be mapped correctly).</span></span> <span data-ttu-id="f1c25-164">Pode ser uma das seguintes <see cref="T:Microsoft.Office.Interop.Excel.XlPlatform" /> constantes: <b>xlMacintosh</b>, <b>xlWindows</b>ou <b>xlMSDOS</b>.</span><span class="sxs-lookup"><span data-stu-id="f1c25-164">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlPlatform" /> constants: <b>xlMacintosh</b>, <b>xlWindows</b>, or <b>xlMSDOS</b>.</span></span> <span data-ttu-id="f1c25-165">Se esse argumento for omitido, o sistema operacional atual será usado.</span><span class="sxs-lookup"><span data-stu-id="f1c25-165">If this argument is omitted, the current operating system is used.</span></span></param>
        <param name="Delimiter"><span data-ttu-id="f1c25-166">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="f1c25-166">Optional <b>Object</b>.</span></span> <span data-ttu-id="f1c25-167">Se o arquivo for um arquivo de texto e o argumento <b>Format</b> for 6, esse argumento será uma cadeia de caracteres que especifica o caractere a ser usado como o delimiter.</span><span class="sxs-lookup"><span data-stu-id="f1c25-167">If the file is a text file and the <b>Format</b> argument is 6, this argument is a string that specifies the character to be used as the delimiter.</span></span> <span data-ttu-id="f1c25-168">Por exemplo, use Chr(9) para guias, use "," para vírgulas, use ";" para ponto-e-vírgula ou use um caractere personalizado.</span><span class="sxs-lookup"><span data-stu-id="f1c25-168">For example, use Chr(9) for tabs, use "," for commas, use ";" for semicolons, or use a custom character.</span></span> <span data-ttu-id="f1c25-169">Somente o primeiro caractere da cadeia de caracteres será usado.</span><span class="sxs-lookup"><span data-stu-id="f1c25-169">Only the first character of the string is used.</span></span></param>
        <param name="Editable"><span data-ttu-id="f1c25-170">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="f1c25-170">Optional <b>Object</b>.</span></span> <span data-ttu-id="f1c25-171">Se o arquivo for um complemento do Microsoft Excel 4.0, esse argumento será <b>True</b> para abrir o complemento para que seja uma janela visível.</span><span class="sxs-lookup"><span data-stu-id="f1c25-171">If the file is a Microsoft Excel 4.0 add-in, this argument is <b>True</b> to open the add-in so that it’s a visible window.</span></span> <span data-ttu-id="f1c25-172">Se esse argumento for <b>False</b> ou se for omitido, o suplemento será aberto como oculto e não poderá ser reexibido.</span><span class="sxs-lookup"><span data-stu-id="f1c25-172">If this argument is <b>False</b> or omitted, the add-in is opened as hidden, and it cannot be unhidden.</span></span> <span data-ttu-id="f1c25-173">Essa opção não se aplica a complementos criados no Microsoft Excel 5.0 ou posterior.</span><span class="sxs-lookup"><span data-stu-id="f1c25-173">This option doesn't apply to add-ins created in Microsoft Excel 5.0 or later.</span></span> <span data-ttu-id="f1c25-174">Se o arquivo for um modelo do Excel, use <b>True</b> para abrir o modelo especificado para edição ou <b>False</b> para abrir uma nova pasta de trabalho com base no modelo especificado.</span><span class="sxs-lookup"><span data-stu-id="f1c25-174">If the file is an Excel template, use <b>True</b> to open the specified template for editing or <b>False</b> to open a new workbook based on the specified template.</span></span> <span data-ttu-id="f1c25-175">O valor padrão é <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="f1c25-175">The default value is <b>False</b>.</span></span></param>
        <param name="Notify"><span data-ttu-id="f1c25-176">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="f1c25-176">Optional <b>Object</b>.</span></span> <span data-ttu-id="f1c25-177">Se o arquivo não puder ser aberto em modo leitura/gravação, esse argumento será <b>True</b> para adicionar o arquivo para a lista de notificações de arquivo.</span><span class="sxs-lookup"><span data-stu-id="f1c25-177">If the file cannot be opened in read/write mode, this argument is <b>True</b> to add the file to the file notification list.</span></span> <span data-ttu-id="f1c25-178">O Microsoft Excel abrirá o arquivo como somente leitura, pesquisará a lista de notificações de arquivo e então notificará o usuário quando o arquivo for disponibilizado.</span><span class="sxs-lookup"><span data-stu-id="f1c25-178">Microsoft Excel will open the file as read-only, poll the file notification list, and then notify the user when the file becomes available.</span></span> <span data-ttu-id="f1c25-179">Se esse argumento for <b>False</b> ou se for omitido, nenhuma notificação será solicitada e todas as tentativas de abrir um arquivo não disponível falharão.</span><span class="sxs-lookup"><span data-stu-id="f1c25-179">If this argument is <b>False</b> or omitted, no notification is requested, and any attempts to open an unavailable file will fail.</span></span></param>
        <param name="Converter"><span data-ttu-id="f1c25-180">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="f1c25-180">Optional <b>Object</b>.</span></span> <span data-ttu-id="f1c25-181">O índice do primeiro conversor de arquivos a ser experimentado na abertura do arquivo.</span><span class="sxs-lookup"><span data-stu-id="f1c25-181">The index of the first file converter to try when opening the file.</span></span> <span data-ttu-id="f1c25-182">O conversor de arquivo especificado é tentado primeiro; se esse conversor não reconhecer o arquivo, todos os outros conversores serão tentados.</span><span class="sxs-lookup"><span data-stu-id="f1c25-182">The specified file converter is tried first; if this converter doesn’t recognize the file, all other converters are tried.</span></span> <span data-ttu-id="f1c25-183">O índice do conversor consiste nos números de linha dos conversores retornados pela <see cref="P:Microsoft.Office.Interop.Excel._Application.FileConverters(System.Object,System.Object)" /> propriedade.</span><span class="sxs-lookup"><span data-stu-id="f1c25-183">The converter index consists of the row numbers of the converters returned by the <see cref="P:Microsoft.Office.Interop.Excel._Application.FileConverters(System.Object,System.Object)" /> property.</span></span></param>
        <param name="AddToMru"><span data-ttu-id="f1c25-184">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="f1c25-184">Optional <b>Object</b>.</span></span> <span data-ttu-id="f1c25-185"><b>True</b> para adicionar esta pasta de trabalho à lista de arquivos usados recentemente.</span><span class="sxs-lookup"><span data-stu-id="f1c25-185"><b>True</b> to add this workbook to the list of recently used files.</span></span> <span data-ttu-id="f1c25-186">O valor padrão é <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="f1c25-186">The default value is <b>False</b>.</span></span></param>
        <param name="Local"><span data-ttu-id="f1c25-187">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="f1c25-187">Optional <b>Object</b>.</span></span> <span data-ttu-id="f1c25-188"><b>True</b> salva arquivos no idioma do Microsoft Excel (incluindo as configurações do painel de controle).</span><span class="sxs-lookup"><span data-stu-id="f1c25-188"><b>True</b> saves files against the language of Microsoft Excel (including control panel settings).</span></span> <span data-ttu-id="f1c25-189"><b>False</b> (padrão) salva arquivos no idioma do Visual Basic for Applications (VBA) (que normalmente é inglês dos EUA, a menos que o projeto VBA do qual Workbooks.Open é executado seja um projeto do VBA XL5/95 internacionalizado antigo).</span><span class="sxs-lookup"><span data-stu-id="f1c25-189"><b>False</b> (default) saves files against the language of Visual Basic for Applications (VBA) (which is typically U.S. English unless the VBA project where Workbooks.Open is run from is an old internationalized XL5/95 VBA project).</span></span></param>
        <param name="CorruptLoad"><span data-ttu-id="f1c25-190">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="f1c25-190">Optional <b>Object</b>.</span></span> <span data-ttu-id="f1c25-191">Pode ser uma das seguintes constantes: <b>xlNormalLoad</b>, <b>xlRepairFile</b>e <b>xlExtractData</b>.</span><span class="sxs-lookup"><span data-stu-id="f1c25-191">Can be one of the following constants: <b>xlNormalLoad</b>, <b>xlRepairFile</b>, and <b>xlExtractData</b>.</span></span> <span data-ttu-id="f1c25-192">O comportamento padrão se nenhum valor for especificado normalmente é normal, mas pode ser uma carga segura ou recuperação de dados se o Excel já tentou abrir o arquivo.</span><span class="sxs-lookup"><span data-stu-id="f1c25-192">The default behavior if no value is specified is usually normal, but may be safe load or data recovery if Excel has already attempted to open the file.</span></span> <span data-ttu-id="f1c25-193">A primeira tentativa é normal.</span><span class="sxs-lookup"><span data-stu-id="f1c25-193">The first attempt is normal.</span></span> <span data-ttu-id="f1c25-194">Se o Excel parar de operar ao abrir o arquivo, a segunda tentativa será de carregamento seguro.</span><span class="sxs-lookup"><span data-stu-id="f1c25-194">If Excel stops operating while opening the file, the second attempt is safe load.</span></span> <span data-ttu-id="f1c25-195">Se o Excel parar de operar novamente, a próxima tentativa será a recuperação de dados.</span><span class="sxs-lookup"><span data-stu-id="f1c25-195">If Excel again stops operating, the next attempt is data recovery.</span></span></param>
        <summary><span data-ttu-id="f1c25-196">Abre uma pasta de trabalho.</span><span class="sxs-lookup"><span data-stu-id="f1c25-196">Opens a workbook.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="f1c25-197">Por padrão, as macros são habilitadas na abertura programática dos arquivos.</span><span class="sxs-lookup"><span data-stu-id="f1c25-197">By default, macros are enabled when opening files programmatically.</span></span> <span data-ttu-id="f1c25-198">Use a <see cref="P:Microsoft.Office.Interop.Excel._Application.AutomationSecurity" /> propriedade para definir o modo de segurança de macro usado ao abrir arquivos de forma programática.</span><span class="sxs-lookup"><span data-stu-id="f1c25-198">Use the <see cref="P:Microsoft.Office.Interop.Excel._Application.AutomationSecurity" /> property to set the macro security mode used when opening files programmatically.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenDatabase">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook OpenDatabase (string Filename, object CommandText, object CommandType, object BackgroundQuery, object ImportDataAs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Workbook OpenDatabase([in]string Filename, [in]object CommandText, [in]object CommandType, [in]object BackgroundQuery, [in]object ImportDataAs) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.OpenDatabase(System.String,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenDatabase (Filename As String, Optional CommandText As Object, Optional CommandType As Object, Optional BackgroundQuery As Object, Optional ImportDataAs As Object) As Workbook" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2067)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="CommandText" Type="System.Object" />
        <Parameter Name="CommandType" Type="System.Object" />
        <Parameter Name="BackgroundQuery" Type="System.Object" />
        <Parameter Name="ImportDataAs" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename"><span data-ttu-id="f1c25-199"><b>String</b> necessário.</span><span class="sxs-lookup"><span data-stu-id="f1c25-199">Required <b>String</b>.</span></span> <span data-ttu-id="f1c25-200">A sequência de caracteres da conexão.</span><span class="sxs-lookup"><span data-stu-id="f1c25-200">The connection string.</span></span></param>
        <param name="CommandText"><span data-ttu-id="f1c25-201">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="f1c25-201">Optional <b>Object</b>.</span></span> <span data-ttu-id="f1c25-202">O texto do comando da consulta.</span><span class="sxs-lookup"><span data-stu-id="f1c25-202">The command text of the query.</span></span></param>
        <param name="CommandType"><span data-ttu-id="f1c25-203">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="f1c25-203">Optional <b>Object</b>.</span></span> <span data-ttu-id="f1c25-204">O tipo de comando da consulta.</span><span class="sxs-lookup"><span data-stu-id="f1c25-204">The command type of the query.</span></span> <span data-ttu-id="f1c25-205">Os seguintes tipos de comando estão disponíveis: Default, SQL e Table.</span><span class="sxs-lookup"><span data-stu-id="f1c25-205">The following command types are available: Default, SQL, and Table.</span></span></param>
        <param name="BackgroundQuery"><span data-ttu-id="f1c25-206">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="f1c25-206">Optional <b>Object</b>.</span></span> <span data-ttu-id="f1c25-207">O plano de fundo da consulta.</span><span class="sxs-lookup"><span data-stu-id="f1c25-207">The background of the query.</span></span></param>
        <param name="ImportDataAs"><span data-ttu-id="f1c25-208">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="f1c25-208">Optional <b>Object</b>.</span></span> <span data-ttu-id="f1c25-209">Determina o formato da consulta.</span><span class="sxs-lookup"><span data-stu-id="f1c25-209">Determines the format of the query.</span></span></param>
        <summary><span data-ttu-id="f1c25-210">Retorna um objeto <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> que representa um banco de dados.</span><span class="sxs-lookup"><span data-stu-id="f1c25-210">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object representing a database.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenText">
      <MemberSignature Language="C#" Value="public void OpenText (string Filename, object Origin, object StartRow, object DataType, Microsoft.Office.Interop.Excel.XlTextQualifier TextQualifier = Microsoft.Office.Interop.Excel.XlTextQualifier.xlTextQualifierDoubleQuote, object ConsecutiveDelimiter, object Tab, object Semicolon, object Comma, object Space, object Other, object OtherChar, object FieldInfo, object TextVisualLayout, object DecimalSeparator, object ThousandsSeparator, object TrailingMinusNumbers, object Local);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OpenText([in]string Filename, [in]object Origin, [in]object StartRow, [in]object DataType, [in]valuetype Microsoft.Office.Interop.Excel.XlTextQualifier TextQualifier, [in]object ConsecutiveDelimiter, [in]object Tab, [in]object Semicolon, [in]object Comma, [in]object Space, [in]object Other, [in]object OtherChar, [in]object FieldInfo, [in]object TextVisualLayout, [in]object DecimalSeparator, [in]object ThousandsSeparator, [in]object TrailingMinusNumbers, [in]object Local) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.OpenText(System.String,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlTextQualifier,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OpenText (Filename As String, Optional Origin As Object, Optional StartRow As Object, Optional DataType As Object, Optional TextQualifier As XlTextQualifier = Microsoft.Office.Interop.Excel.XlTextQualifier.xlTextQualifierDoubleQuote, Optional ConsecutiveDelimiter As Object, Optional Tab As Object, Optional Semicolon As Object, Optional Comma As Object, Optional Space As Object, Optional Other As Object, Optional OtherChar As Object, Optional FieldInfo As Object, Optional TextVisualLayout As Object, Optional DecimalSeparator As Object, Optional ThousandsSeparator As Object, Optional TrailingMinusNumbers As Object, Optional Local As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1924)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(18)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="Origin" Type="System.Object" />
        <Parameter Name="StartRow" Type="System.Object" />
        <Parameter Name="DataType" Type="System.Object" />
        <Parameter Name="TextQualifier" Type="Microsoft.Office.Interop.Excel.XlTextQualifier" />
        <Parameter Name="ConsecutiveDelimiter" Type="System.Object" />
        <Parameter Name="Tab" Type="System.Object" />
        <Parameter Name="Semicolon" Type="System.Object" />
        <Parameter Name="Comma" Type="System.Object" />
        <Parameter Name="Space" Type="System.Object" />
        <Parameter Name="Other" Type="System.Object" />
        <Parameter Name="OtherChar" Type="System.Object" />
        <Parameter Name="FieldInfo" Type="System.Object" />
        <Parameter Name="TextVisualLayout" Type="System.Object" />
        <Parameter Name="DecimalSeparator" Type="System.Object" />
        <Parameter Name="ThousandsSeparator" Type="System.Object" />
        <Parameter Name="TrailingMinusNumbers" Type="System.Object" />
        <Parameter Name="Local" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename"><span data-ttu-id="f1c25-211"><b>String</b> necessário.</span><span class="sxs-lookup"><span data-stu-id="f1c25-211">Required <b>String</b>.</span></span> <span data-ttu-id="f1c25-212">Especifica o nome do arquivo de texto a ser aberto ou analisado.</span><span class="sxs-lookup"><span data-stu-id="f1c25-212">Specifies the file name of the text file to be opened and parsed.</span></span></param>
        <param name="Origin"><span data-ttu-id="f1c25-213">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="f1c25-213">Optional <b>Object</b>.</span></span> <span data-ttu-id="f1c25-214">Especifica a origem do arquivo de texto.</span><span class="sxs-lookup"><span data-stu-id="f1c25-214">Specifies the origin of the text file.</span></span> <span data-ttu-id="f1c25-215">Pode ser uma das seguintes <see cref="T:Microsoft.Office.Interop.Excel.XlPlatform" /> constantes: <b>xlMacintosh</b>, <b>xlWindows</b>ou <b>xlMSDOS</b>.</span><span class="sxs-lookup"><span data-stu-id="f1c25-215">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlPlatform" /> constants: <b>xlMacintosh</b>, <b>xlWindows</b>, or <b>xlMSDOS</b>.</span></span> <span data-ttu-id="f1c25-216">Adicionalmente, poderia ser um inteiro representando o número da página de código da página de código desejada.</span><span class="sxs-lookup"><span data-stu-id="f1c25-216">Additionally, this could be an integer representing the code page number of the desired code page.</span></span> <span data-ttu-id="f1c25-217">Por exemplo, "1256" especificaria que a codificação do arquivo de texto de origem é Árabe (Windows).</span><span class="sxs-lookup"><span data-stu-id="f1c25-217">For example, "1256" would specify that the encoding of the source text file is Arabic (Windows).</span></span> <span data-ttu-id="f1c25-218">Se esse argumento for omitido, o método usará a configuração atual da opção Origem do Arquivo no <b>Assistente de Importação de Texto</b>.</span><span class="sxs-lookup"><span data-stu-id="f1c25-218">If this argument is omitted, the method uses the current setting of the File Origin option in the <b>Text Import Wizard</b>.</span></span></param>
        <param name="StartRow"><span data-ttu-id="f1c25-219">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="f1c25-219">Optional <b>Object</b>.</span></span> <span data-ttu-id="f1c25-220">O número da linha na qual o texto começa a ser analisado.</span><span class="sxs-lookup"><span data-stu-id="f1c25-220">The row number at which to start parsing text.</span></span> <span data-ttu-id="f1c25-221">O valor padrão é 1.</span><span class="sxs-lookup"><span data-stu-id="f1c25-221">The default value is 1.</span></span></param>
        <param name="DataType"><span data-ttu-id="f1c25-222">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="f1c25-222">Optional <b>Object</b>.</span></span> <span data-ttu-id="f1c25-223">Especifica o formato da coluna dos dados no arquivo.</span><span class="sxs-lookup"><span data-stu-id="f1c25-223">Specifies the column format of the data in the file.</span></span> <span data-ttu-id="f1c25-224">Pode ser uma das seguintes <see cref="T:Microsoft.Office.Interop.Excel.XlTextParsingType" /> constantes: <b>xlDelimited</b> ou <b>xlFixedWidth</b>.</span><span class="sxs-lookup"><span data-stu-id="f1c25-224">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlTextParsingType" /> constants: <b>xlDelimited</b> or <b>xlFixedWidth</b>.</span></span> <span data-ttu-id="f1c25-225">Se esse argumento não for especificado, o Microsoft Excel tentará determinar o formato da coluna quando abrir o arquivo.</span><span class="sxs-lookup"><span data-stu-id="f1c25-225">If this argument is not specified, Microsoft Excel attempts to determine the column format when it opens the file.</span></span></param>
        <param name="TextQualifier"><span data-ttu-id="f1c25-226">Opcional <see cref="T:Microsoft.Office.Interop.Excel.XlTextQualifier" /> .</span><span class="sxs-lookup"><span data-stu-id="f1c25-226">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlTextQualifier" />.</span></span> <span data-ttu-id="f1c25-227">Especifica o qualificador do texto.</span><span class="sxs-lookup"><span data-stu-id="f1c25-227">Specifies the text qualifier.</span></span> <span data-ttu-id="f1c25-228">Pode ser uma destas <see cref="T:Microsoft.Office.Interop.Excel.XlTextQualifier" /> constantes.<b> xlTextQualifierDoubleQuote</b> <paramref name="default" /> <b>xlTextQualifierNone</b><b>xlTextQualifierSingleQuote</b></span><span class="sxs-lookup"><span data-stu-id="f1c25-228">Can be one of these <see cref="T:Microsoft.Office.Interop.Excel.XlTextQualifier" /> constants.<b>xlTextQualifierDoubleQuote</b><paramref name="default" /><b>xlTextQualifierNone</b><b>xlTextQualifierSingleQuote</b></span></span></param>
        <param name="ConsecutiveDelimiter"><span data-ttu-id="f1c25-229">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="f1c25-229">Optional <b>Object</b>.</span></span> <span data-ttu-id="f1c25-230"><b>True</b> para ter delimitadores consecutivos considerados como um delimitador.</span><span class="sxs-lookup"><span data-stu-id="f1c25-230"><b>True</b> to have consecutive delimiters considered one delimiter.</span></span> <span data-ttu-id="f1c25-231">O padrão é <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="f1c25-231">The default is <b>False</b>.</span></span></param>
        <param name="Tab"><span data-ttu-id="f1c25-232">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="f1c25-232">Optional <b>Object</b>.</span></span> <span data-ttu-id="f1c25-233">True para ter o caractere de tabulação como olimiter ( <paramref name="DataType" /> deve ser <b>xlDelimited</b>).</span><span class="sxs-lookup"><span data-stu-id="f1c25-233">True to have the tab character be the delimiter (<paramref name="DataType" /> must be <b>xlDelimited</b>).</span></span> <span data-ttu-id="f1c25-234">O valor padrão é <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="f1c25-234">The default value is <b>False</b>.</span></span></param>
        <param name="Semicolon"><span data-ttu-id="f1c25-235">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="f1c25-235">Optional <b>Object</b>.</span></span> <span data-ttu-id="f1c25-236"><b>True</b> para ter o caractere de ponto-e-vírgula como o delimiter ( <paramref name="DataType" /> deve ser <b>xlDelimited</b>).</span><span class="sxs-lookup"><span data-stu-id="f1c25-236"><b>True</b> to have the semicolon character be the delimiter (<paramref name="DataType" /> must be <b>xlDelimited</b>).</span></span> <span data-ttu-id="f1c25-237">O valor padrão é <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="f1c25-237">The default value is <b>False</b>.</span></span></param>
        <param name="Comma"><span data-ttu-id="f1c25-238">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="f1c25-238">Optional <b>Object</b>.</span></span> <span data-ttu-id="f1c25-239"><b>True</b> para ter o caractere de vírgula como olimiter ( <paramref name="DataType" /> deve ser <b>xlDelimited</b>).</span><span class="sxs-lookup"><span data-stu-id="f1c25-239"><b>True</b> to have the comma character be the delimiter (<paramref name="DataType" /> must be <b>xlDelimited</b>).</span></span> <span data-ttu-id="f1c25-240">O valor padrão é <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="f1c25-240">The default value is <b>False</b>.</span></span></param>
        <param name="Space"><span data-ttu-id="f1c25-241">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="f1c25-241">Optional <b>Object</b>.</span></span> <span data-ttu-id="f1c25-242"><b>True</b> para ter o caractere de espaço como olimiter ( <paramref name="DataType" /> deve ser <b>xlDelimited</b>).</span><span class="sxs-lookup"><span data-stu-id="f1c25-242"><b>True</b> to have the space character be the delimiter (<paramref name="DataType" /> must be <b>xlDelimited</b>).</span></span> <span data-ttu-id="f1c25-243">O valor padrão é <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="f1c25-243">The default value is <b>False</b>.</span></span></param>
        <param name="Other"><span data-ttu-id="f1c25-244">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="f1c25-244">Optional <b>Object</b>.</span></span> <span data-ttu-id="f1c25-245"><b>True</b> para ter o caractere especificado pelo argumento como o <paramref name="OtherChar" /> delimiter ( <paramref name="DataType" /> deve ser <b>xlDelimited</b>).</span><span class="sxs-lookup"><span data-stu-id="f1c25-245"><b>True</b> to have the character specified by the <paramref name="OtherChar" /> argument be the delimiter (<paramref name="DataType" /> must be <b>xlDelimited</b>).</span></span> <span data-ttu-id="f1c25-246">O valor padrão é <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="f1c25-246">The default value is <b>False</b>.</span></span></param>
        <param name="OtherChar"><span data-ttu-id="f1c25-247">Objeto <b>opcional</b> (obrigatório se <paramref name="Other" /> for <b>True</b>).</span><span class="sxs-lookup"><span data-stu-id="f1c25-247">Optional <b>Object</b> (required if <paramref name="Other" /> is <b>True</b>).</span></span> <span data-ttu-id="f1c25-248">Especifica o caractere do delimiter quando <paramref name="Other" /> for <b>True</b>.</span><span class="sxs-lookup"><span data-stu-id="f1c25-248">Specifies the delimiter character when <paramref name="Other" /> is <b>True</b>.</span></span> <span data-ttu-id="f1c25-249">Se mais de um caractere for especificado, somente o primeiro caractere da cadeia de caracteres será usado; os caracteres restantes será ignorado.</span><span class="sxs-lookup"><span data-stu-id="f1c25-249">If more than one character is specified, only the first character of the string is used; the remaining characters are ignored.</span></span></param>
        <param name="FieldInfo"><span data-ttu-id="f1c25-250">Opcional <see cref="T:Microsoft.Office.Interop.Excel.XlColumnDataType" /> .</span><span class="sxs-lookup"><span data-stu-id="f1c25-250">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlColumnDataType" />.</span></span> <span data-ttu-id="f1c25-251">Uma matriz com informações de análise para colunas de dados individuais.</span><span class="sxs-lookup"><span data-stu-id="f1c25-251">An array containing parse information for individual columns of data.</span></span> <span data-ttu-id="f1c25-252">A interpretação depende do valor de <paramref name="DataType" /> .</span><span class="sxs-lookup"><span data-stu-id="f1c25-252">The interpretation depends on the value of <paramref name="DataType" />.</span></span> <span data-ttu-id="f1c25-253">Quando os dados forem delimitados, esse argumento será uma matriz de matrizes de dois elementos, com cada matriz de dois elementos especificando as opções de conversão para uma coluna em particular.</span><span class="sxs-lookup"><span data-stu-id="f1c25-253">When the data is delimited, this argument is an array of two-element arrays, with each two-element array specifying the conversion options for a particular column.</span></span> <span data-ttu-id="f1c25-254">O primeiro elemento é o número da coluna (baseado em 1) e o segundo elemento é uma das constantes<b>XlColumnDataType</b> que especificam como a coluna é analisado. <b>xlGeneralFormat</b> General<b>xlTextFormat</b> Text<b>xlMDYFormat</b> MDY date<b>xlDMYFormat</b> DMY date<b>xlYMDFormat</b> YMD date<b>xlMYDFormat</b> MYD date<b>xlDYMFormat</b> DYM date<b>xlYDMFormat</b> YDM date<b>xlEMDFormat</b> EMD date<b>xlSkipColumn</b> Skip ColumnYou can use <b>xlEMDFormat</b> only if you have installed and selected Taiwanese language support.</span><span class="sxs-lookup"><span data-stu-id="f1c25-254">The first element is the column number (1-based), and the second element is one of the<b>XlColumnDataType</b> constants specifying how the column is parsed.<b>xlGeneralFormat</b> General<b>xlTextFormat</b> Text<b>xlMDYFormat</b> MDY date<b>xlDMYFormat</b> DMY date<b>xlYMDFormat</b> YMD date<b>xlMYDFormat</b> MYD date<b>xlDYMFormat</b> DYM date<b>xlYDMFormat</b> YDM date<b>xlEMDFormat</b> EMD date<b>xlSkipColumn</b> Skip ColumnYou can use <b>xlEMDFormat</b> only if you have installed and selected Taiwanese language support.</span></span> <span data-ttu-id="f1c25-255">A <b>constante xlEMDFormat</b> especifica que as datas da era taiwanesa estão sendo usadas. Os especificadores de coluna podem estar em qualquer ordem.</span><span class="sxs-lookup"><span data-stu-id="f1c25-255">The <b>xlEMDFormat</b> constant specifies that Taiwanese era dates are being used.The column specifiers can be in any order.</span></span> <span data-ttu-id="f1c25-256">Se não houver um especificador de coluna para uma coluna específica nos dados de entrada, a coluna será analisado com a configuração Geral. <b>Observações</b> Se você especificar que uma coluna deve ser ignorada, deverá indicar explicitamente o tipo de todas as colunas restantes ou os dados não serão analisados corretamente. Se houver uma data reconhecível nos dados, a célula será formatada como uma data na planilha, mesmo se a configuração da coluna for Geral.</span><span class="sxs-lookup"><span data-stu-id="f1c25-256">If there's no column specifier for a particular column in the input data, the column is parsed with the General setting.<b>Notes</b>If you specify that a column is to be skipped, you must explicitly state the type for all remaining columns or the data will not parse correctly.If there is a recognizable date in the data, the cell will be formatted as a date in the worksheet even if the setting for the column is General.</span></span> <span data-ttu-id="f1c25-257">Além disso, se você especificar um dos formatos de data acima para uma coluna e os dados não contêm uma data reconhecida, o formato da célula na planilha será Geral.Se os dados de origem têm colunas de largura fixa, o primeiro elemento em cada matriz de dois elementos especifica a posição do caractere inicial na coluna (como um inteiro; caractere 0 (zero) é o primeiro caractere).</span><span class="sxs-lookup"><span data-stu-id="f1c25-257">Additionally, if you specify one of the above date formats for a column and the data does not contain a recognized date, then the cell format in the worksheet will be General.If the source data has fixed-width columns, the first element in each two-element array specifies the position of the starting character in the column (as an integer; character 0 (zero) is the first character).</span></span> <span data-ttu-id="f1c25-258">O segundo elemento da matriz de dois elementos especifica a opção de análise para a coluna como um número entre 0 e 9, como listado na tabela anterior.</span><span class="sxs-lookup"><span data-stu-id="f1c25-258">The second element in the two-element array specifies the parse option for the column as a number between 0 and 9, as listed in the preceding table.</span></span></param>
        <param name="TextVisualLayout"><span data-ttu-id="f1c25-259">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="f1c25-259">Optional <b>Object</b>.</span></span> <span data-ttu-id="f1c25-260">O layout visual do texto.</span><span class="sxs-lookup"><span data-stu-id="f1c25-260">The visual layout of the text.</span></span></param>
        <param name="DecimalSeparator"><span data-ttu-id="f1c25-261">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="f1c25-261">Optional <b>Object</b>.</span></span> <span data-ttu-id="f1c25-262">O separador decimal que o Microsoft Excel usa ao reconhecer números.</span><span class="sxs-lookup"><span data-stu-id="f1c25-262">The decimal separator that Microsoft Excel uses when recognizing numbers.</span></span> <span data-ttu-id="f1c25-263">A configuração padrão é a configuração do sistema.</span><span class="sxs-lookup"><span data-stu-id="f1c25-263">The default setting is the system setting.</span></span></param>
        <param name="ThousandsSeparator"><span data-ttu-id="f1c25-264">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="f1c25-264">Optional <b>Object</b>.</span></span> <span data-ttu-id="f1c25-265">O separador de milhares que o Excel usa ao reconhecer números.</span><span class="sxs-lookup"><span data-stu-id="f1c25-265">The thousands separator that Excel uses when recognizing numbers.</span></span> <span data-ttu-id="f1c25-266">A configuração padrão é a configuração do sistema. A tabela a seguir mostra os resultados da importação de texto para o Excel para várias configurações de importação.</span><span class="sxs-lookup"><span data-stu-id="f1c25-266">The default setting is the system setting.The following table shows the results of importing text into Excel for various import settings.</span></span> <span data-ttu-id="f1c25-267">Os resultados numéricos são exibidos na coluna mais à direita.</span><span class="sxs-lookup"><span data-stu-id="f1c25-267">Numeric results are displayed in the rightmost column.</span></span></param>
        <param name="TrailingMinusNumbers"><span data-ttu-id="f1c25-268">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="f1c25-268">Optional <b>Object</b>.</span></span></param>
        <param name="Local"><span data-ttu-id="f1c25-269">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="f1c25-269">Optional <b>Object</b>.</span></span></param>
        <summary><span data-ttu-id="f1c25-270">Carrega e analisa um arquivo de texto como uma nova pasta de trabalho com uma única planilha que contém os dados de arquivo de texto analisados.</span><span class="sxs-lookup"><span data-stu-id="f1c25-270">Loads and parses a text file as a new workbook with a single sheet that contains the parsed text-file data.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenXML">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook OpenXML (string Filename, object Stylesheets, object LoadOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Workbook OpenXML([in]string Filename, [in]object Stylesheets, [in]object LoadOption) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.OpenXML(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenXML (Filename As String, Optional Stylesheets As Object, Optional LoadOption As Object) As Workbook" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2280)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="Stylesheets" Type="System.Object" />
        <Parameter Name="LoadOption" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename"><span data-ttu-id="f1c25-271"><b>String</b> necessário.</span><span class="sxs-lookup"><span data-stu-id="f1c25-271">Required <b>String</b>.</span></span> <span data-ttu-id="f1c25-272">O nome do arquivo a ser aberto.</span><span class="sxs-lookup"><span data-stu-id="f1c25-272">The name of the file to open.</span></span></param>
        <param name="Stylesheets"><span data-ttu-id="f1c25-273">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="f1c25-273">Optional <b>Object</b>.</span></span> <span data-ttu-id="f1c25-274">Um único valor ou uma matriz de valores que especificam quais instruções de processamento de folha de estilos XSL Transformation (XSLT) devem ser aplicadas.</span><span class="sxs-lookup"><span data-stu-id="f1c25-274">Either a single value or an array of values that specify which XSL Transformation (XSLT) style sheet processing instructions to apply.</span></span></param>
        <param name="LoadOption"><span data-ttu-id="f1c25-275">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="f1c25-275">Optional <b>Object</b>.</span></span> <span data-ttu-id="f1c25-276">Especifica como o Excel abre o arquivo de dados XML.</span><span class="sxs-lookup"><span data-stu-id="f1c25-276">Specifies how Excel opens the XML data file.</span></span> <span data-ttu-id="f1c25-277">Pode ser uma destas <see cref="T:Microsoft.Office.Interop.Excel.XlXmlLoadOption" /> constantes:<b>xlXmlLoadImportToList</b> coloca o conteúdo do arquivo de dados XML em uma lista XML.<b> xlXmlLoadMapXml</b> Exibe o esquema do arquivo de dados XML no painel de tarefas <b>Estrutura XML.</b> <b>xlXmlLoadOpenXml</b> Abre o arquivo de dados XML.</span><span class="sxs-lookup"><span data-stu-id="f1c25-277">Can be one of these <see cref="T:Microsoft.Office.Interop.Excel.XlXmlLoadOption" /> constants:<b>xlXmlLoadImportToList</b> Places the contents of the XML data file in an XML list.<b>xlXmlLoadMapXml</b> Displays the schema of the XML data file in the <b>XML Structure</b> task pane.<b>xlXmlLoadOpenXml</b> Opens the XML data file.</span></span> <span data-ttu-id="f1c25-278">O conteúdo do arquivo será achatado. <b>xlXmlLoadPromptUser</b> Solicita que o usuário escolha como abrir o arquivo.</span><span class="sxs-lookup"><span data-stu-id="f1c25-278">The contents of the file will be flattened.<b>xlXmlLoadPromptUser</b> Prompts the user to choose how to open the file.</span></span></param>
        <summary><span data-ttu-id="f1c25-279">Abre um arquivo de dados XML.</span><span class="sxs-lookup"><span data-stu-id="f1c25-279">Opens an XML data file.</span></span> <span data-ttu-id="f1c25-280">Retorna um <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> objeto.</span><span class="sxs-lookup"><span data-stu-id="f1c25-280">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="f1c25-281">Recursos XML, exceto para salvar arquivos no formato de Planilha XML, estão disponíveis somente no Microsoft Office Professional Edition 2003 e no Microsoft Office Excel 2003.</span><span class="sxs-lookup"><span data-stu-id="f1c25-281">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Workbooks.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f1c25-282">Retorna o objeto pai do objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="f1c25-282">Returns the parent object for the specified object.</span></span> <span data-ttu-id="f1c25-283">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="f1c25-283">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>