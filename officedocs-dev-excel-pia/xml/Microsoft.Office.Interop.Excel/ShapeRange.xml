<Type Name="ShapeRange" FullName="Microsoft.Office.Interop.Excel.ShapeRange">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ffea79e6ef3bb0175b91650070af45326d337d7f" /><Meta Name="ms.sourcegitcommit" Value="f58b07bd9753015d401a69461f61bc174edee843" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="01/27/2021" /><Meta Name="ms.locfileid" Value="50010315" /></Metadata><TypeSignature Language="C#" Value="public interface ShapeRange : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ShapeRange implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.ShapeRange" />
  <TypeSignature Language="VB.NET" Value="Public Interface ShapeRange&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class ShapeRange : System::Collections::IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("0002443B-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="a86b5-101">Representa um intervalo de formas, que é um conjunto de formas em um documento.</span><span class="sxs-lookup"><span data-stu-id="a86b5-101">Represents a shape range, which is a set of shapes on a document.</span></span></summary>
    <remarks><para><span data-ttu-id="a86b5-102">Um intervalo de formas pode conter apenas uma forma ou todas as formas do documento.</span><span class="sxs-lookup"><span data-stu-id="a86b5-102">A shape range can contain as few as a single shape or as many as all the shapes on the document.</span></span> <span data-ttu-id="a86b5-103">Você pode incluir as formas que desejar  escolhidas entre todas as formas no documento ou todas as formas da seleção  para construir um intervalo de formas.</span><span class="sxs-lookup"><span data-stu-id="a86b5-103">You can include whichever shapes you want — chosen from among all the shapes on the document or all the shapes in the selection — to construct a shape range.</span></span> <span data-ttu-id="a86b5-104">Por exemplo, você pode construir uma coleção que contenha as três primeiras formas em um documento, todas as formas selecionadas em um documento ou todas as formas <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> livres em um documento.</span><span class="sxs-lookup"><span data-stu-id="a86b5-104">For example, you could construct a <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> collection that contains the first three shapes on a document, all the selected shapes on a document, or all the freeforms on a document.</span></span></para>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="_Default">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shape _Default (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Shape _Default([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ShapeRange._Default(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _Default (Index As Object) As Shape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::Shape ^ _Default(System::Object ^ Index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary><span data-ttu-id="a86b5-105">Reservado para uso interno.</span><span class="sxs-lookup"><span data-stu-id="a86b5-105">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Adjustments">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Adjustments Adjustments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Adjustments Adjustments" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.Adjustments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Adjustments As Adjustments" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Adjustments ^ Adjustments { Microsoft::Office::Interop::Excel::Adjustments ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1691)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1691)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Adjustments</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a86b5-106">Retorna um objeto que contém valores de ajuste para todos <see cref="T:Microsoft.Office.Interop.Excel.Adjustments" /> os ajustes na forma especificada.</span><span class="sxs-lookup"><span data-stu-id="a86b5-106">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Adjustments" /> object that contains adjustment values for all the adjustments in the specified shape.</span></span> <span data-ttu-id="a86b5-107">Aplica-se a <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> qualquer objeto que represente uma AutoShape, WordArt ou um conector.</span><span class="sxs-lookup"><span data-stu-id="a86b5-107">Applies to any <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> object that represents an AutoShape, WordArt, or a connector.</span></span> <span data-ttu-id="a86b5-108">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="a86b5-108">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Align">
      <MemberSignature Language="C#" Value="public void Align (Microsoft.Office.Core.MsoAlignCmd AlignCmd, Microsoft.Office.Core.MsoTriState RelativeTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Align([in]valuetype Microsoft.Office.Core.MsoAlignCmd AlignCmd, [in]valuetype Microsoft.Office.Core.MsoTriState RelativeTo) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ShapeRange.Align(Microsoft.Office.Core.MsoAlignCmd,Microsoft.Office.Core.MsoTriState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Align (AlignCmd As MsoAlignCmd, RelativeTo As MsoTriState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Align(Microsoft::Office::Core::MsoAlignCmd AlignCmd, Microsoft::Office::Core::MsoTriState RelativeTo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1740)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="AlignCmd" Type="Microsoft.Office.Core.MsoAlignCmd" />
        <Parameter Name="RelativeTo" Type="Microsoft.Office.Core.MsoTriState" />
      </Parameters>
      <Docs>
        <param name="AlignCmd"><span data-ttu-id="a86b5-109">Obrigatório. <see cref="T:Microsoft.Office.Core.MsoAlignCmd" /></span><span class="sxs-lookup"><span data-stu-id="a86b5-109">Required <see cref="T:Microsoft.Office.Core.MsoAlignCmd" />.</span></span> <span data-ttu-id="a86b5-110">Especifica como as formas no intervalo de formas especificado devem ser alinhadas.</span><span class="sxs-lookup"><span data-stu-id="a86b5-110">Specifies the way the shapes in the specified shape range are to be aligned.</span></span></param>
        <param name="RelativeTo"><span data-ttu-id="a86b5-111">Obrigatório. <see cref="T:Microsoft.Office.Core.MsoTriState" /></span><span class="sxs-lookup"><span data-stu-id="a86b5-111">Required <see cref="T:Microsoft.Office.Core.MsoTriState" />.</span></span> <span data-ttu-id="a86b5-112">Não é usado no Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="a86b5-112">Not used in Microsoft Excel.</span></span> <span data-ttu-id="a86b5-113">Deve ser <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="a86b5-113">Must be <b>False</b>.</span></span></param>
        <summary><span data-ttu-id="a86b5-114">Alinha as formas no intervalo especificado de formas.</span><span class="sxs-lookup"><span data-stu-id="a86b5-114">Aligns the shapes in the specified range of shapes.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AlternativeText">
      <MemberSignature Language="C#" Value="public string AlternativeText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AlternativeText" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.AlternativeText" />
      <MemberSignature Language="VB.NET" Value="Public Property AlternativeText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AlternativeText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1891)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1891)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1891)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a86b5-115">Retorna ou define a cadeia de caracteres de texto descritiva (alternativa) para um objeto quando <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> o objeto é salvo em uma página da Web.</span><span class="sxs-lookup"><span data-stu-id="a86b5-115">Returns or sets the descriptive (alternative) text string for a <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> object when the object is saved to a Web page.</span></span> <span data-ttu-id="a86b5-116"><b>String</b> de leitura/gravação.</span><span class="sxs-lookup"><span data-stu-id="a86b5-116">Read/write <b>String</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="a86b5-117">O texto alternativo pode ser exibido no lugar da imagem da forma no navegador da Web ou diretamente sobre a imagem quando o ponteiro do mouse passar o mouse sobre a imagem (em navegadores que suportam esses recursos).</span><span class="sxs-lookup"><span data-stu-id="a86b5-117">The alternative text can be displayed either in place of the shape’s image in the Web browser or directly over the image when the mouse pointer hovers over the image (in browsers that support these features).</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a86b5-118">Retorna um <see cref="T:Microsoft.Office.Interop.Excel.Application" /> objeto que representa o aplicativo Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="a86b5-118">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span></span> <span data-ttu-id="a86b5-119">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="a86b5-119">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Apply">
      <MemberSignature Language="C#" Value="public void Apply ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Apply() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ShapeRange.Apply" />
      <MemberSignature Language="VB.NET" Value="Public Sub Apply ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Apply();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1675)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a86b5-120">Aplica-se à formatação da forma especificada que foi copiada usando o <see cref="M:Microsoft.Office.Interop.Excel.ShapeRange.PickUp" /> método.</span><span class="sxs-lookup"><span data-stu-id="a86b5-120">Applies to the specified shape formatting that’s been copied by using the <see cref="M:Microsoft.Office.Interop.Excel.ShapeRange.PickUp" /> method.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoShapeType">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoAutoShapeType AutoShapeType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoAutoShapeType AutoShapeType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.AutoShapeType" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoShapeType As MsoAutoShapeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoAutoShapeType AutoShapeType { Microsoft::Office::Core::MsoAutoShapeType get(); void set(Microsoft::Office::Core::MsoAutoShapeType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1693)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1693)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1693)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoAutoShapeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a86b5-121">Retorna ou define o tipo de forma do objeto especificado, que deve representar uma AutoForma que não seja uma linha, um desenho de forma livre <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> ou um conector.</span><span class="sxs-lookup"><span data-stu-id="a86b5-121">Returns or sets the shape type for the specified <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> object, which must represent an AutoShape other than a line, freeform drawing, or connector.</span></span> <span data-ttu-id="a86b5-122"><see cref="T:Microsoft.Office.Core.MsoAutoShapeType" />Leitura/gravação.</span><span class="sxs-lookup"><span data-stu-id="a86b5-122">Read/write <see cref="T:Microsoft.Office.Core.MsoAutoShapeType" />.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="a86b5-123">Quando você altera o tipo de uma forma, ela retém o tamanho, a cor e outros atributos.</span><span class="sxs-lookup"><span data-stu-id="a86b5-123">When you change the type of a shape, the shape retains its size, color, and other attributes.</span></span></para>
          <para><span data-ttu-id="a86b5-124">Use a <see cref="P:Microsoft.Office.Interop.Excel.ConnectorFormat.Type" /> propriedade do objeto para definir ou retornar o tipo de <see cref="T:Microsoft.Office.Interop.Excel.ConnectorFormat" /> conector.</span><span class="sxs-lookup"><span data-stu-id="a86b5-124">Use the <see cref="P:Microsoft.Office.Interop.Excel.ConnectorFormat.Type" /> property of the <see cref="T:Microsoft.Office.Interop.Excel.ConnectorFormat" /> object to set or return the connector type.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundStyle">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoBackgroundStyleIndex BackgroundStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoBackgroundStyleIndex BackgroundStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.BackgroundStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property BackgroundStyle As MsoBackgroundStyleIndex" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoBackgroundStyleIndex BackgroundStyle { Microsoft::Office::Core::MsoBackgroundStyleIndex get(); void set(Microsoft::Office::Core::MsoBackgroundStyleIndex value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2661)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2661)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2661)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoBackgroundStyleIndex</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a86b5-125">Retorna ou define o estilo do segundo plano.</span><span class="sxs-lookup"><span data-stu-id="a86b5-125">Returns or sets the background style.</span></span> <span data-ttu-id="a86b5-126">Leitura/gravação.</span><span class="sxs-lookup"><span data-stu-id="a86b5-126">Read/write.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Core.MsoBackgroundStyleIndex" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlackWhiteMode">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoBlackWhiteMode BlackWhiteMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoBlackWhiteMode BlackWhiteMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.BlackWhiteMode" />
      <MemberSignature Language="VB.NET" Value="Public Property BlackWhiteMode As MsoBlackWhiteMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoBlackWhiteMode BlackWhiteMode { Microsoft::Office::Core::MsoBlackWhiteMode get(); void set(Microsoft::Office::Core::MsoBlackWhiteMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1707)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1707)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1707)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoBlackWhiteMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a86b5-127">Retorna ou define um valor que indica a maneira pela qual a forma especificada aparecerá quando a apresentação for exibida em preto e branco.</span><span class="sxs-lookup"><span data-stu-id="a86b5-127">Returns or sets a value that indicates how the specified shape appears when the presentation is viewed in black-and-white mode.</span></span> <span data-ttu-id="a86b5-128"><see cref="T:Microsoft.Office.Core.MsoBlackWhiteMode" />Leitura/gravação.</span><span class="sxs-lookup"><span data-stu-id="a86b5-128">Read/write <see cref="T:Microsoft.Office.Core.MsoBlackWhiteMode" />.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Callout">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.CalloutFormat Callout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.CalloutFormat Callout" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.Callout" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Callout As CalloutFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::CalloutFormat ^ Callout { Microsoft::Office::Interop::Excel::CalloutFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1694)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1694)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.CalloutFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a86b5-129">Retorna um <see cref="T:Microsoft.Office.Interop.Excel.CalloutFormat" /> objeto que contém as propriedades de formatação de texto explicativas para a forma especificada.</span><span class="sxs-lookup"><span data-stu-id="a86b5-129">Returns a <see cref="T:Microsoft.Office.Interop.Excel.CalloutFormat" /> object that contains callout formatting properties for the specified shape.</span></span> <span data-ttu-id="a86b5-130">Aplica-se <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> a objetos que representam os explicativos de linha.</span><span class="sxs-lookup"><span data-stu-id="a86b5-130">Applies to <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> objects that represent line callouts.</span></span> <span data-ttu-id="a86b5-131">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="a86b5-131">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanvasCropBottom">
      <MemberSignature Language="C#" Value="public void CanvasCropBottom (float Increment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CanvasCropBottom([in]float32 Increment) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ShapeRange.CanvasCropBottom(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CanvasCropBottom (Increment As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CanvasCropBottom(float Increment);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2175)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Increment" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="Increment">To be added.</param>
        <summary><span data-ttu-id="a86b5-132">Reservado para uso interno.</span><span class="sxs-lookup"><span data-stu-id="a86b5-132">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanvasCropLeft">
      <MemberSignature Language="C#" Value="public void CanvasCropLeft (float Increment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CanvasCropLeft([in]float32 Increment) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ShapeRange.CanvasCropLeft(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CanvasCropLeft (Increment As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CanvasCropLeft(float Increment);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2172)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Increment" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="Increment">To be added.</param>
        <summary><span data-ttu-id="a86b5-133">Reservado para uso interno.</span><span class="sxs-lookup"><span data-stu-id="a86b5-133">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanvasCropRight">
      <MemberSignature Language="C#" Value="public void CanvasCropRight (float Increment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CanvasCropRight([in]float32 Increment) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ShapeRange.CanvasCropRight(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CanvasCropRight (Increment As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CanvasCropRight(float Increment);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2174)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Increment" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="Increment">To be added.</param>
        <summary><span data-ttu-id="a86b5-134">Reservado para uso interno.</span><span class="sxs-lookup"><span data-stu-id="a86b5-134">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanvasCropTop">
      <MemberSignature Language="C#" Value="public void CanvasCropTop (float Increment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CanvasCropTop([in]float32 Increment) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ShapeRange.CanvasCropTop(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CanvasCropTop (Increment As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CanvasCropTop(float Increment);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2173)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Increment" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="Increment">To be added.</param>
        <summary><span data-ttu-id="a86b5-135">Reservado para uso interno.</span><span class="sxs-lookup"><span data-stu-id="a86b5-135">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanvasItems">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.CanvasShapes CanvasItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.CanvasShapes CanvasItems" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.CanvasItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanvasItems As CanvasShapes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::CanvasShapes ^ CanvasItems { Microsoft::Office::Core::CanvasShapes ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2171)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2171)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.CanvasShapes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a86b5-136">Reservado para uso interno.</span><span class="sxs-lookup"><span data-stu-id="a86b5-136">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Chart">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Chart Chart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Chart Chart" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.Chart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Chart As Chart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Chart ^ Chart { Microsoft::Office::Interop::Excel::Chart ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(7)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(7)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Chart</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a86b5-137">Retorna um objeto que representa o gráfico contido no intervalo de formas.</span><span class="sxs-lookup"><span data-stu-id="a86b5-137">Returns an object that represents the chart contained in the shape range.</span></span> <span data-ttu-id="a86b5-138">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="a86b5-138">Read-only.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel._Chart" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Child">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoTriState Child { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoTriState Child" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.Child" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Child As MsoTriState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoTriState Child { Microsoft::Office::Core::MsoTriState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2169)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2169)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoTriState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a86b5-139">Retorna <b>msoTrue</b> se a forma especificada for uma forma filha ou se todas as formas em um intervalo de formas forem formas filhas de um mesmo pai.</span><span class="sxs-lookup"><span data-stu-id="a86b5-139">Returns <b>msoTrue</b> if the specified shape is a child shape or if all shapes in a shape range are child shapes of the same parent.</span></span> <span data-ttu-id="a86b5-140">Somente <see cref="T:Microsoft.Office.Core.MsoTriState" /> leitura.</span><span class="sxs-lookup"><span data-stu-id="a86b5-140">Read-only <see cref="T:Microsoft.Office.Core.MsoTriState" />.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionSiteCount">
      <MemberSignature Language="C#" Value="public int ConnectionSiteCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ConnectionSiteCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.ConnectionSiteCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConnectionSiteCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ConnectionSiteCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1695)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1695)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a86b5-141">Retorna o número de locais de conexão na forma especificada.</span><span class="sxs-lookup"><span data-stu-id="a86b5-141">Returns the number of connection sites on the specified shape.</span></span> <span data-ttu-id="a86b5-142"><b>Integer</b> somente leitura.</span><span class="sxs-lookup"><span data-stu-id="a86b5-142">Read-only <b>Integer</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Connector">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoTriState Connector { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoTriState Connector" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.Connector" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Connector As MsoTriState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoTriState Connector { Microsoft::Office::Core::MsoTriState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1696)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1696)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoTriState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a86b5-143"><b>True</b> se a forma especificada for um conector.</span><span class="sxs-lookup"><span data-stu-id="a86b5-143"><b>True</b> if the specified shape is a connector.</span></span> <span data-ttu-id="a86b5-144">Somente <see cref="T:Microsoft.Office.Core.MsoTriState" /> leitura.</span><span class="sxs-lookup"><span data-stu-id="a86b5-144">Read-only <see cref="T:Microsoft.Office.Core.MsoTriState" />.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectorFormat">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ConnectorFormat ConnectorFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ConnectorFormat ConnectorFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.ConnectorFormat" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConnectorFormat As ConnectorFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ConnectorFormat ^ ConnectorFormat { Microsoft::Office::Interop::Excel::ConnectorFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1697)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1697)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ConnectorFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a86b5-145">Retorna um <see cref="T:Microsoft.Office.Interop.Excel.ConnectorFormat" /> objeto que contém propriedades de formatação de conector.</span><span class="sxs-lookup"><span data-stu-id="a86b5-145">Returns a <see cref="T:Microsoft.Office.Interop.Excel.ConnectorFormat" /> object that contains connector formatting properties.</span></span> <span data-ttu-id="a86b5-146">Aplica-se <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> a objetos que representam conectores.</span><span class="sxs-lookup"><span data-stu-id="a86b5-146">Applies to <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> objects that represent connectors.</span></span> <span data-ttu-id="a86b5-147">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="a86b5-147">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a86b5-148">Retorna o número de objetos na coleção.</span><span class="sxs-lookup"><span data-stu-id="a86b5-148">Returns the number of objects in the collection.</span></span> <span data-ttu-id="a86b5-149"><b>Integer</b> somente leitura.</span><span class="sxs-lookup"><span data-stu-id="a86b5-149">Read-only <b>Integer</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a86b5-150">Retorna um inteiro de 32 bits que indica o aplicativo no qual esse objeto foi criado.</span><span class="sxs-lookup"><span data-stu-id="a86b5-150">Returns a 32-bit integer that indicates the application in which this object was created.</span></span> <span data-ttu-id="a86b5-151">Se o objeto foi criado no Microsoft Excel, essa propriedade retornará a sequência XCEL, que é equivalente ao número hexadecimal 5843454C.</span><span class="sxs-lookup"><span data-stu-id="a86b5-151">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span></span> <span data-ttu-id="a86b5-152">Somente <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> leitura.</span><span class="sxs-lookup"><span data-stu-id="a86b5-152">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="a86b5-153">A propriedade <b>Creator</b> foi projetada para ser usada no Microsoft Excel para Macintosh, onde cada aplicativo possui um código de criador de quatro caracteres.</span><span class="sxs-lookup"><span data-stu-id="a86b5-153">The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span></span> <span data-ttu-id="a86b5-154">Por exemplo, o Microsoft Excel possui o código de criador XCEL.</span><span class="sxs-lookup"><span data-stu-id="a86b5-154">For example, Microsoft Excel has the creator code XCEL.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ShapeRange.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(117)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a86b5-155">Exclui o objeto.</span><span class="sxs-lookup"><span data-stu-id="a86b5-155">Deletes the object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Diagram">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Diagram Diagram { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Diagram Diagram" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.Diagram" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Diagram As Diagram" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Diagram ^ Diagram { Microsoft::Office::Interop::Excel::Diagram ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2167)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2167)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Diagram</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a86b5-156">Retorna um <see cref="T:Microsoft.Office.Interop.Excel.Diagram" /> objeto que representa um diagrama.</span><span class="sxs-lookup"><span data-stu-id="a86b5-156">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Diagram" /> object representing a diagram.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiagramNode">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.DiagramNode DiagramNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.DiagramNode DiagramNode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.DiagramNode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DiagramNode As DiagramNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::DiagramNode ^ DiagramNode { Microsoft::Office::Interop::Excel::DiagramNode ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2165)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2165)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.DiagramNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a86b5-157">Retorna um <see cref="T:Microsoft.Office.Interop.Excel.DiagramNode" /> objeto que representa um nó em um diagrama.</span><span class="sxs-lookup"><span data-stu-id="a86b5-157">Returns a <see cref="T:Microsoft.Office.Interop.Excel.DiagramNode" /> object that represents a node in a diagram.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Distribute">
      <MemberSignature Language="C#" Value="public void Distribute (Microsoft.Office.Core.MsoDistributeCmd DistributeCmd, Microsoft.Office.Core.MsoTriState RelativeTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Distribute([in]valuetype Microsoft.Office.Core.MsoDistributeCmd DistributeCmd, [in]valuetype Microsoft.Office.Core.MsoTriState RelativeTo) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ShapeRange.Distribute(Microsoft.Office.Core.MsoDistributeCmd,Microsoft.Office.Core.MsoTriState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Distribute (DistributeCmd As MsoDistributeCmd, RelativeTo As MsoTriState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Distribute(Microsoft::Office::Core::MsoDistributeCmd DistributeCmd, Microsoft::Office::Core::MsoTriState RelativeTo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1742)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="DistributeCmd" Type="Microsoft.Office.Core.MsoDistributeCmd" />
        <Parameter Name="RelativeTo" Type="Microsoft.Office.Core.MsoTriState" />
      </Parameters>
      <Docs>
        <param name="DistributeCmd"><span data-ttu-id="a86b5-158">Obrigatório. <see cref="T:Microsoft.Office.Core.MsoDistributeCmd" /></span><span class="sxs-lookup"><span data-stu-id="a86b5-158">Required <see cref="T:Microsoft.Office.Core.MsoDistributeCmd" />.</span></span> <span data-ttu-id="a86b5-159">Especifica se as formas no intervalo serão distribuídas horizontal ou verticalmente.</span><span class="sxs-lookup"><span data-stu-id="a86b5-159">Specifies whether shapes in the range are to be distributed horizontally or vertically.</span></span></param>
        <param name="RelativeTo"><span data-ttu-id="a86b5-160">Obrigatório. <see cref="T:Microsoft.Office.Core.MsoTriState" /></span><span class="sxs-lookup"><span data-stu-id="a86b5-160">Required <see cref="T:Microsoft.Office.Core.MsoTriState" />.</span></span> <span data-ttu-id="a86b5-161">Não é usado no Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="a86b5-161">Not used in Microsoft Excel.</span></span> <span data-ttu-id="a86b5-162">Deve ser <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="a86b5-162">Must be <b>False</b>.</span></span></param>
        <summary><span data-ttu-id="a86b5-163">Distribui horizontal e verticalmente as formas no intervalo especificado de formas.</span><span class="sxs-lookup"><span data-stu-id="a86b5-163">Horizontally or vertically distributes the shapes in the specified range of shapes.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Duplicate">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ShapeRange Duplicate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.ShapeRange Duplicate() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ShapeRange.Duplicate" />
      <MemberSignature Language="VB.NET" Value="Public Function Duplicate () As ShapeRange" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::ShapeRange ^ Duplicate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1039)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ShapeRange</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a86b5-164">Duplica o objeto e retorna uma referência para a nova cópia.</span><span class="sxs-lookup"><span data-stu-id="a86b5-164">Duplicates the object and returns a reference to the new copy.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.FillFormat Fill { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.FillFormat Fill" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.Fill" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Fill As FillFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::FillFormat ^ Fill { Microsoft::Office::Interop::Excel::FillFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1663)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1663)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.FillFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a86b5-165">Retorna um <see cref="T:Microsoft.Office.Interop.Excel.FillFormat" /> objeto que contém propriedades de formatação de preenchimento para o gráfico ou forma especificada.</span><span class="sxs-lookup"><span data-stu-id="a86b5-165">Returns a <see cref="T:Microsoft.Office.Interop.Excel.FillFormat" /> object that contains fill formatting properties for the specified chart or shape.</span></span> <span data-ttu-id="a86b5-166">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="a86b5-166">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Flip">
      <MemberSignature Language="C#" Value="public void Flip (Microsoft.Office.Core.MsoFlipCmd FlipCmd);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Flip([in]valuetype Microsoft.Office.Core.MsoFlipCmd FlipCmd) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ShapeRange.Flip(Microsoft.Office.Core.MsoFlipCmd)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Flip (FlipCmd As MsoFlipCmd)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flip(Microsoft::Office::Core::MsoFlipCmd FlipCmd);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1676)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FlipCmd" Type="Microsoft.Office.Core.MsoFlipCmd" />
      </Parameters>
      <Docs>
        <param name="FlipCmd"><span data-ttu-id="a86b5-167">Obrigatório. <see cref="T:Microsoft.Office.Core.MsoFlipCmd" /></span><span class="sxs-lookup"><span data-stu-id="a86b5-167">Required <see cref="T:Microsoft.Office.Core.MsoFlipCmd" />.</span></span> <span data-ttu-id="a86b5-168">Especifica se a forma será invertida horizontal ou verticalmente.</span><span class="sxs-lookup"><span data-stu-id="a86b5-168">Specifies whether the shape is to be flipped horizontally or vertically.</span></span></param>
        <summary><span data-ttu-id="a86b5-169">Inverte a forma especificada ao redor de seu eixo horizontal ou vertical.</span><span class="sxs-lookup"><span data-stu-id="a86b5-169">Flips the specified shape around its horizontal or vertical axis.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ShapeRange.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-4)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Glow">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.GlowFormat Glow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.GlowFormat Glow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.Glow" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Glow As GlowFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::GlowFormat ^ Glow { Microsoft::Office::Core::GlowFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2663)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2663)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.GlowFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a86b5-170">Retorna um objeto que contém propriedades de formatação de brilho para o intervalo de formas.</span><span class="sxs-lookup"><span data-stu-id="a86b5-170">Returns an object that contains glow formatting properties for the shape range.</span></span> <span data-ttu-id="a86b5-171">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="a86b5-171">Read-only.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Core.GlowFormat" /></value>
        <remarks><para><span data-ttu-id="a86b5-172">O efeito de brilho adiciona uma borda colorida vibrante aos gráficos.</span><span class="sxs-lookup"><span data-stu-id="a86b5-172">The glow effect adds a vibrant colored edge to graphics.</span></span>  </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Group">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shape Group ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Shape Group() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ShapeRange.Group" />
      <MemberSignature Language="VB.NET" Value="Public Function Group () As Shape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::Shape ^ Group();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(46)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shape</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a86b5-173">Agrupa as formas no intervalo especificado.</span><span class="sxs-lookup"><span data-stu-id="a86b5-173">Groups the shapes in the specified range.</span></span> <span data-ttu-id="a86b5-174">Retorna as formas agrupadas como um único <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> objeto.</span><span class="sxs-lookup"><span data-stu-id="a86b5-174">Returns the grouped shapes as a single <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> object.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a86b5-175">Como um grupo de formas é tratado como uma única forma, agrupar e desagrupar formas altera o número de itens na coleção <b>Shapes</b> e altera os números de índice dos itens que vêm após os itens afetados na coleção.</span><span class="sxs-lookup"><span data-stu-id="a86b5-175">Because a group of shapes is treated as a single shape, grouping and ungrouping shapes changes the number of items in the <b>Shapes</b> collection and changes the index numbers of items that come after the affected items in the collection.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupItems">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.GroupShapes GroupItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.GroupShapes GroupItems" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.GroupItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GroupItems As GroupShapes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::GroupShapes ^ GroupItems { Microsoft::Office::Interop::Excel::GroupShapes ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1698)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1698)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.GroupShapes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a86b5-176">Retorna um <see cref="T:Microsoft.Office.Interop.Excel.GroupShapes" /> objeto que representa as formas individuais no grupo especificado.</span><span class="sxs-lookup"><span data-stu-id="a86b5-176">Returns a <see cref="T:Microsoft.Office.Interop.Excel.GroupShapes" /> object that represents the individual shapes in the specified group.</span></span> <span data-ttu-id="a86b5-177">Aplica-se <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> a objetos que representam formas agrupadas.</span><span class="sxs-lookup"><span data-stu-id="a86b5-177">Applies to <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> objects that represent grouped shapes.</span></span> <span data-ttu-id="a86b5-178">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="a86b5-178">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="a86b5-179">Use o <see cref="M:Microsoft.Office.Interop.Excel.GroupShapes.Item(System.Object)" /> método do <b>objeto GroupShapes</b> para retornar uma única forma do grupo.</span><span class="sxs-lookup"><span data-stu-id="a86b5-179">Use the <see cref="M:Microsoft.Office.Interop.Excel.GroupShapes.Item(System.Object)" /> method of the <b>GroupShapes</b> object to return a single shape from the group.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="HasChart">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoTriState HasChart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoTriState HasChart" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.HasChart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasChart As MsoTriState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoTriState HasChart { Microsoft::Office::Core::MsoTriState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2658)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2658)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoTriState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a86b5-180">Retorna informações sobre se um <see cref="P:Microsoft.Office.Interop.Excel.ShapeRange" /> contém um gráfico.</span><span class="sxs-lookup"><span data-stu-id="a86b5-180">Returns information on if a <see cref="P:Microsoft.Office.Interop.Excel.ShapeRange" /> contains a chart.</span></span> <span data-ttu-id="a86b5-181">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="a86b5-181">Read-only.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Core.MsoTriState" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasDiagram">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoTriState HasDiagram { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoTriState HasDiagram" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.HasDiagram" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasDiagram As MsoTriState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoTriState HasDiagram { Microsoft::Office::Core::MsoTriState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2168)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2168)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoTriState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a86b5-182">Retorna se uma forma ou intervalo de formas contém um diagrama.</span><span class="sxs-lookup"><span data-stu-id="a86b5-182">Returns whether a shape or shape range contains a diagram.</span></span> <span data-ttu-id="a86b5-183">Somente <see cref="T:Microsoft.Office.Core.MsoTriState" /> leitura.</span><span class="sxs-lookup"><span data-stu-id="a86b5-183">Read-only <see cref="T:Microsoft.Office.Core.MsoTriState" />.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasDiagramNode">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoTriState HasDiagramNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoTriState HasDiagramNode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.HasDiagramNode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasDiagramNode As MsoTriState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoTriState HasDiagramNode { Microsoft::Office::Core::MsoTriState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2166)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2166)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoTriState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a86b5-184">Retorna um valor indicando se um nó de diagrama existe em uma determinada forma ou intervalo de formas.</span><span class="sxs-lookup"><span data-stu-id="a86b5-184">Returns a value indicating whether a diagram node exists in a given shape or shape range.</span></span> <span data-ttu-id="a86b5-185">Somente <see cref="T:Microsoft.Office.Core.MsoTriState" /> leitura.</span><span class="sxs-lookup"><span data-stu-id="a86b5-185">Read-only <see cref="T:Microsoft.Office.Core.MsoTriState" />.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public float Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Height" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.Height" />
      <MemberSignature Language="VB.NET" Value="Public Property Height As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float Height { float get(); void set(float value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(123)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(123)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(123)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a86b5-186">A altura do objeto.</span><span class="sxs-lookup"><span data-stu-id="a86b5-186">The height of the object.</span></span> <span data-ttu-id="a86b5-187">Leitura/gravação <b>único</b>.</span><span class="sxs-lookup"><span data-stu-id="a86b5-187">Read/write <b>Single</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalFlip">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoTriState HorizontalFlip { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoTriState HorizontalFlip" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.HorizontalFlip" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HorizontalFlip As MsoTriState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoTriState HorizontalFlip { Microsoft::Office::Core::MsoTriState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1699)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1699)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoTriState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a86b5-188"><b>True</b> se a forma especificada for invertida ao redor do eixo horizontal.</span><span class="sxs-lookup"><span data-stu-id="a86b5-188"><b>True</b> if the specified shape is flipped around the horizontal axis.</span></span> <span data-ttu-id="a86b5-189">Somente <see cref="T:Microsoft.Office.Core.MsoTriState" /> leitura.</span><span class="sxs-lookup"><span data-stu-id="a86b5-189">Read-only <see cref="T:Microsoft.Office.Core.MsoTriState" />.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ID">
      <MemberSignature Language="C#" Value="public int ID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ID" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.ID" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ID As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ID { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(570)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(570)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a86b5-190">Retorna o tipo do objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="a86b5-190">Returns the type for the specified object.</span></span> <span data-ttu-id="a86b5-191"><b>Integer</b> somente leitura.</span><span class="sxs-lookup"><span data-stu-id="a86b5-191">Read-only <b>Integer</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="a86b5-192">Você pode usar um rótulo de identificação como uma referência de hiperlink em outros documentos HTML ou na mesma página da Web.</span><span class="sxs-lookup"><span data-stu-id="a86b5-192">You can use an ID label as a hyperlink reference in other HTML documents or on the same Web page.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="IncrementLeft">
      <MemberSignature Language="C#" Value="public void IncrementLeft (float Increment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void IncrementLeft([in]float32 Increment) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ShapeRange.IncrementLeft(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub IncrementLeft (Increment As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void IncrementLeft(float Increment);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1678)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Increment" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="Increment"><span data-ttu-id="a86b5-193">Obrigatório <b>Único</b>.</span><span class="sxs-lookup"><span data-stu-id="a86b5-193">Required <b>Single</b>.</span></span> <span data-ttu-id="a86b5-194">Especifica o quanto a forma deve ser movida horizontalmente em pontos.</span><span class="sxs-lookup"><span data-stu-id="a86b5-194">Specifies how far the shape is to be moved horizontally in points.</span></span> <span data-ttu-id="a86b5-195">Um valor positivo move a forma para a direita; um valor negativo a move para a esquerda.</span><span class="sxs-lookup"><span data-stu-id="a86b5-195">A positive value moves the shape to the right; a negative value moves it to the left.</span></span></param>
        <summary><span data-ttu-id="a86b5-196">Move horizontalmente a forma especificada pelo número especificado de pontos.</span><span class="sxs-lookup"><span data-stu-id="a86b5-196">Moves the specified shape horizontally by the specified number of points.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncrementRotation">
      <MemberSignature Language="C#" Value="public void IncrementRotation (float Increment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void IncrementRotation([in]float32 Increment) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ShapeRange.IncrementRotation(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub IncrementRotation (Increment As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void IncrementRotation(float Increment);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1680)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Increment" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="Increment"><span data-ttu-id="a86b5-197">Obrigatório <b>Único</b>.</span><span class="sxs-lookup"><span data-stu-id="a86b5-197">Required <b>Single</b>.</span></span> <span data-ttu-id="a86b5-198">Especifica o quanto a forma deve ser girada horizontalmente em graus.</span><span class="sxs-lookup"><span data-stu-id="a86b5-198">Specifies how far the shape is to be rotated horizontally in degrees.</span></span> <span data-ttu-id="a86b5-199">Um valor positivo gira a forma no sentido horário; um valor negativo a gira no sentido anti-horário.</span><span class="sxs-lookup"><span data-stu-id="a86b5-199">A positive value rotates the shape clockwise; a negative value rotates it counterclockwise.</span></span></param>
        <summary><span data-ttu-id="a86b5-200">Altera a rotação da forma especificada ao redor do eixo z pelo número especificado de graus.</span><span class="sxs-lookup"><span data-stu-id="a86b5-200">Changes the rotation of the specified shape around the z-axis by the specified number of degrees.</span></span> <span data-ttu-id="a86b5-201">Use a <see cref="P:Microsoft.Office.Interop.Excel.ShapeRange.Rotation" /> propriedade para definir a rotação absoluta da forma.</span><span class="sxs-lookup"><span data-stu-id="a86b5-201">Use the <see cref="P:Microsoft.Office.Interop.Excel.ShapeRange.Rotation" /> property to set the absolute rotation of the shape.</span></span></summary>
        <remarks><para><span data-ttu-id="a86b5-202">Para girar uma forma tridimensional em torno do eixo x ou do eixo y, use o <see cref="M:Microsoft.Office.Interop.Excel.ThreeDFormat.IncrementRotationX(System.Single)" /> método ou o <see cref="M:Microsoft.Office.Interop.Excel.ThreeDFormat.IncrementRotationY(System.Single)" /> método.</span><span class="sxs-lookup"><span data-stu-id="a86b5-202">To rotate a three-dimensional shape around the x-axis or the y-axis, use the <see cref="M:Microsoft.Office.Interop.Excel.ThreeDFormat.IncrementRotationX(System.Single)" /> method or the <see cref="M:Microsoft.Office.Interop.Excel.ThreeDFormat.IncrementRotationY(System.Single)" /> method.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="IncrementTop">
      <MemberSignature Language="C#" Value="public void IncrementTop (float Increment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void IncrementTop([in]float32 Increment) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ShapeRange.IncrementTop(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub IncrementTop (Increment As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void IncrementTop(float Increment);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1681)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Increment" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="Increment"><span data-ttu-id="a86b5-203">Obrigatório <b>Único</b>.</span><span class="sxs-lookup"><span data-stu-id="a86b5-203">Required <b>Single</b>.</span></span> <span data-ttu-id="a86b5-204">Especifica o quanto o objeto shape deve ser movido verticalmente em pontos.</span><span class="sxs-lookup"><span data-stu-id="a86b5-204">Specifies how far the shape object is to be moved vertically in points.</span></span> <span data-ttu-id="a86b5-205">Um valor positivo move a forma para baixo; um valor negativo a move para cima.</span><span class="sxs-lookup"><span data-stu-id="a86b5-205">A positive value moves the shape down; a negative value moves it up.</span></span></param>
        <summary><span data-ttu-id="a86b5-206">Move a forma especificada verticalmente pelo número especificado de pontos.</span><span class="sxs-lookup"><span data-stu-id="a86b5-206">Moves the specified shape vertically by the specified number of points.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shape Item (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Shape Item([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ShapeRange.Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Item (Index As Object) As Shape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::Shape ^ Item(System::Object ^ Index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="a86b5-207">Objeto <b>Required</b>.</span><span class="sxs-lookup"><span data-stu-id="a86b5-207">Required <b>Object</b>.</span></span> <span data-ttu-id="a86b5-208">O nome ou número de índice do objeto.</span><span class="sxs-lookup"><span data-stu-id="a86b5-208">The name or index number for the object.</span></span></param>
        <summary><span data-ttu-id="a86b5-209">Retorna um único objeto de uma coleção.</span><span class="sxs-lookup"><span data-stu-id="a86b5-209">Returns a single object from a collection.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a86b5-210">O nome do texto do objeto é o valor e <see cref="P:Microsoft.Office.Interop.Excel.ShapeRange.Name" /> as <see cref="P:Microsoft.Office.Interop.Excel.Range.Value(System.Object)" /> propriedades.</span><span class="sxs-lookup"><span data-stu-id="a86b5-210">The text name of the object is the value of the <see cref="P:Microsoft.Office.Interop.Excel.ShapeRange.Name" /> and <see cref="P:Microsoft.Office.Interop.Excel.Range.Value(System.Object)" /> properties.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="public float Left { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Left" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.Left" />
      <MemberSignature Language="VB.NET" Value="Public Property Left As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float Left { float get(); void set(float value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(127)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(127)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(127)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a86b5-211">A distância entre a borda esquerda do objeto e a borda esquerda da coluna A (em uma planilha) ou a borda esquerda da área do gráfico (em um gráfico).</span><span class="sxs-lookup"><span data-stu-id="a86b5-211">The distance from the left edge of the object to the left edge of column A (on a worksheet) or the left edge of the chart area (on a chart).</span></span> <span data-ttu-id="a86b5-212">Leitura/gravação <b>único</b>.</span><span class="sxs-lookup"><span data-stu-id="a86b5-212">Read/write <b>Single</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Line">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.LineFormat Line { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.LineFormat Line" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.Line" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Line As LineFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::LineFormat ^ Line { Microsoft::Office::Interop::Excel::LineFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(817)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(817)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.LineFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a86b5-213">Retorna um objeto que contém as propriedades de <see cref="T:Microsoft.Office.Interop.Excel.LineFormat" /> formatação de linha para a forma especificada.</span><span class="sxs-lookup"><span data-stu-id="a86b5-213">Returns a <see cref="T:Microsoft.Office.Interop.Excel.LineFormat" /> object that contains line formatting properties for the specified shape.</span></span> <span data-ttu-id="a86b5-214">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="a86b5-214">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="a86b5-215">Para uma linha, o objeto <b>LineFormat</b> representa a própria linha; para uma forma com uma borda, o objeto <b>LineFormat</b> representa a borda.</span><span class="sxs-lookup"><span data-stu-id="a86b5-215">For a line, the <b>LineFormat</b> object represents the line itself; for a shape with a border, the <b>LineFormat</b> object represents the border.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="LockAspectRatio">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoTriState LockAspectRatio { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoTriState LockAspectRatio" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.LockAspectRatio" />
      <MemberSignature Language="VB.NET" Value="Public Property LockAspectRatio As MsoTriState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoTriState LockAspectRatio { Microsoft::Office::Core::MsoTriState get(); void set(Microsoft::Office::Core::MsoTriState value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1700)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1700)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1700)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoTriState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a86b5-216"><b>True</b> se a forma especificada mantiver suas proporções originais após o redimensionamento.</span><span class="sxs-lookup"><span data-stu-id="a86b5-216"><b>True</b> if the specified shape retains its original proportions when you resize it.</span></span> <span data-ttu-id="a86b5-217"><b>False</b> se você puder alterar a altura e a largura da forma, separadamente, ao redimensioná-la.</span><span class="sxs-lookup"><span data-stu-id="a86b5-217"><b>False</b> if you can change the height and width of the shape independently of one another when you resize it.</span></span> <span data-ttu-id="a86b5-218"><see cref="T:Microsoft.Office.Core.MsoTriState" />Leitura/gravação.</span><span class="sxs-lookup"><span data-stu-id="a86b5-218">Read/write <see cref="T:Microsoft.Office.Core.MsoTriState" />.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a86b5-219">Retorna ou define o nome do objeto.</span><span class="sxs-lookup"><span data-stu-id="a86b5-219">Returns or sets the name of the object.</span></span> <span data-ttu-id="a86b5-220"><b>String</b> de leitura/gravação.</span><span class="sxs-lookup"><span data-stu-id="a86b5-220">Read/write <b>String</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="a86b5-221">A tabela a seguir mostra valores de exemplo da propriedade <b>Name</b> e propriedades relacionadas, pressupondo-se uma fonte de dados OLAP com o nome exclusivo "[Europe].[France].[Paris]" e uma fonte de dados não-OLAP com o nome de item "Paris".</span><span class="sxs-lookup"><span data-stu-id="a86b5-221">The following table shows example values of the <b>Name</b> property and related properties given an OLAP data source with the unique name "[Europe].[France].[Paris]" and a non-OLAP data source with the item name "Paris".</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="a86b5-222">
                <b>Legenda</b>
              </span><span class="sxs-lookup"><span data-stu-id="a86b5-222">
                <b>Caption</b>
              </span></span></term>
              <description><span data-ttu-id="a86b5-223">Paris</span><span class="sxs-lookup"><span data-stu-id="a86b5-223">Paris</span></span></description>
              <description><span data-ttu-id="a86b5-224">Paris</span><span class="sxs-lookup"><span data-stu-id="a86b5-224">Paris</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="a86b5-225">
                <b>Nome</b>
              </span><span class="sxs-lookup"><span data-stu-id="a86b5-225">
                <b>Name</b>
              </span></span></term>
              <description><span data-ttu-id="a86b5-226">[Europe].[France].[Paris] (somente leitura)</span><span class="sxs-lookup"><span data-stu-id="a86b5-226">[Europe].[France].[Paris] (read-only)</span></span></description>
              <description><span data-ttu-id="a86b5-227">Paris</span><span class="sxs-lookup"><span data-stu-id="a86b5-227">Paris</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="a86b5-228">
                <b>SourceName</b>
              </span><span class="sxs-lookup"><span data-stu-id="a86b5-228">
                <b>SourceName</b>
              </span></span></term>
              <description><span data-ttu-id="a86b5-229">[Europe].[France].[Paris] (somente leitura)</span><span class="sxs-lookup"><span data-stu-id="a86b5-229">[Europe].[France].[Paris] (read-only)</span></span></description>
              <description><span data-ttu-id="a86b5-230">(Igual ao da propriedade SQL, somente leitura)</span><span class="sxs-lookup"><span data-stu-id="a86b5-230">(Same as SQL property value, read-only)</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="a86b5-231">
                <b>Valor</b>
              </span><span class="sxs-lookup"><span data-stu-id="a86b5-231">
                <b>Value</b>
              </span></span></term>
              <description><span data-ttu-id="a86b5-232">[Europe].[France].[Paris] (somente leitura)</span><span class="sxs-lookup"><span data-stu-id="a86b5-232">[Europe].[France].[Paris] (read-only)</span></span></description>
              <description><span data-ttu-id="a86b5-233">Paris</span><span class="sxs-lookup"><span data-stu-id="a86b5-233">Paris</span></span></description>
            </item>
          </list>
          <para><span data-ttu-id="a86b5-234">Ao especificar um índice na <see cref="T:Microsoft.Office.Interop.Excel.PivotItems" /> coleção, você pode usar a sintaxe mostrada na tabela a seguir.</span><span class="sxs-lookup"><span data-stu-id="a86b5-234">When specifying an index into the <see cref="T:Microsoft.Office.Interop.Excel.PivotItems" /> collection, you can use the syntax shown in the following table.</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="a86b5-235">expressão. PivotItems("[Europe].[ França]. [Paris]")</span><span class="sxs-lookup"><span data-stu-id="a86b5-235">expression.PivotItems("[Europe].[France].[Paris]")</span></span></term>
              <description><span data-ttu-id="a86b5-236">expressão. PivotItems("Paris")</span><span class="sxs-lookup"><span data-stu-id="a86b5-236">expression.PivotItems("Paris")</span></span></description>
            </item>
          </list>
          <para><span data-ttu-id="a86b5-237">Ao usar a propriedade para fazer referência a um determinado membro de uma coleção, você pode usar o nome do índice <see cref="M:Microsoft.Office.Interop.Excel.PivotItems.Item(System.Object)" /> de texto, conforme mostrado na tabela a seguir.</span><span class="sxs-lookup"><span data-stu-id="a86b5-237">When using the <see cref="M:Microsoft.Office.Interop.Excel.PivotItems.Item(System.Object)" /> property to reference a specific member of a collection, you can use the text index name as shown in the following table.</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="a86b5-238">[Europa]. [França]. [Paris]</span><span class="sxs-lookup"><span data-stu-id="a86b5-238">[Europe].[France].[Paris]</span></span></term>
              <description><span data-ttu-id="a86b5-239">Paris</span><span class="sxs-lookup"><span data-stu-id="a86b5-239">Paris</span></span></description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Nodes">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ShapeNodes Nodes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ShapeNodes Nodes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.Nodes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Nodes As ShapeNodes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ShapeNodes ^ Nodes { Microsoft::Office::Interop::Excel::ShapeNodes ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1701)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1701)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ShapeNodes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a86b5-240">Retorna uma <see cref="T:Microsoft.Office.Interop.Excel.ShapeNodes" /> coleção que representa a descrição geométrica da forma especificada.</span><span class="sxs-lookup"><span data-stu-id="a86b5-240">Returns a <see cref="T:Microsoft.Office.Interop.Excel.ShapeNodes" /> collection that represents the geometric description of the specified shape.</span></span> <span data-ttu-id="a86b5-241">Aplica-se <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> a objetos que representam desenhos de forma livre.</span><span class="sxs-lookup"><span data-stu-id="a86b5-241">Applies to <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> objects that represent freeform drawings.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a86b5-242">Retorna o objeto pai do objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="a86b5-242">Returns the parent object for the specified object.</span></span> <span data-ttu-id="a86b5-243">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="a86b5-243">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentGroup">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shape ParentGroup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Shape ParentGroup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.ParentGroup" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParentGroup As Shape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Shape ^ ParentGroup { Microsoft::Office::Interop::Excel::Shape ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2170)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2170)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shape</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a86b5-244">Retorna um <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> objeto que representa a forma pai comum de uma forma filha ou um intervalo de formas filho.</span><span class="sxs-lookup"><span data-stu-id="a86b5-244">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> object that represents the common parent shape of a child shape or a range of child shapes.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PickUp">
      <MemberSignature Language="C#" Value="public void PickUp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PickUp() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ShapeRange.PickUp" />
      <MemberSignature Language="VB.NET" Value="Public Sub PickUp ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PickUp();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1682)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a86b5-245">Copia a formatação da forma especificada.</span><span class="sxs-lookup"><span data-stu-id="a86b5-245">Copies the formatting of the specified shape.</span></span> <span data-ttu-id="a86b5-246">Use o <see cref="M:Microsoft.Office.Interop.Excel.ShapeRange.Apply" /> método para aplicar a formatação copiada a outra forma.</span><span class="sxs-lookup"><span data-stu-id="a86b5-246">Use the <see cref="M:Microsoft.Office.Interop.Excel.ShapeRange.Apply" /> method to apply the copied formatting to another shape.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PictureFormat">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PictureFormat PictureFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PictureFormat PictureFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.PictureFormat" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PictureFormat As PictureFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::PictureFormat ^ PictureFormat { Microsoft::Office::Interop::Excel::PictureFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1631)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1631)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PictureFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a86b5-247">Retorna um <see cref="T:Microsoft.Office.Interop.Excel.PictureFormat" /> objeto que contém as propriedades de formatação de imagem para a forma especificada.</span><span class="sxs-lookup"><span data-stu-id="a86b5-247">Returns a <see cref="T:Microsoft.Office.Interop.Excel.PictureFormat" /> object that contains picture formatting properties for the specified shape.</span></span> <span data-ttu-id="a86b5-248">Aplica-se <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> a objetos que representam imagens ou objetos OLE.</span><span class="sxs-lookup"><span data-stu-id="a86b5-248">Applies to <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> objects that represent pictures or OLE objects.</span></span> <span data-ttu-id="a86b5-249">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="a86b5-249">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reflection">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.ReflectionFormat Reflection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.ReflectionFormat Reflection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.Reflection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Reflection As ReflectionFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::ReflectionFormat ^ Reflection { Microsoft::Office::Core::ReflectionFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2664)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2664)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.ReflectionFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a86b5-250">Retorna um <see cref="T:Microsoft.Office.Core.ReflectionFormat" /> objeto para um intervalo de formas especificado que contém propriedades de formatação de reflexão para o intervalo de formas.</span><span class="sxs-lookup"><span data-stu-id="a86b5-250">Returns a <see cref="T:Microsoft.Office.Core.ReflectionFormat" /> object for a specified shape range that contains reflection formatting properties for the shape range.</span></span> <span data-ttu-id="a86b5-251">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="a86b5-251">Read-only.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Core.ReflectionFormat" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Regroup">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shape Regroup ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Shape Regroup() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ShapeRange.Regroup" />
      <MemberSignature Language="VB.NET" Value="Public Function Regroup () As Shape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::Shape ^ Regroup();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1744)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shape</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a86b5-252">Reagrupa o grupo que o intervalo de formas especificado pertencia anteriormente.</span><span class="sxs-lookup"><span data-stu-id="a86b5-252">Regroups the group that the specified shape range belonged to previously.</span></span> <span data-ttu-id="a86b5-253">Retorna as formas reagrupadas como um único <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> objeto.</span><span class="sxs-lookup"><span data-stu-id="a86b5-253">Returns the regrouped shapes as a single <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> object.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a86b5-254">O <b>método Regroup</b> só restaura o grupo para a primeira forma agrupada anteriormente que encontra na coleção <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> especificada.</span><span class="sxs-lookup"><span data-stu-id="a86b5-254">The <b>Regroup</b> method only restores the group for the first previously grouped shape it finds in the specified <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> collection.</span></span> <span data-ttu-id="a86b5-255">Portanto, se o intervalo de formas especificado contiver formas que pertenciam anteriormente a grupos diferentes, somente um dos grupos será restaurado.</span><span class="sxs-lookup"><span data-stu-id="a86b5-255">Therefore, if the specified shape range contains shapes that previously belonged to different groups, only one of the groups will be restored.</span></span></para>
          <para><span data-ttu-id="a86b5-256">Observe que, como um grupo de formas é tratado como uma única forma, agrupar e desagrupar formas altera o número de itens na coleção e altera os números de índice de itens que vêm após os itens afetados na <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> coleção.</span><span class="sxs-lookup"><span data-stu-id="a86b5-256">Note that, because a group of shapes is treated as a single shape, grouping and ungrouping shapes changes the number of items in the <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> collection and changes the index numbers of items that come after the affected items in the collection.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="RerouteConnections">
      <MemberSignature Language="C#" Value="public void RerouteConnections ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RerouteConnections() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ShapeRange.RerouteConnections" />
      <MemberSignature Language="VB.NET" Value="Public Sub RerouteConnections ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RerouteConnections();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1683)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a86b5-257">Redireciona os conectores para que eles tomem o caminho mais curto possível entre as formas que conectam.</span><span class="sxs-lookup"><span data-stu-id="a86b5-257">Reroutes connectors so that they take the shortest possible path between the shapes they connect.</span></span></summary>
        <remarks><para><span data-ttu-id="a86b5-258">Para redirecionar conectores, o método <b>RerouteConnections</b> pode desconectar as extremidades de um conector e reanexá-las a diferentes sites de conexão nas formas conectadas.</span><span class="sxs-lookup"><span data-stu-id="a86b5-258">To reroute connectors, the <b>RerouteConnections</b> method may detach the ends of a connector and reattach them to different connecting sites on the connected shapes.</span></span> <span data-ttu-id="a86b5-259">Este método redireciona todos os conectores anexados à forma especificada; se a forma especificada for um conector, este será redirecionado.</span><span class="sxs-lookup"><span data-stu-id="a86b5-259">This method reroutes all connectors attached to the specified shape; if the specified shape is a connector, it’s rerouted.</span></span></para>
          <para><span data-ttu-id="a86b5-p149">Se esse método for aplicado a um conector, somente esse conector será redirecionado. Se esse método for aplicado a uma forma conectada, todos os conectores para essa forma serão redirecionados.</span><span class="sxs-lookup"><span data-stu-id="a86b5-p149">If this method is applied to a connector, only that connector will be rerouted. If this method is applied to a connected shape, all connectors to that shape will be rerouted.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Rotation">
      <MemberSignature Language="C#" Value="public float Rotation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Rotation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.Rotation" />
      <MemberSignature Language="VB.NET" Value="Public Property Rotation As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float Rotation { float get(); void set(float value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(59)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(59)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(59)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a86b5-262">Retorna ou define a rotação da forma em graus.</span><span class="sxs-lookup"><span data-stu-id="a86b5-262">Returns or sets the rotation of the shape in degrees.</span></span> <span data-ttu-id="a86b5-263">Leitura/gravação <b>único</b>.</span><span class="sxs-lookup"><span data-stu-id="a86b5-263">Read/write <b>Single</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaleHeight">
      <MemberSignature Language="C#" Value="public void ScaleHeight (float Factor, Microsoft.Office.Core.MsoTriState RelativeToOriginalSize, object Scale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ScaleHeight([in]float32 Factor, [in]valuetype Microsoft.Office.Core.MsoTriState RelativeToOriginalSize, [in]object Scale) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ShapeRange.ScaleHeight(System.Single,Microsoft.Office.Core.MsoTriState,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScaleHeight (Factor As Single, RelativeToOriginalSize As MsoTriState, Optional Scale As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1684)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Factor" Type="System.Single" />
        <Parameter Name="RelativeToOriginalSize" Type="Microsoft.Office.Core.MsoTriState" />
        <Parameter Name="Scale" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Factor"><span data-ttu-id="a86b5-264">Obrigatório <b>Único</b>.</span><span class="sxs-lookup"><span data-stu-id="a86b5-264">Required <b>Single</b>.</span></span> <span data-ttu-id="a86b5-265">Especifica a proporção entre a altura da forma após você redimensioná-la e a altura atual ou original.</span><span class="sxs-lookup"><span data-stu-id="a86b5-265">Specifies the ratio between the height of the shape after you resize it and the current or original height.</span></span> <span data-ttu-id="a86b5-266">Por exemplo, para tornar um retângulo 50% maior, especifique 1,5 para esse argumento.</span><span class="sxs-lookup"><span data-stu-id="a86b5-266">For example, to make a rectangle 50 percent larger, specify 1.5 for this argument.</span></span></param>
        <param name="RelativeToOriginalSize"><span data-ttu-id="a86b5-267">Obrigatório. <see cref="T:Microsoft.Office.Core.MsoTriState" /></span><span class="sxs-lookup"><span data-stu-id="a86b5-267">Required <see cref="T:Microsoft.Office.Core.MsoTriState" />.</span></span> <span data-ttu-id="a86b5-268"><b>msoTrue</b> para dimensionar a forma em relação ao seu tamanho original.</span><span class="sxs-lookup"><span data-stu-id="a86b5-268"><b>msoTrue</b> to scale the shape relative to its original size.</span></span> <span data-ttu-id="a86b5-269"><b>msoFalse para</b> dimensioná-lo em relação ao seu tamanho atual.</span><span class="sxs-lookup"><span data-stu-id="a86b5-269"><b>msoFalse</b> to scale it relative to its current size.</span></span> <span data-ttu-id="a86b5-270">Você só pode especificar <b>msoTrue</b> para este argumento se a forma especificada for uma imagem ou um objeto OLE.</span><span class="sxs-lookup"><span data-stu-id="a86b5-270">You can specify <b>msoTrue</b> for this argument only if the specified shape is a picture or an OLE object.</span></span></param>
        <param name="Scale"><span data-ttu-id="a86b5-271">Opcional <see cref="T:Microsoft.Office.Core.MsoScaleFrom" /> .</span><span class="sxs-lookup"><span data-stu-id="a86b5-271">Optional <see cref="T:Microsoft.Office.Core.MsoScaleFrom" />.</span></span> <span data-ttu-id="a86b5-272">Especifica qual parte da forma mantém sua posição quando a forma é dimensionada.</span><span class="sxs-lookup"><span data-stu-id="a86b5-272">Specifies which part of the shape retains its position when the shape is scaled.</span></span></param>
        <summary><span data-ttu-id="a86b5-273">Dimensiona a altura da forma por um fator especificado.</span><span class="sxs-lookup"><span data-stu-id="a86b5-273">Scales the height of the shape by a specified factor.</span></span></summary>
        <remarks><para><span data-ttu-id="a86b5-274">Para imagens e objetos OLE, você pode indicar se deseja dimensionar a forma em relação ao tamanho original ou atual.</span><span class="sxs-lookup"><span data-stu-id="a86b5-274">For pictures and OLE objects, you can indicate whether you want to scale the shape relative to the original or the current size.</span></span> <span data-ttu-id="a86b5-275">Formas que não sejam imagens ou objetos OLE são sempre dimensionadas em relação a sua altura atual.</span><span class="sxs-lookup"><span data-stu-id="a86b5-275">Shapes other than pictures and OLE objects are always scaled relative to their current height.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaleWidth">
      <MemberSignature Language="C#" Value="public void ScaleWidth (float Factor, Microsoft.Office.Core.MsoTriState RelativeToOriginalSize, object Scale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ScaleWidth([in]float32 Factor, [in]valuetype Microsoft.Office.Core.MsoTriState RelativeToOriginalSize, [in]object Scale) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ShapeRange.ScaleWidth(System.Single,Microsoft.Office.Core.MsoTriState,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScaleWidth (Factor As Single, RelativeToOriginalSize As MsoTriState, Optional Scale As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1688)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Factor" Type="System.Single" />
        <Parameter Name="RelativeToOriginalSize" Type="Microsoft.Office.Core.MsoTriState" />
        <Parameter Name="Scale" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Factor"><span data-ttu-id="a86b5-276">Obrigatório <b>Único</b>.</span><span class="sxs-lookup"><span data-stu-id="a86b5-276">Required <b>Single</b>.</span></span> <span data-ttu-id="a86b5-277">Especifica a proporção entre a largura da forma após você redimensioná-la e a largura atual ou original.</span><span class="sxs-lookup"><span data-stu-id="a86b5-277">Specifies the ratio between the width of the shape after you resize it and the current or original width.</span></span> <span data-ttu-id="a86b5-278">Por exemplo, para tornar um retângulo 50% maior, especifique 1,5 para esse argumento.</span><span class="sxs-lookup"><span data-stu-id="a86b5-278">For example, to make a rectangle 50 percent larger, specify 1.5 for this argument.</span></span></param>
        <param name="RelativeToOriginalSize"><span data-ttu-id="a86b5-279">Obrigatório. <see cref="T:Microsoft.Office.Core.MsoTriState" /></span><span class="sxs-lookup"><span data-stu-id="a86b5-279">Required <see cref="T:Microsoft.Office.Core.MsoTriState" />.</span></span> <span data-ttu-id="a86b5-280"><b>False</b> para dimensioná-lo em relação ao seu tamanho atual.</span><span class="sxs-lookup"><span data-stu-id="a86b5-280"><b>False</b> to scale it relative to its current size.</span></span> <span data-ttu-id="a86b5-281">Você pode especificar <b>True</b> para este argumento somente se a forma especificada é uma imagem ou um objeto OLE.</span><span class="sxs-lookup"><span data-stu-id="a86b5-281">You can specify <b>True</b> for this argument only if the specified shape is a picture or an OLE object.</span></span></param>
        <param name="Scale"><span data-ttu-id="a86b5-282">Opcional <see cref="T:Microsoft.Office.Core.MsoScaleFrom" /> .</span><span class="sxs-lookup"><span data-stu-id="a86b5-282">Optional <see cref="T:Microsoft.Office.Core.MsoScaleFrom" />.</span></span> <span data-ttu-id="a86b5-283">Especifica qual parte da forma mantém sua posição quando a forma é dimensionada.</span><span class="sxs-lookup"><span data-stu-id="a86b5-283">Specifies which part of the shape retains its position when the shape is scaled.</span></span></param>
        <summary><span data-ttu-id="a86b5-284">Dimensiona a largura da forma por um fator especificado.</span><span class="sxs-lookup"><span data-stu-id="a86b5-284">Scales the width of the shape by a specified factor.</span></span></summary>
        <remarks><para><span data-ttu-id="a86b5-285">Para imagens e objetos OLE, você pode indicar se deseja dimensionar a forma em relação ao tamanho original ou atual.</span><span class="sxs-lookup"><span data-stu-id="a86b5-285">For pictures and OLE objects, you can indicate whether you want to scale the shape relative to the original or the current size.</span></span> <span data-ttu-id="a86b5-286">Formas que não sejam imagens ou objetos OLE são sempre dimensionadas em relação à sua largura atual.</span><span class="sxs-lookup"><span data-stu-id="a86b5-286">Shapes other than pictures and OLE objects are always scaled relative to their current width.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select (object Replace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select([in]object Replace) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ShapeRange.Select(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select (Optional Replace As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(235)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Replace" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Replace"><span data-ttu-id="a86b5-287">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="a86b5-287">Optional <b>Object</b>.</span></span> <span data-ttu-id="a86b5-288">O objeto a ser substituído.</span><span class="sxs-lookup"><span data-stu-id="a86b5-288">The object to replace.</span></span></param>
        <summary><span data-ttu-id="a86b5-289">Seleciona o objeto.</span><span class="sxs-lookup"><span data-stu-id="a86b5-289">Selects the object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetShapesDefaultProperties">
      <MemberSignature Language="C#" Value="public void SetShapesDefaultProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetShapesDefaultProperties() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ShapeRange.SetShapesDefaultProperties" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetShapesDefaultProperties ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetShapesDefaultProperties();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1689)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a86b5-290">Define a formatação da forma especificada como padrão para a mesma.</span><span class="sxs-lookup"><span data-stu-id="a86b5-290">Makes the formatting of the specified shape the default formatting for the shape.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Shadow">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ShadowFormat Shadow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ShadowFormat Shadow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.Shadow" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Shadow As ShadowFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ShadowFormat ^ Shadow { Microsoft::Office::Interop::Excel::ShadowFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(103)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(103)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ShadowFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a86b5-291"><b>True</b> se a fonte for uma fonte de sombra ou se o objeto tiver uma sombra.</span><span class="sxs-lookup"><span data-stu-id="a86b5-291"><b>True</b> if the font is a shadow font or if the object has a shadow.</span></span> <span data-ttu-id="a86b5-292"><b>Boolean</b> de leitura/gravação.</span><span class="sxs-lookup"><span data-stu-id="a86b5-292">Read/write <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShapeStyle">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoShapeStyleIndex ShapeStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoShapeStyleIndex ShapeStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.ShapeStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property ShapeStyle As MsoShapeStyleIndex" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoShapeStyleIndex ShapeStyle { Microsoft::Office::Core::MsoShapeStyleIndex get(); void set(Microsoft::Office::Core::MsoShapeStyleIndex value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2660)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2660)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2660)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoShapeStyleIndex</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a86b5-293">Retorna ou define um que <see cref="T:Microsoft.Office.Core.MsoShapeStyleIndex" /> representa o estilo de forma para um intervalo de formas.</span><span class="sxs-lookup"><span data-stu-id="a86b5-293">Returns or sets a <see cref="T:Microsoft.Office.Core.MsoShapeStyleIndex" /> that represents shape style for a shape range.</span></span> <span data-ttu-id="a86b5-294">Leitura/gravação.</span><span class="sxs-lookup"><span data-stu-id="a86b5-294">Read/write.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Core.MsoShapeStyleIndex" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SoftEdge">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.SoftEdgeFormat SoftEdge { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.SoftEdgeFormat SoftEdge" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.SoftEdge" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SoftEdge As SoftEdgeFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::SoftEdgeFormat ^ SoftEdge { Microsoft::Office::Core::SoftEdgeFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2662)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2662)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.SoftEdgeFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a86b5-295">Retorna um objeto que contém propriedades de formatação de borda suave para um intervalo de formas especificado.</span><span class="sxs-lookup"><span data-stu-id="a86b5-295">Returns an object that contains soft edge formatting properties for a specified shape range.</span></span> <span data-ttu-id="a86b5-296">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="a86b5-296">Read-only.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Core.SoftEdgeFormat" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextEffect">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.TextEffectFormat TextEffect { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.TextEffectFormat TextEffect" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.TextEffect" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TextEffect As TextEffectFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::TextEffectFormat ^ TextEffect { Microsoft::Office::Interop::Excel::TextEffectFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1702)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1702)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.TextEffectFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a86b5-297">Retorna um <see cref="T:Microsoft.Office.Interop.Excel.TextEffectFormat" /> objeto que contém propriedades de formatação de efeito de texto para a forma especificada.</span><span class="sxs-lookup"><span data-stu-id="a86b5-297">Returns a <see cref="T:Microsoft.Office.Interop.Excel.TextEffectFormat" /> object that contains text-effect formatting properties for the specified shape.</span></span> <span data-ttu-id="a86b5-298">Aplica-se <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> a objetos que representam WordArt.</span><span class="sxs-lookup"><span data-stu-id="a86b5-298">Applies to <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> objects that represent WordArt.</span></span> <span data-ttu-id="a86b5-299">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="a86b5-299">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextFrame">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.TextFrame TextFrame { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.TextFrame TextFrame" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.TextFrame" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TextFrame As TextFrame" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::TextFrame ^ TextFrame { Microsoft::Office::Interop::Excel::TextFrame ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1692)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1692)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.TextFrame</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a86b5-300">Retorna um <see cref="T:Microsoft.Office.Interop.Excel.TextFrame" /> objeto que contém as propriedades de alinhamento e ancoragem para o intervalo de formas especificado.</span><span class="sxs-lookup"><span data-stu-id="a86b5-300">Returns a <see cref="T:Microsoft.Office.Interop.Excel.TextFrame" /> object that contains the alignment and anchoring properties for the specified shape range.</span></span> <span data-ttu-id="a86b5-301">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="a86b5-301">Read-only.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.TextFrame" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextFrame2">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.TextFrame2 TextFrame2 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.TextFrame2 TextFrame2" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.TextFrame2" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TextFrame2 As TextFrame2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::TextFrame2 ^ TextFrame2 { Microsoft::Office::Interop::Excel::TextFrame2 ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2659)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2659)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.TextFrame2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a86b5-302">Retorna um objeto que contém a formatação de texto para o intervalo de formas especificado.</span><span class="sxs-lookup"><span data-stu-id="a86b5-302">Returns an object that contains text formatting for the specified shape range.</span></span> <span data-ttu-id="a86b5-303">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="a86b5-303">Read-only.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.TextFrame2" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThreeD">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ThreeDFormat ThreeD { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ThreeDFormat ThreeD" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.ThreeD" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ThreeD As ThreeDFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ThreeDFormat ^ ThreeD { Microsoft::Office::Interop::Excel::ThreeDFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1703)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1703)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ThreeDFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a86b5-304">Retorna um objeto que contém propriedades de formatação de efeito <see cref="T:Microsoft.Office.Interop.Excel.ThreeDFormat" /> 3D para a forma especificada.</span><span class="sxs-lookup"><span data-stu-id="a86b5-304">Returns a <see cref="T:Microsoft.Office.Interop.Excel.ThreeDFormat" /> object that contains 3-D – effect formatting properties for the specified shape.</span></span> <span data-ttu-id="a86b5-305">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="a86b5-305">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.Title" />
      <MemberSignature Language="VB.NET" Value="Public Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(199)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(199)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(199)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a86b5-306">Obtém ou define o título do texto alternativo associado ao intervalo de formas especificado.</span><span class="sxs-lookup"><span data-stu-id="a86b5-306">Gets or sets the title of the alternative text associated with the specified shape range.</span></span></summary>
        <value><span data-ttu-id="a86b5-307">O título do texto alternativo associado ao intervalo de formas especificado.</span><span class="sxs-lookup"><span data-stu-id="a86b5-307">The title of the alternative text associated with the specified shape range.</span></span></value>
        <remarks><para><span data-ttu-id="a86b5-308">Leitura/gravação.</span><span class="sxs-lookup"><span data-stu-id="a86b5-308">Read/write.</span></span></para>
          <para><span data-ttu-id="a86b5-309">Para definir a cadeia de caracteres de texto descritivo do texto alternativo para um intervalo de formas, use a <see cref="P:Microsoft.Office.Interop.Excel.ShapeRange.AlternativeText" /> propriedade.</span><span class="sxs-lookup"><span data-stu-id="a86b5-309">To set the descriptive text string of the alternative text for a shape range, use the <see cref="P:Microsoft.Office.Interop.Excel.ShapeRange.AlternativeText" /> property.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Top">
      <MemberSignature Language="C#" Value="public float Top { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Top" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.Top" />
      <MemberSignature Language="VB.NET" Value="Public Property Top As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float Top { float get(); void set(float value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(126)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(126)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(126)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a86b5-310">A distância da borda superior da forma mais superior no intervalo de formas até a borda superior da planilha.</span><span class="sxs-lookup"><span data-stu-id="a86b5-310">The distance from the top edge of the topmost shape in the shape range to the top edge of the worksheet.</span></span> <span data-ttu-id="a86b5-311">Leitura/gravação <b>único</b>.</span><span class="sxs-lookup"><span data-stu-id="a86b5-311">Read/write <b>Single</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoShapeType Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoShapeType Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As MsoShapeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoShapeType Type { Microsoft::Office::Core::MsoShapeType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoShapeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a86b5-312">Retorna ou define o tipo de forma.</span><span class="sxs-lookup"><span data-stu-id="a86b5-312">Returns or sets the shape type.</span></span> <span data-ttu-id="a86b5-313">Somente <see cref="T:Microsoft.Office.Core.MsoShapeType" /> leitura.</span><span class="sxs-lookup"><span data-stu-id="a86b5-313">Read-only <see cref="T:Microsoft.Office.Core.MsoShapeType" />.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ungroup">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ShapeRange Ungroup ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.ShapeRange Ungroup() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ShapeRange.Ungroup" />
      <MemberSignature Language="VB.NET" Value="Public Function Ungroup () As ShapeRange" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::ShapeRange ^ Ungroup();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(244)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ShapeRange</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a86b5-314">Desagrupa quaisquer formas agrupadas na forma especificada ou intervalo de formas.</span><span class="sxs-lookup"><span data-stu-id="a86b5-314">Ungroups any grouped shapes in the specified shape or range of shapes.</span></span> <span data-ttu-id="a86b5-315">Desmonta figuras e objetos OLE dentro da forma especificada ou o intervalo de formas.</span><span class="sxs-lookup"><span data-stu-id="a86b5-315">Disassembles pictures and OLE objects within the specified shape or range of shapes.</span></span> <span data-ttu-id="a86b5-316">Retorna as formas desagrupadas como um único <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> objeto.</span><span class="sxs-lookup"><span data-stu-id="a86b5-316">Returns the ungrouped shapes as a single <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> object.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a86b5-317">Como um grupo de formas é tratado como um único objeto, agrupar e desagrupar formas altera o número de itens na coleção e altera os números de índice de itens que vêm após os itens afetados na <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> coleção.</span><span class="sxs-lookup"><span data-stu-id="a86b5-317">Because a group of shapes is treated as a single object, grouping and ungrouping shapes changes the number of items in the <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> collection and changes the index numbers of items that come after the affected items in the collection.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="VerticalFlip">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoTriState VerticalFlip { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoTriState VerticalFlip" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.VerticalFlip" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VerticalFlip As MsoTriState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoTriState VerticalFlip { Microsoft::Office::Core::MsoTriState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1704)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1704)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoTriState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a86b5-318"><b>True</b> se a forma especificada for invertida ao redor do eixo vertical.</span><span class="sxs-lookup"><span data-stu-id="a86b5-318"><b>True</b> if the specified shape is flipped around the vertical axis.</span></span> <span data-ttu-id="a86b5-319">Somente <see cref="T:Microsoft.Office.Core.MsoTriState" /> leitura.</span><span class="sxs-lookup"><span data-stu-id="a86b5-319">Read-only <see cref="T:Microsoft.Office.Core.MsoTriState" />.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Vertices">
      <MemberSignature Language="C#" Value="public object Vertices { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Vertices" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.Vertices" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Vertices As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Vertices { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(621)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(621)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a86b5-320">Retorna as coordenadas dos vértices (e pontos de controle para curvas Bézier) do desenho de forma livre especificado como uma série de pares de coordenadas.</span><span class="sxs-lookup"><span data-stu-id="a86b5-320">Returns the coordinates of the specified freeform drawing's vertices (and control points for Bézier curves) as a series of coordinate pairs.</span></span> <span data-ttu-id="a86b5-321">Somente leitura <b>objeto</b>.</span><span class="sxs-lookup"><span data-stu-id="a86b5-321">Read-only <b>Object</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="a86b5-322">Você pode usar a matriz retornada por essa propriedade como um argumento para o <see cref="M:Microsoft.Office.Interop.Excel.Shapes.AddCurve(System.Object)" /> método ou <see cref="M:Microsoft.Office.Interop.Excel.Shapes.AddPolyline(System.Object)" /> método.</span><span class="sxs-lookup"><span data-stu-id="a86b5-322">You can use the array returned by this property as an argument to the <see cref="M:Microsoft.Office.Interop.Excel.Shapes.AddCurve(System.Object)" /> method or <see cref="M:Microsoft.Office.Interop.Excel.Shapes.AddPolyline(System.Object)" /> method.</span></span></para>
          <para><span data-ttu-id="a86b5-323">A tabela a seguir mostra como a propriedade <b>Vertices</b> associa os valores da matriz vertArray() às coordenadas dos vértices de um triângulo.</span><span class="sxs-lookup"><span data-stu-id="a86b5-323">The following table shows how the <b>Vertices</b> property associates the values in the array vertArray() with the coordinates of a triangle's vertices.</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="a86b5-324">vertArray(1, 1)</span><span class="sxs-lookup"><span data-stu-id="a86b5-324">vertArray(1, 1)</span></span></term>
              <description><span data-ttu-id="a86b5-325">A distância horizontal do primeiro vértice até o lado esquerdo do documento</span><span class="sxs-lookup"><span data-stu-id="a86b5-325">The horizontal distance from the first vertex to the left side of the document</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="a86b5-326">vertArray(1, 2)</span><span class="sxs-lookup"><span data-stu-id="a86b5-326">vertArray(1, 2)</span></span></term>
              <description><span data-ttu-id="a86b5-327">A distância vertical do primeiro vértice até a extremidade superior do documento</span><span class="sxs-lookup"><span data-stu-id="a86b5-327">The vertical distance from the first vertex to the top of the document</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="a86b5-328">vertArray(2, 1)</span><span class="sxs-lookup"><span data-stu-id="a86b5-328">vertArray(2, 1)</span></span></term>
              <description><span data-ttu-id="a86b5-329">A distância horizontal do segundo vértice até o lado esquerdo do documento</span><span class="sxs-lookup"><span data-stu-id="a86b5-329">The horizontal distance from the second vertex to the left side of the document</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="a86b5-330">vertArray(2, 2)</span><span class="sxs-lookup"><span data-stu-id="a86b5-330">vertArray(2, 2)</span></span></term>
              <description><span data-ttu-id="a86b5-331">A distância vertical do segundo vértice até a extremidade superior do documento</span><span class="sxs-lookup"><span data-stu-id="a86b5-331">The vertical distance from the second vertex to the top of the document</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="a86b5-332">vertArray(3, 1)</span><span class="sxs-lookup"><span data-stu-id="a86b5-332">vertArray(3, 1)</span></span></term>
              <description><span data-ttu-id="a86b5-333">A distância horizontal do terceiro vértice até o lado esquerdo do documento</span><span class="sxs-lookup"><span data-stu-id="a86b5-333">The horizontal distance from the third vertex to the left side of the document</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="a86b5-334">vertArray(3, 2)</span><span class="sxs-lookup"><span data-stu-id="a86b5-334">vertArray(3, 2)</span></span></term>
              <description><span data-ttu-id="a86b5-335">A distância vertical do terceiro vértice até a extremidade superior do documento</span><span class="sxs-lookup"><span data-stu-id="a86b5-335">The vertical distance from the third vertex to the top of the document</span></span></description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoTriState Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoTriState Visible" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Property Visible As MsoTriState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoTriState Visible { Microsoft::Office::Core::MsoTriState get(); void set(Microsoft::Office::Core::MsoTriState value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoTriState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a86b5-336">Determina se o objeto será visível.</span><span class="sxs-lookup"><span data-stu-id="a86b5-336">Determines whether the object is visible.</span></span> <span data-ttu-id="a86b5-337"><see cref="T:Microsoft.Office.Core.MsoTriState" />Leitura/gravação.</span><span class="sxs-lookup"><span data-stu-id="a86b5-337">Read/write <see cref="T:Microsoft.Office.Core.MsoTriState" />.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public float Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Width" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.Width" />
      <MemberSignature Language="VB.NET" Value="Public Property Width As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float Width { float get(); void set(float value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(122)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(122)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(122)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a86b5-338">A largura do objeto.</span><span class="sxs-lookup"><span data-stu-id="a86b5-338">The width of the object.</span></span> <span data-ttu-id="a86b5-339">Leitura/gravação <b>único</b>.</span><span class="sxs-lookup"><span data-stu-id="a86b5-339">Read/write <b>Single</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ZOrder">
      <MemberSignature Language="C#" Value="public void ZOrder (Microsoft.Office.Core.MsoZOrderCmd ZOrderCmd);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ZOrder([in]valuetype Microsoft.Office.Core.MsoZOrderCmd ZOrderCmd) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ShapeRange.ZOrder(Microsoft.Office.Core.MsoZOrderCmd)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ZOrder (ZOrderCmd As MsoZOrderCmd)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ZOrder(Microsoft::Office::Core::MsoZOrderCmd ZOrderCmd);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(622)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ZOrderCmd" Type="Microsoft.Office.Core.MsoZOrderCmd" />
      </Parameters>
      <Docs>
        <param name="ZOrderCmd"><span data-ttu-id="a86b5-340">Obrigatório. <see cref="T:Microsoft.Office.Core.MsoZOrderCmd" /></span><span class="sxs-lookup"><span data-stu-id="a86b5-340">Required <see cref="T:Microsoft.Office.Core.MsoZOrderCmd" />.</span></span> <span data-ttu-id="a86b5-341">Especifica para onde mover a forma especificada, em relação às outras formas.</span><span class="sxs-lookup"><span data-stu-id="a86b5-341">Specifies where to move the specified shape relative to the other shapes.</span></span></param>
        <summary><span data-ttu-id="a86b5-342">Move a forma especificada para a frente ou para trás das outras formas na coleção (isto é, altera a posição da forma na ordem z).</span><span class="sxs-lookup"><span data-stu-id="a86b5-342">Moves the specified shape in front of or behind other shapes in the collection (that is, changes the shape's position in the z-order).</span></span></summary>
        <remarks><para><span data-ttu-id="a86b5-343">Use a <see cref="P:Microsoft.Office.Interop.Excel.ShapeRange.ZOrderPosition" /> propriedade para determinar a posição atual de uma forma na ordem z.</span><span class="sxs-lookup"><span data-stu-id="a86b5-343">Use the <see cref="P:Microsoft.Office.Interop.Excel.ShapeRange.ZOrderPosition" /> property to determine a shape's current position in the z-order.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ZOrderPosition">
      <MemberSignature Language="C#" Value="public int ZOrderPosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ZOrderPosition" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.ZOrderPosition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ZOrderPosition As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ZOrderPosition { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1705)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1705)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a86b5-344">Retorna a posição da forma especificada, de acordo com a ordem z.</span><span class="sxs-lookup"><span data-stu-id="a86b5-344">Returns the position of the specified shape in the z-order.</span></span> <span data-ttu-id="a86b5-345"><b>Integer</b> somente leitura.</span><span class="sxs-lookup"><span data-stu-id="a86b5-345">Read-only <b>Integer</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="a86b5-346">Para definir a posição da forma na ordem z, use o <see cref="M:Microsoft.Office.Interop.Excel.ShapeRange.ZOrder(Microsoft.Office.Core.MsoZOrderCmd)" /> método.</span><span class="sxs-lookup"><span data-stu-id="a86b5-346">To set the shape's position in the z-order, use the <see cref="M:Microsoft.Office.Interop.Excel.ShapeRange.ZOrder(Microsoft.Office.Core.MsoZOrderCmd)" /> method.</span></span></para>
          <para><span data-ttu-id="a86b5-347">A posição de uma forma na ordem z corresponde ao número de índice da forma na <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> coleção.</span><span class="sxs-lookup"><span data-stu-id="a86b5-347">A shape's position in the z-order corresponds to the shape's index number in the <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> collection.</span></span> <span data-ttu-id="a86b5-348">Por exemplo, se houver quatro formas em myDocument, a expressão myDocument.Shapes(1) retornará a forma no final da ordem z, enquanto a expressão myDocument.Shapes(4) retornará a forma no início da ordem z.</span><span class="sxs-lookup"><span data-stu-id="a86b5-348">For example, if there are four shapes on myDocument, the expression myDocument.Shapes(1) returns the shape at the back of the z-order, and the expression myDocument.Shapes(4) returns the shape at the front of the z-order.</span></span></para>
          <para><span data-ttu-id="a86b5-349">Sempre que você adiciona uma nova forma a uma coleção, ela é adicionada no início da ordem z por padrão.</span><span class="sxs-lookup"><span data-stu-id="a86b5-349">Whenever you add a new shape to a collection, it’s added to the front of the z-order by default.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
  </Members>
</Type>