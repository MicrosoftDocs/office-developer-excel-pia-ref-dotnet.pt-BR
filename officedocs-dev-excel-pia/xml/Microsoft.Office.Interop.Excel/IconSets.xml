<Type Name="IconSets" FullName="Microsoft.Office.Interop.Excel.IconSets">
  <Metadata><Meta Name="ms.openlocfilehash" Value="54197f255684d8e7bdb06e06b9a6a514287fe80d" /><Meta Name="ms.sourcegitcommit" Value="f58b07bd9753015d401a69461f61bc174edee843" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="01/27/2021" /><Meta Name="ms.locfileid" Value="50000201" /></Metadata><TypeSignature Language="C#" Value="public interface IconSets : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IconSets implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.IconSets" />
  <TypeSignature Language="VB.NET" Value="Public Interface IconSets&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IconSets : System::Collections::IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("0002449C-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="a9917-101">Representa uma coleção de conjuntos de ícones usados na regra de formatação condicional de um conjunto de ícones.</span><span class="sxs-lookup"><span data-stu-id="a9917-101">Represents a collection of icon sets used in an icon set conditional formatting rule.</span></span></summary>
    <remarks><para><span data-ttu-id="a9917-102">O conjunto de ícones para o formato condicional é atribuído usando <see cref="P:Microsoft.Office.Interop.Excel.IconSetCondition.IconSet" /> a propriedade do <see cref="T:Microsoft.Office.Interop.Excel.IconSetCondition" /> objeto.</span><span class="sxs-lookup"><span data-stu-id="a9917-102">The icon set for the conditional format is assigned using the <see cref="P:Microsoft.Office.Interop.Excel.IconSetCondition.IconSet" /> property of the <see cref="T:Microsoft.Office.Interop.Excel.IconSetCondition" /> object.</span></span> <span data-ttu-id="a9917-103">Você define essa propriedade como um dos conjuntos de ícones integrados passando uma das constantes da enumeração como um índice da <see cref="T:Microsoft.Office.Interop.Excel.XlIconSet" /> <see cref="P:Microsoft.Office.Interop.Excel._Workbook.IconSets" /> propriedade do <see cref="T:Microsoft.Office.Interop.Excel._Workbook" /> objeto.</span><span class="sxs-lookup"><span data-stu-id="a9917-103">You set this property to one of the built-in icon sets by passing one of the constants of the <see cref="T:Microsoft.Office.Interop.Excel.XlIconSet" /> enumeration as an index of the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.IconSets" /> property of the <see cref="T:Microsoft.Office.Interop.Excel._Workbook" /> object.</span></span> <span data-ttu-id="a9917-104">Consulte o exemplo para obter detalhes.</span><span class="sxs-lookup"><span data-stu-id="a9917-104">See the example for details.</span></span> </para>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="_Default">
      <MemberSignature Language="C#" Value="public object this[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object _Default(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.IconSets._Default(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property _Default(Index As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::Object ^] { System::Object ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary><span data-ttu-id="a9917-105">Reservado para uso interno.</span><span class="sxs-lookup"><span data-stu-id="a9917-105">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.IconSets.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a9917-106">Quando usada sem um qualificador de objeto, essa propriedade retorna um  <see cref="T:Microsoft.Office.Interop.Excel._Application" /> objeto que representa o aplicativo Microsoft Office Excel.</span><span class="sxs-lookup"><span data-stu-id="a9917-106">When used without an object qualifier, this property returns an  <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object that represents the Microsoft Office Excel  application.</span></span> <span data-ttu-id="a9917-107">Quando usado com um qualificador de objeto, essa propriedade retorna um objeto <b>Application</b> que representa o criador do objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="a9917-107">When used with an object qualifier, this property returns an <b>Application</b> object that represents the creator of the specified object.</span></span> <span data-ttu-id="a9917-108">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="a9917-108">Read-only.</span></span></summary>
        <value><span data-ttu-id="a9917-109"><b>Aplicativo</b> (veja acima)</span><span class="sxs-lookup"><span data-stu-id="a9917-109"><b>Application</b> (see above)</span></span></value>
        <remarks><para><span data-ttu-id="a9917-110">Você pode usar essa propriedade com um objeto de Automação OLE para retornar o aplicativo desse objeto.</span><span class="sxs-lookup"><span data-stu-id="a9917-110">You can use this property with an OLE Automation object to return the application of that object.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.IconSets.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a9917-111">Returns an <b>Integer</b> value that specifies the number of icon sets available in the workbook.</span><span class="sxs-lookup"><span data-stu-id="a9917-111">Returns an <b>Integer</b> value that specifies the number of icon sets available in the workbook.</span></span> <span data-ttu-id="a9917-112">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="a9917-112">Read-only.</span></span></summary>
        <value><span data-ttu-id="a9917-113"><b>Integer</b></span><span class="sxs-lookup"><span data-stu-id="a9917-113"><b>Integer</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.IconSets.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a9917-114">Retorna um inteiro de 32 bits que indica o aplicativo no qual esse objeto foi criado.</span><span class="sxs-lookup"><span data-stu-id="a9917-114">Returns a 32-bit integer that indicates the application in which this object was created.</span></span> <span data-ttu-id="a9917-115"><b>Integer</b> somente leitura.</span><span class="sxs-lookup"><span data-stu-id="a9917-115">Read-only <b>Integer</b>.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /></value>
        <remarks><para><span data-ttu-id="a9917-116">Se o objeto foi criado no Microsoft Excel, essa propriedade retornará a sequência XCEL, que é equivalente ao número hexadecimal 5843454C.</span><span class="sxs-lookup"><span data-stu-id="a9917-116">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span></span>  <span data-ttu-id="a9917-117">A propriedade foi projetada para ser usada no Microsoft Excel para Macintosh, onde cada aplicativo tem um código de criador de <see cref="P:Microsoft.Office.Interop.Excel.IconSets.Creator" /> quatro caracteres.</span><span class="sxs-lookup"><span data-stu-id="a9917-117">The <see cref="P:Microsoft.Office.Interop.Excel.IconSets.Creator" /> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span></span> <span data-ttu-id="a9917-118">Por exemplo, o Microsoft Excel possui o código de criador XCEL.</span><span class="sxs-lookup"><span data-stu-id="a9917-118">For example, Microsoft Excel has the creator code XCEL.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.IconSets.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-4)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object Item[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.IconSets.Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item(Index As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Item[System::Object ^] { System::Object ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="a9917-119">O número de índice do <see cref="T:Microsoft.Office.Interop.Excel.IconSet" /> objeto.</span><span class="sxs-lookup"><span data-stu-id="a9917-119">The index number of the <see cref="T:Microsoft.Office.Interop.Excel.IconSet" /> object.</span></span></param>
        <summary><span data-ttu-id="a9917-120">Retorna um único <see cref="T:Microsoft.Office.Interop.Excel.IconSet" /> objeto da <see cref="T:Microsoft.Office.Interop.Excel.IconSets" /> coleção.</span><span class="sxs-lookup"><span data-stu-id="a9917-120">Returns a single <see cref="T:Microsoft.Office.Interop.Excel.IconSet" /> object from the <see cref="T:Microsoft.Office.Interop.Excel.IconSets" />collection.</span></span> <span data-ttu-id="a9917-121">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="a9917-121">Read-only.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.IconSet" /></value>
        <remarks><para><span data-ttu-id="a9917-122">O valor do parâmetro <paramref name="Index" /> não pode ser maior do que o número de conjuntos de ícones disponíveis.</span><span class="sxs-lookup"><span data-stu-id="a9917-122">The value of the <paramref name="Index" /> parameter cannot be greater than the number of icon sets available.</span></span> <span data-ttu-id="a9917-123">Para encontrar o número de conjuntos de ícones disponíveis para a área de trabalho, use a <see cref="P:Microsoft.Office.Interop.Excel._Workbook.IconSets" /> propriedade.</span><span class="sxs-lookup"><span data-stu-id="a9917-123">To find the number of icon sets available to the workbook, use the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.IconSets" /> property.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.IconSets.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a9917-124">Retorna o objeto pai do objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="a9917-124">Returns the parent object for the specified object.</span></span> <span data-ttu-id="a9917-125">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="a9917-125">Read-only.</span></span></summary>
        <value><span data-ttu-id="a9917-126"><b>Object</b></span><span class="sxs-lookup"><span data-stu-id="a9917-126"><b>Object</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>