<Type Name="Scenarios" FullName="Microsoft.Office.Interop.Excel.Scenarios">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ae2d83b0cebf35ca68c44e96b1d08c3bd0e82529" /><Meta Name="ms.sourcegitcommit" Value="f58b07bd9753015d401a69461f61bc174edee843" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="01/27/2021" /><Meta Name="ms.locfileid" Value="50010462" /></Metadata><TypeSignature Language="C#" Value="public interface Scenarios : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Scenarios implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.Scenarios" />
  <TypeSignature Language="VB.NET" Value="Public Interface Scenarios&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class Scenarios : System::Collections::IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00020896-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="e825f-101">Uma coleção de todos <see cref="T:Microsoft.Office.Interop.Excel.Scenario" /> os objetos na planilha especificada.</span><span class="sxs-lookup"><span data-stu-id="e825f-101">A collection of all the <see cref="T:Microsoft.Office.Interop.Excel.Scenario" /> objects on the specified worksheet.</span></span> <span data-ttu-id="e825f-102">Um cenário é um grupo de valores de entrada <paramref name="changing cells" /> (chamado) que é nomeado e salvo.</span><span class="sxs-lookup"><span data-stu-id="e825f-102">A scenario is a group of input values (called <paramref name="changing cells" />) that’s named and saved.</span></span></summary>
    <remarks><para><span data-ttu-id="e825f-103">Use o <see cref="M:Microsoft.Office.Interop.Excel._Worksheet.Scenarios(System.Object)" /> método para retornar a coleção <b>Scenarios.</b></span><span class="sxs-lookup"><span data-stu-id="e825f-103">Use the <see cref="M:Microsoft.Office.Interop.Excel._Worksheet.Scenarios(System.Object)" /> method to return the <b>Scenarios</b> collection.</span></span></para>
      <para><span data-ttu-id="e825f-104">Use o <see cref="M:Microsoft.Office.Interop.Excel.Scenarios.Add(System.String,System.Object,System.Object,System.Object,System.Object,System.Object)" /> método para criar um novo cenário e adicioná-lo à coleção.</span><span class="sxs-lookup"><span data-stu-id="e825f-104">Use the <see cref="M:Microsoft.Office.Interop.Excel.Scenarios.Add(System.String,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method to create a new scenario and add it to the collection.</span></span></para>
      <para><span data-ttu-id="e825f-105">Use <b>Cenários</b>( ), onde é o nome do cenário ou número <paramref name="index" /> de <paramref name="index" /> índice, para retornar um único objeto <b>Scenario.</b></span><span class="sxs-lookup"><span data-stu-id="e825f-105">Use <b>Scenarios</b>(<paramref name="index" />), where <paramref name="index" /> is the scenario name or index number, to return a single <b>Scenario</b> object.</span></span></para>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Scenario Add (string Name, object ChangingCells, object Values, object Comment, object Locked, object Hidden);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Scenario Add([in]string Name, [in]object ChangingCells, [in]object Values, [in]object Comment, [in]object Locked, [in]object Hidden) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Scenarios.Add(System.String,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (Name As String, ChangingCells As Object, Optional Values As Object, Optional Comment As Object, Optional Locked As Object, Optional Hidden As Object) As Scenario" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(181)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Scenario</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.String" />
        <Parameter Name="ChangingCells" Type="System.Object" />
        <Parameter Name="Values" Type="System.Object" />
        <Parameter Name="Comment" Type="System.Object" />
        <Parameter Name="Locked" Type="System.Object" />
        <Parameter Name="Hidden" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name"><span data-ttu-id="e825f-106"><b>String</b> necessário.</span><span class="sxs-lookup"><span data-stu-id="e825f-106">Required <b>String</b>.</span></span> <span data-ttu-id="e825f-107">O nome do cenário.</span><span class="sxs-lookup"><span data-stu-id="e825f-107">The scenario name.</span></span></param>
        <param name="ChangingCells"><span data-ttu-id="e825f-108">Objeto <b>Required</b>.</span><span class="sxs-lookup"><span data-stu-id="e825f-108">Required <b>Object</b>.</span></span> <span data-ttu-id="e825f-109">Um <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objeto que se refere às células changing para o cenário.</span><span class="sxs-lookup"><span data-stu-id="e825f-109">A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that refers to the changing cells for the scenario.</span></span></param>
        <param name="Values"><span data-ttu-id="e825f-110">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="e825f-110">Optional <b>Object</b>.</span></span> <span data-ttu-id="e825f-111">Uma matriz que contém os valores de cenário para as células em <paramref name="ChangingCells" /> .</span><span class="sxs-lookup"><span data-stu-id="e825f-111">An array that contains the scenario values for the cells in <paramref name="ChangingCells" />.</span></span> <span data-ttu-id="e825f-112">Se esse argumento for omitido, os valores do cenário serão considerados os valores atuais nas células em <paramref name="ChangingCells" /> .</span><span class="sxs-lookup"><span data-stu-id="e825f-112">If this argument is omitted, the scenario values are assumed to be the current values in the cells in <paramref name="ChangingCells" />.</span></span></param>
        <param name="Comment"><span data-ttu-id="e825f-113">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="e825f-113">Optional <b>Object</b>.</span></span> <span data-ttu-id="e825f-114">Uma sequência de caracteres que especifica o texto de comentário para o cenário.</span><span class="sxs-lookup"><span data-stu-id="e825f-114">A string that specifies comment text for the scenario.</span></span> <span data-ttu-id="e825f-115">Quando um novo cenário é adicionado, o nome do autor e a data são adicionados automaticamente no início do texto de comentário.</span><span class="sxs-lookup"><span data-stu-id="e825f-115">When a new scenario is added, the author's name and date are automatically added at the beginning of the comment text.</span></span></param>
        <param name="Locked"><span data-ttu-id="e825f-116">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="e825f-116">Optional <b>Object</b>.</span></span> <span data-ttu-id="e825f-117"><b>True</b> para bloquear o cenário e evitar alterações.</span><span class="sxs-lookup"><span data-stu-id="e825f-117"><b>True</b> to lock the scenario to prevent changes.</span></span> <span data-ttu-id="e825f-118">O valor padrão é <b>True</b>.</span><span class="sxs-lookup"><span data-stu-id="e825f-118">The default value is <b>True</b>.</span></span></param>
        <param name="Hidden"><span data-ttu-id="e825f-119">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="e825f-119">Optional <b>Object</b>.</span></span> <span data-ttu-id="e825f-120"><b>True</b> para ocultar o cenário.</span><span class="sxs-lookup"><span data-stu-id="e825f-120"><b>True</b> to hide the scenario.</span></span> <span data-ttu-id="e825f-121">O valor padrão é <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="e825f-121">The default value is <b>False</b>.</span></span></param>
        <summary><span data-ttu-id="e825f-122">Cria um novo cenário e o adiciona à lista de cenários disponíveis para a planilha atual.</span><span class="sxs-lookup"><span data-stu-id="e825f-122">Creates a new scenario and adds it to the list of scenarios that are available for the current worksheet.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="e825f-123">Um nome de cenário precisa ser exclusivo; o Microsoft Excel gerará um erro se você tentar criar um cenário com um nome que já esteja em uso.</span><span class="sxs-lookup"><span data-stu-id="e825f-123">A scenario name must be unique; Microsoft Excel generates an error if you try to create a scenario with a name that's already in use.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Scenarios.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e825f-124">Retorna um <see cref="T:Microsoft.Office.Interop.Excel.Application" /> objeto que representa o aplicativo Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="e825f-124">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Scenarios.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e825f-125">Retorna o número de objetos na coleção.</span><span class="sxs-lookup"><span data-stu-id="e825f-125">Returns the number of objects in the collection.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSummary">
      <MemberSignature Language="C#" Value="public object CreateSummary (Microsoft.Office.Interop.Excel.XlSummaryReportType ReportType = Microsoft.Office.Interop.Excel.XlSummaryReportType.xlStandardSummary, object ResultCells);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateSummary([in]valuetype Microsoft.Office.Interop.Excel.XlSummaryReportType ReportType, [in]object ResultCells) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Scenarios.CreateSummary(Microsoft.Office.Interop.Excel.XlSummaryReportType,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSummary (Optional ReportType As XlSummaryReportType = Microsoft.Office.Interop.Excel.XlSummaryReportType.xlStandardSummary, Optional ResultCells As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(913)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ReportType" Type="Microsoft.Office.Interop.Excel.XlSummaryReportType" />
        <Parameter Name="ResultCells" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ReportType"><span data-ttu-id="e825f-126">Opcional <see cref="T:Microsoft.Office.Interop.Excel.XlSummaryReportType" /> .</span><span class="sxs-lookup"><span data-stu-id="e825f-126">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSummaryReportType" />.</span></span></param>
        <param name="ResultCells"><span data-ttu-id="e825f-127">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="e825f-127">Optional <b>Object</b>.</span></span> <span data-ttu-id="e825f-128">Um <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objeto que representa as células de resultado na planilha especificada.</span><span class="sxs-lookup"><span data-stu-id="e825f-128">A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the result cells on the specified worksheet.</span></span> <span data-ttu-id="e825f-129">Normalmente, esse intervalo refere-se a uma ou mais células contendo as fórmulas que dependem dos valores das células variáveis para seu modelo — ou seja, as células que exibem os resultados de um cenário particular.</span><span class="sxs-lookup"><span data-stu-id="e825f-129">Normally, this range refers to one or more cells containing the formulas that depend on the changing cell values for your model — that is, the cells that show the results of a particular scenario.</span></span> <span data-ttu-id="e825f-130">Se esse argumento for omitido, não serão incluídas células de resultado no relatório.</span><span class="sxs-lookup"><span data-stu-id="e825f-130">If this argument is omitted, there are no result cells included in the report.</span></span></param>
        <summary><span data-ttu-id="e825f-131">Cria uma nova planilha contendo um relatório resumido dos cenários na planilha especificada.</span><span class="sxs-lookup"><span data-stu-id="e825f-131">Creates a new worksheet that contains a summary report for the scenarios on the specified worksheet.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Scenarios.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e825f-132">Retorna um inteiro de 32 bits que indica o aplicativo no qual esse objeto foi criado.</span><span class="sxs-lookup"><span data-stu-id="e825f-132">Returns a 32-bit integer that indicates the application in which this object was created.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="e825f-133">Se o objeto foi criado no Microsoft Excel, essa propriedade retornará a sequência XCEL, que é equivalente ao número hexadecimal 5843454C.</span><span class="sxs-lookup"><span data-stu-id="e825f-133">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span></span></para>
          <para><span data-ttu-id="e825f-134">A propriedade <b>Creator</b> foi projetada para ser usada no Microsoft Excel para Macintosh, onde cada aplicativo possui um código de criador de quatro caracteres.</span><span class="sxs-lookup"><span data-stu-id="e825f-134">The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span></span> <span data-ttu-id="e825f-135">Por exemplo, o Microsoft Excel possui o código de criador XCEL.</span><span class="sxs-lookup"><span data-stu-id="e825f-135">For example, Microsoft Excel has the creator code XCEL.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Scenarios.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-4)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Scenario Item (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Scenario Item([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Scenarios.Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Item (Index As Object) As Scenario" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::Scenario ^ Item(System::Object ^ Index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Scenario</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="e825f-136">Objeto <b>Required</b>.</span><span class="sxs-lookup"><span data-stu-id="e825f-136">Required <b>Object</b>.</span></span> <span data-ttu-id="e825f-137">O nome ou número de índice do objeto.</span><span class="sxs-lookup"><span data-stu-id="e825f-137">The name or index number for the object.</span></span></param>
        <summary><span data-ttu-id="e825f-138">Retorna um único objeto de uma coleção.</span><span class="sxs-lookup"><span data-stu-id="e825f-138">Returns a single object from a collection.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Merge">
      <MemberSignature Language="C#" Value="public object Merge (object Source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Merge([in]object Source) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Scenarios.Merge(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Merge (Source As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Merge(System::Object ^ Source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(564)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Source" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Source"><span data-ttu-id="e825f-139">Objeto <b>Required</b>.</span><span class="sxs-lookup"><span data-stu-id="e825f-139">Required <b>Object</b>.</span></span> <span data-ttu-id="e825f-140">O nome da planilha que contém cenários a serem mesclados ou um <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> objeto que representa essa planilha.</span><span class="sxs-lookup"><span data-stu-id="e825f-140">The name of the sheet that contains scenarios to be merged, or a <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> object that represents that sheet.</span></span></param>
        <summary><span data-ttu-id="e825f-141">Mescla os cenários de outra planilha na <see cref="T:Microsoft.Office.Interop.Excel.Scenarios" /> coleção.</span><span class="sxs-lookup"><span data-stu-id="e825f-141">Merges the scenarios from another sheet into the <see cref="T:Microsoft.Office.Interop.Excel.Scenarios" /> collection.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="e825f-142">O valor de um intervalo mesclado é especificado na célula do canto superior esquerdo do intervalo.</span><span class="sxs-lookup"><span data-stu-id="e825f-142">The value of a merged range is specified in the cell of the range's upper-left corner.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Scenarios.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e825f-143">Retorna o objeto pai para o objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="e825f-143">Returns the parent object for the specified object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>