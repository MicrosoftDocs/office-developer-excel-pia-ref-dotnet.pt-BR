<Type Name="CalculatedMember" FullName="Microsoft.Office.Interop.Excel.CalculatedMember">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b21af6737ba0963f5684b7823b01d8e7626b56bb" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="07/19/2018" />
    <Meta Name="ms.locfileid" Value="20576787" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface CalculatedMember" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract CalculatedMember" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.CalculatedMember" />
  <TypeSignature Language="VB.NET" Value="Public Interface CalculatedMember" />
  <TypeSignature Language="C++ CLI" Value="public interface class CalculatedMember" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00024455-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="feced-101">Representa os campos e itens calculados para tabelas dinâmicas com fontes de dados OLAP (Online Analytical Processing, processamento analítico online.</span>
      <span class="sxs-lookup">
        <span data-stu-id="feced-101">Represents the calculated fields and calculated items for PivotTables with Online Analytical Processing (OLAP) data sources.</span>
      </span>
    </summary>
    <remarks>
      <span data-ttu-id="feced-102">
        <para>Use o <see cref="M:Microsoft.Office.Interop.Excel.CalculatedMembers.Add(System.String,System.String,System.Object,System.Object)" /> método ou o <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMembers.Item(System.Object)" /> propriedade do <see cref="T:Microsoft.Office.Interop.Excel.CalculatedMembers" /> coleção, para retornar um objeto <b>CalculatedMember</b> .</para>
        <para>Com um objeto <b>CalculatedMember</b> , é possível verificar a validade de um campo ou item calculado em uma tabela dinâmica usando o <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMember.IsValid" /> propriedade.</para>
        <para>
          <b>Observação</b> a propriedade <b>IsValid</b> retornará <b>True</b> se a tabela dinâmica não está conectada à fonte de dados. Use o <see cref="M:Microsoft.Office.Interop.Excel.PivotCache.MakeConnection" /> método antes de testar a propriedade <b>IsValid</b> .</para>
        <para />
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="feced-102">
          <para>Use the <see cref="M:Microsoft.Office.Interop.Excel.CalculatedMembers.Add(System.String,System.String,System.Object,System.Object)" /> method or the <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMembers.Item(System.Object)" /> property of the <see cref="T:Microsoft.Office.Interop.Excel.CalculatedMembers" /> collection to return a <b>CalculatedMember</b> object.</para>
          <para>With a <b>CalculatedMember</b> object you can check the validity of a calculated field or item in a PivotTable using the <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMember.IsValid" /> property.</para>
          <para>
            <b>Note</b>  The <b>IsValid</b> property will return <b>True</b> if the PivotTable is not currently connected to the data source. Use the <see cref="M:Microsoft.Office.Interop.Excel.PivotCache.MakeConnection" /> method before testing the <b>IsValid</b> property.</para>
          <para />
        </span>
      </span>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="_Default">
      <MemberSignature Language="C#" Value="public string this { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string _Default" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CalculatedMember._Default" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property _Default As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ default { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="feced-103">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feced-103">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CalculatedMember.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="feced-104">Retorna um <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object que representa o aplicativo do Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feced-104">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Excel application.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CalculatedMember.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="feced-105">Retorna um inteiro de 32 bits que indica o aplicativo no qual esse objeto foi criado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feced-105">Returns a 32-bit integer that indicates the application in which this object was created.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="feced-106">
            <para>Se o objeto foi criado no Excel, essa propriedade retornará a cadeia de caracteres XCEL, que é equivalente à c. 5843454 número hexadecimal</para> Propriedade 
          <para>o <b>criador</b> foi projetada para ser usado no Excel para Macintosh, onde cada aplicativo possui um código de criador de quatro caracteres. Por exemplo, o Excel tem o código de criador XCEL.</para><para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="feced-106">
              <para>If the object was created in Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</para>
              <para>The <b>Creator</b> property is designed to be used in Excel for the Macintosh, where each application has a four-character creator code. For example, Excel has the creator code XCEL.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.CalculatedMember.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(117)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="feced-107">Exclui o objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feced-107">Deletes the object.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="feced-108">
            <para>Você pode excluir campos de cubo somente se você tiver criado o cubo fields sozinho usando o método <b>CalculatedMember</b> com o <paramref name="xlCalculatedSet" /> argumento.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="feced-108">
              <para>You can delete cube fields only if you have created the cube fields yourself by using the <b>CalculatedMember.Add</b> method with the <paramref name="xlCalculatedSet" /> argument.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayFolder">
      <MemberSignature Language="C#" Value="public string DisplayFolder { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayFolder" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CalculatedMember.DisplayFolder" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DisplayFolder As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DisplayFolder { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2927)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2927)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="feced-109">Obtém o nome da pasta de exibição para um conjunto nomeado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feced-109">Gets the display folder name for a named set.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="feced-110">O nome da pasta de exibição para um conjunto nomeado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feced-110">The display folder name for a named set.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="feced-111">
            <para>Somente leitura.</para>
            <para>o valor dessa propriedade corresponde ao valor opcional que pode ser inserido na caixa de texto de pasta de exibição, da caixa de diálogo Definir novo/modificar quando um conjunto nomeado é criado ou editado. Para criar um novo conjunto de dados em uma tabela dinâmica com base em uma fonte de dados OLAP nomeado, clique em tabela dinâmica, clique em campo, itens, &amp; conjuntos de opções de ferramentas de tabela dinâmica de guia na faixa de opções, clique em gerenciar conjuntos, clique em novo na caixa de diálogo Set Manager e, em seguida, clique em criar Se t usando MDX. Isso exibirá a caixa de diálogo Definir novo, que contém a caixa de texto da pasta de exibição. Da mesma forma, se você selecionar um conjunto nomeado existente na caixa de diálogo Set Manager e clique em Editar, é exibida a caixa de diálogo Modificar definida.</para>
            <para>Essa propriedade junto com o <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMember.Dynamic" /> e <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMember.HierarchizeDistinct" /> propriedades só podem ser lido para conjuntos nomeados (que são representados por <see cref="T:Microsoft.Office.Interop.Excel.CalculatedMember" /> objetos onde o <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMember.Type" /> é igual a propriedade <paramref name="xlCalculatedSet" />). Essas propriedades para não podem ser lidas por membros ou medidas calculados (que são representados por <see cref="T:Microsoft.Office.Interop.Excel.CalculatedMember" /> objetos onde o <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMember.Type" /> é igual a propriedade <paramref name="xlCalculatedMember" />). Se você tentar ler essas propriedades para membros ou medidas calculados, um erro em tempo de execução é disparado.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="feced-111">
              <para>Read-only.</para>
              <para>The value of this property corresponds to the optional value that can be entered in the Display folder text box of the New/Modify Set dialog box when a named set is created or edited. To create a new named set from data in a PivotTable based on an OLAP data source, click the PivotTable, click Field, Items, &amp; Sets on the PivotTable Tools Options tab on the ribbon, click Manage Sets, click New in the Set Manager dialog box, and then click Create Set using MDX. This will display the New Set dialog box, which contains the Display folder text box. Similarly, if you select an existing named set in the Set Manager dialog box, and then click Edit, the Modify Set dialog box is displayed.</para>
              <para>This property along with the <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMember.Dynamic" /> and <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMember.HierarchizeDistinct" /> properties can only be read for named sets (which are represented by <see cref="T:Microsoft.Office.Interop.Excel.CalculatedMember" /> objects where the <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMember.Type" /> property equals <paramref name="xlCalculatedSet" />). These properties for cannot be read for calculated members or measures (which are represented by <see cref="T:Microsoft.Office.Interop.Excel.CalculatedMember" /> objects where the <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMember.Type" /> property equals <paramref name="xlCalculatedMember" />). If you attempt to read these properties for calculated members or measures, a run-time error is raised.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dynamic">
      <MemberSignature Language="C#" Value="public bool Dynamic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Dynamic" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CalculatedMember.Dynamic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Dynamic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Dynamic { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2926)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2926)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="feced-112">Obtém se o conjunto nomeado especificado é recalculado a cada atualização.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feced-112">Gets whether the specified named set is recalculated with every update.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="feced-113">
            <b>true</b> se o conjunto nomeado especificado é recalculado a cada atualização; Caso contrário, <b>false</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feced-113">
              <b>true</b> if the specified named set is recalculated with every update; otherwise, <b>false</b>.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="feced-114">
            <para>Somente leitura.</para>
            <para>
              <b>true</b> se o conjunto nomeado for recalculado a cada atualização; caso contrário <b>false</b>.</para>
            <para>o valor dessa propriedade corresponde à configuração da recalcular definidas com cada caixa de seleção de atualização na caixa de diálogo Definir novo/modificar que está disponível quando um conjunto nomeado é criado ou editado. Para criar um novo conjunto de dados em uma tabela dinâmica com base em uma fonte de dados OLAP nomeado, clique em tabela dinâmica, clique em campo, itens, &amp; conjuntos de opções de ferramentas de tabela dinâmica de guia na faixa de opções, clique em gerenciar conjuntos, clique em novo na caixa de diálogo Set Manager e, em seguida, clique em criar Se t usando MDX. Isso exibirá a caixa de diálogo Definir novo, que contém o recalcular definidas com cada caixa de seleção de atualização. Da mesma forma, se você selecionar um conjunto nomeado existente na caixa de diálogo Set Manager e clique em Editar, é exibida a caixa de diálogo Modificar definida.</para>
            <para>Essa propriedade junto com o <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMember.DisplayFolder" /> e <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMember.HierarchizeDistinct" /> propriedades só podem ser lido para conjuntos nomeados (que são representados por <see cref="T:Microsoft.Office.Interop.Excel.CalculatedMember" /> objetos onde o <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMember.Type" /> é igual a propriedade <paramref name="xlCalculatedSet" />). Essas propriedades para não podem ser lidas por membros ou medidas calculados (que são representados por <see cref="T:Microsoft.Office.Interop.Excel.CalculatedMember" /> objetos onde o <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMember.Type" /> é igual a propriedade <paramref name="xlCalculatedMember" />). Se você tentar ler essas propriedades para membros ou medidas calculados, um erro em tempo de execução é disparado.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="feced-114">
              <para>Read-only.</para>
              <para>
                <b>true</b> if the named set is recalculated with every update; otherwise <b>false</b>.</para>
              <para>The value of this property corresponds to the setting of the Recalculate set with every update check box in the New/Modify Set dialog box that is available when a named set is created or edited. To create a new named set from data in a PivotTable based on an OLAP data source, click the PivotTable, click Field, Items, &amp; Sets on the PivotTable Tools Options tab on the ribbon, click Manage Sets, click New in the Set Manager dialog box, and then click Create Set using MDX. This will display the New Set dialog box, which contains the Recalculate set with every update check box. Similarly, if you select an existing named set in the Set Manager dialog box, and then click Edit, the Modify Set dialog box is displayed.</para>
              <para>This property along with the <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMember.DisplayFolder" /> and <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMember.HierarchizeDistinct" /> properties can only be read for named sets (which are represented by <see cref="T:Microsoft.Office.Interop.Excel.CalculatedMember" /> objects where the <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMember.Type" /> property equals <paramref name="xlCalculatedSet" />). These properties for cannot be read for calculated members or measures (which are represented by <see cref="T:Microsoft.Office.Interop.Excel.CalculatedMember" /> objects where the <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMember.Type" /> property equals <paramref name="xlCalculatedMember" />). If you attempt to read these properties for calculated members or measures, a run-time error is raised.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlattenHierarchies">
      <MemberSignature Language="C#" Value="public bool FlattenHierarchies { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FlattenHierarchies" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CalculatedMember.FlattenHierarchies" />
      <MemberSignature Language="VB.NET" Value="Public Property FlattenHierarchies As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FlattenHierarchies { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2924)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2924)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2924)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="feced-115">Obtém ou define se itens de todos os níveis da hierarquia do conjunto nomeado especificado são exibidas no mesmo campo de um relatório de tabela dinâmica com base em um cubo OLAP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feced-115">Gets or sets whether items from all levels of the hierarchy of the specified named set are displayed in the same field of a PivotTable report based on an OLAP cube.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="feced-116">
            <b>true</b> se itens de todos os níveis da hierarquia do conjunto nomeado especificado são exibidos no mesmo campo de um relatório de tabela dinâmica com base em um cubo OLAP; Caso contrário, <b>false</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feced-116">
              <b>true</b> if items from all levels of the hierarchy of the specified named set are displayed in the same field of a PivotTable report based on an OLAP cube; otherwise, <b>false</b>.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="feced-117">
            <para>Leitura/gravação.</para>
            <para>
              <b>true</b> se itens de todos os níveis da hierarquia do conjunto nomeado forem exibidos no mesmo campo; caso contrário <b>false</b>.</para>
            <para>o valor dessa propriedade corresponde à configuração dos itens da exibição de níveis diferentes em campos separados de caixa de seleção na caixa de diálogo Definir novo/modificar quando um conjunto nomeado é criado ou editado. Para criar um novo conjunto de dados em uma tabela dinâmica com base em uma fonte de dados OLAP nomeado, clique em tabela dinâmica, clique em campo, itens, &amp; conjuntos de opções de ferramentas de tabela dinâmica de guia na faixa de opções, clique em gerenciar conjuntos, clique em novo na caixa de diálogo Set Manager e, em seguida, clique em criar Se t usando MDX. Isso exibirá a caixa de diálogo Definir novo, que contém os itens da exibição de níveis diferentes na caixa de seleção de campos separados. Da mesma forma, se você selecionar um conjunto nomeado existente na caixa de diálogo Set Manager e clique em Editar, é exibida a caixa de diálogo Modificar definida.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="feced-117">
              <para>Read/write.</para>
              <para>
                <b>true</b> if items from all levels of the hierarchy of the named set are displayed in the same field; otherwise <b>false</b>.</para>
              <para>The value of this property corresponds to the setting of the Display items from different levels in separate fields check box in the New/Modify Set dialog box when a named set is created or edited. To create a new named set from data in a PivotTable based on an OLAP data source, click the PivotTable, click Field, Items, &amp; Sets on the PivotTable Tools Options tab on the ribbon, click Manage Sets, click New in the Set Manager dialog box, and then click Create Set using MDX. This will display the New Set dialog box, which contains the Display items from different levels in separate fields check box. Similarly, if you select an existing named set in the Set Manager dialog box, and then click Edit, the Modify Set dialog box is displayed.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Formula">
      <MemberSignature Language="C#" Value="public string Formula { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Formula" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CalculatedMember.Formula" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Formula As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Formula { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(261)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(261)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="feced-118">Retorna a fórmula do membro em expressões multidimensionais sintaxe (MDX).</span>
          <span class="sxs-lookup">
            <span data-stu-id="feced-118">Returns the member's formula in multidimensional expressions (MDX) syntax.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="feced-119">
            <para>Essa propriedade não está disponível para fontes de dados OLAP.</para>
            <para>Se a célula contiver uma constante, essa propriedade retornará a constante. Se a célula estiver vazia, <b>a propriedade</b> retornará uma sequência vazia. Se a célula contiver uma fórmula, a propriedade <b>Formula</b> retorna a fórmula como uma cadeia de caracteres no mesmo formato que seria exibido na barra de fórmulas (incluindo o sinal de igualdade).</para>
            <para>Se você definir o valor ou fórmula de uma célula como uma data, o Microsoft Excel verifica se essa célula já está formatada com um dos formatos de número de data ou hora. Se não, o Microsoft Excel altera o formato de número para o formato de número de data curta padrão.</para>
            <para>Se o intervalo for um intervalo one - ou bidimensional, você pode definir a fórmula em uma matriz das mesmas dimensões. Da mesma forma, você pode colocar a fórmula em uma matriz.</para>
            <para>a definição da fórmula para um intervalo de múltiplas células preenche todas as células do intervalo com a fórmula.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="feced-119">
              <para>This property is not available for OLAP data sources.</para>
              <para>If the cell contains a constant, this property returns the constant. If the cell is empty, the <b>Formula</b> property returns an empty string. If the cell contains a formula, the <b>Formula</b> property returns the formula as a string in the same format that would be displayed in the formula bar (including the equal sign).</para>
              <para>If you set the value or formula of a cell to a date, Microsoft Excel checks to see whether that cell is already formatted with one of the date or time number formats. If not, Microsoft Excel changes the number format to the default short date number format.</para>
              <para>If the range is a one- or two-dimensional range, you can set the formula to an array of the same dimensions. Similarly, you can put the formula into an array.</para>
              <para>Setting the formula for a multiple-cell range fills all cells in the range with the formula.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HierarchizeDistinct">
      <MemberSignature Language="C#" Value="public bool HierarchizeDistinct { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HierarchizeDistinct" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CalculatedMember.HierarchizeDistinct" />
      <MemberSignature Language="VB.NET" Value="Public Property HierarchizeDistinct As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HierarchizeDistinct { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2925)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2925)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2925)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="feced-120">Obtém ou define se ordenar e remover duplicatas ao exibir a hierarquia dos especificado conjunto nomeado em um relatório de tabela dinâmica baseado em um cubo OLAP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feced-120">Gets or sets whether to order and remove duplicates when displaying the hierarchy of the specified named set in a PivotTable report based on an OLAP cube.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="feced-121">
            <b>True</b> se duplicatas devem ser ordenadas e removidas ao exibir a hierarquia dos especificado conjunto nomeado em um relatório de tabela dinâmica com base em um cubo OLAP; Caso contrário, <b>false</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feced-121">
              <b>true</b> if duplicates should be ordered and removed when displaying the hierarchy of the specified named set in a PivotTable report based on an OLAP cube; otherwise, <b>false</b>.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="feced-122">
            <para>Leitura/gravação.</para>
            <para>
              <b>true</b> se a hierarquia do conjunto nomeado for exibida conforme ordenado com as duplicatas removidas; caso contrário <b>false</b>.</para>
            <para>o valor dessa propriedade corresponde à ordem automaticamente e remover duplicatas da caixa de seleção set na caixa de diálogo Definir novo/modificar quando um conjunto nomeado é criado ou editado. Para criar um novo conjunto de dados em uma tabela dinâmica com base em uma fonte de dados OLAP nomeado, clique em tabela dinâmica, clique em campo, itens, &amp; conjuntos de opções de ferramentas de tabela dinâmica de guia na faixa de opções, clique em gerenciar conjuntos, clique em novo na caixa de diálogo Set Manager e, em seguida, clique em criar Se t usando MDX. Isso exibirá a caixa de diálogo Definir novo, que contém o ordem automaticamente e remover duplicatas da caixa de seleção do conjunto. Da mesma forma, se você selecionar um conjunto nomeado existente na caixa de diálogo Set Manager e clique em Editar, é exibida a caixa de diálogo Modificar definida.</para>
            <para>Essa propriedade junto com o <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMember.DisplayFolder" /> e <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMember.Dynamic" /> propriedades só podem ser lido para conjuntos nomeados (que são representados por <see cref="T:Microsoft.Office.Interop.Excel.CalculatedMember" /> objetos onde o <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMember.Type" /> é igual a propriedade <paramref name="xlCalculatedSet" />). Essas propriedades para não podem ser lidas por membros ou medidas calculados (que são representados por <see cref="T:Microsoft.Office.Interop.Excel.CalculatedMember" /> objetos onde o <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMember.Type" /> é igual a propriedade <paramref name="xlCalculatedMember" />). Se você tentar ler essas propriedades para membros ou medidas calculados, um erro em tempo de execução é disparado.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="feced-122">
              <para>Read/write.</para>
              <para>
                <b>true</b> if the hierarchy of the named set is displayed as ordered with duplicates removed; otherwise <b>false</b>.</para>
              <para>The value of this property corresponds to the Automatically order and remove duplicates from the set check box in the New/Modify Set dialog box when a named set is created or edited. To create a new named set from data in a PivotTable based on an OLAP data source, click the PivotTable, click Field, Items, &amp; Sets on the PivotTable Tools Options tab on the ribbon, click Manage Sets, click New in the Set Manager dialog box, and then click Create Set using MDX. This will display the New Set dialog box, which contains the Automatically order and remove duplicates from the set check box. Similarly, if you select an existing named set in the Set Manager dialog box, and then click Edit, the Modify Set dialog box is displayed.</para>
              <para>This property along with the <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMember.DisplayFolder" /> and <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMember.Dynamic" /> properties can only be read for named sets (which are represented by <see cref="T:Microsoft.Office.Interop.Excel.CalculatedMember" /> objects where the <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMember.Type" /> property equals <paramref name="xlCalculatedSet" />). These properties for cannot be read for calculated members or measures (which are represented by <see cref="T:Microsoft.Office.Interop.Excel.CalculatedMember" /> objects where the <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMember.Type" /> property equals <paramref name="xlCalculatedMember" />). If you attempt to read these properties for calculated members or measures, a run-time error is raised.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public bool IsValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsValid" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CalculatedMember.IsValid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsValid { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2188)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2188)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="feced-123">Retorna um <b>Boolean</b> que indica se o membro calculado especificado tiver sido bem-sucedida com o provedor OLAP durante a sessão atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feced-123">Returns a <b>Boolean</b> that indicates whether the specified calculated member has been successfully instantiated with the OLAP provider during the current session.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="feced-124">
            <para>Essa propriedade retorna <b>True</b> , mesmo se a tabela dinâmica não estiver conectada à sua fonte de dados. Certifique-se de que a tabela dinâmica está conectada antes de consultar o valor da propriedade <b>IsValid</b> .</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="feced-124">
              <para>This property returns <b>True</b> even if the PivotTable is not connected to its data source. Make sure that the PivotTable is connected before querying the value of the <b>IsValid</b> property.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureGroup">
      <MemberSignature Language="C#" Value="public string MeasureGroup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MeasureGroup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CalculatedMember.MeasureGroup" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MeasureGroup As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MeasureGroup { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3092)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3092)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="feced-125">Retorna o grupo de medidas associado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feced-125">Returns the associated measure group.</span>
          </span>
          <span data-ttu-id="feced-126">Somente leitura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feced-126">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CalculatedMember.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="feced-127">Retorna o nome do objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feced-127">Returns the name of the object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberFormat">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCalcMemNumberFormatType NumberFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCalcMemNumberFormatType NumberFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CalculatedMember.NumberFormat" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NumberFormat As XlCalcMemNumberFormatType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCalcMemNumberFormatType NumberFormat { Microsoft::Office::Interop::Excel::XlCalcMemNumberFormatType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(193)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(193)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCalcMemNumberFormatType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="feced-128">Retorna um <see cref="T:Microsoft.Office.Interop.Excel.XlCalcMemNumberFormatType" /> valor que representa o formato de número do membro calculado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feced-128">Returns an <see cref="T:Microsoft.Office.Interop.Excel.XlCalcMemNumberFormatType" /> value that represents the number format of the calculated member.</span>
          </span>
          <span data-ttu-id="feced-129">O valor padrão é <b>xlNumberFormatTypeDefault</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feced-129">The default value is <b>xlNumberFormatTypeDefault</b>.</span>
          </span>
          <span data-ttu-id="feced-130">Somente leitura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feced-130">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CalculatedMember.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="feced-131">Retorna o objeto pai para o objeto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feced-131">Returns the parent object for the specified object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentHierarchy">
      <MemberSignature Language="C#" Value="public string ParentHierarchy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ParentHierarchy" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CalculatedMember.ParentHierarchy" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParentHierarchy As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ParentHierarchy { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3093)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3093)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="feced-132">Retorna o nome da hierarquia pai atual das hierarquias disponíveis no cubo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feced-132">Returns the name of the current parent hierarchy from the hierarchies that are available on the cube.</span>
          </span>
          <span data-ttu-id="feced-133">Somente leitura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feced-133">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentMember">
      <MemberSignature Language="C#" Value="public string ParentMember { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ParentMember" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CalculatedMember.ParentMember" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParentMember As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ParentMember { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3094)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3094)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="feced-134">Retorna o nome do membro pai para a hierarquia de pai.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feced-134">Returns the name of the parent member for the parent hierarchy.</span>
          </span>
          <span data-ttu-id="feced-135">Somente leitura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feced-135">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="feced-136">
            <para>Membro pai padrão é determinado pelo qualquer item tiver sido definido pelo criador do cubo ou Analysis Services como o membro padrão da hierarquia selecionada. Por exemplo, se houver um membro "All" para a hierarquia selecionada, em seguida, isso é normalmente o pai membro padrão no cubo.</para>
            <para>Se a hierarquia pai selecionado não tem um "All" membro pai, outro membro de pai padrão é definida pelo criador do cubo ou programaticamente pelo Analysis Services. (Se o membro padrão não for especificado pelo designer do cubo, o mecanismo do Analysis Services automaticamente define uma.)</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="feced-136">
              <para>The default parent member is determined by whatever has been defined by the cube designer or Analysis Services as the default member of the selected hierarchy. For example, if an “All” member exists for the selected hierarchy, then this is typically the default parent member on the cube.</para>
              <para>If the selected parent hierarchy does not have an “All” parent member, another default parent member is defined, either by the cube designer or programmatically by Analysis Services. (If a default member is not specified by the cube designer, the Analysis Services engine automatically defines one.)</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SolveOrder">
      <MemberSignature Language="C#" Value="public int SolveOrder { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SolveOrder" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CalculatedMember.SolveOrder" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SolveOrder As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SolveOrder { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2187)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2187)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="feced-137">Retorna um <b>inteiro</b> especificando o valor do membro calculado resolve ordem argumento MDX (multidimensional expression).</span>
          <span class="sxs-lookup">
            <span data-stu-id="feced-137">Returns an <b>Integer</b> specifying the value of the calculated member's solve order MDX (multidimensional expression) argument.</span>
          </span>
          <span data-ttu-id="feced-138">The default value is zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feced-138">The default value is zero.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceName">
      <MemberSignature Language="C#" Value="public string SourceName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SourceName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CalculatedMember.SourceName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SourceName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SourceName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(721)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(721)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="feced-139">Retorna o nome do objeto especificado como ele aparece nos dados de origem para o relatório de tabela dinâmica especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feced-139">Returns the specified object’s name as it appears in the original source data for the specified PivotTable report.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="feced-140">
            <para>Propriedade <b>SourceName</b> pode ser diferente do nome do item atual se o usuário tiver renomeado o item após a criação do relatório de tabela dinâmica.</para>
            <para>A tabela a seguir mostra os valores de exemplo da propriedade <b>SourceName</b> e propriedades relacionadas, recebe um <a href="mk:@MSITStore:C:\Program%20Files\Microsoft%20Office\OFFICE11\1033\VBAXL10.CHM::/html/xlproSourceName1.htm">OLAP</a></para>
            <list type="table">
              <item>
                <term>
                  <b>Legenda</b>
                </term>
                <description>Paris</description>
                <description>Paris</description>
              </item>
              <item>
                <term>
                  <b>nome</b>
                </term>
                <description>[Europe]. [ França]. [Paris] (somente leitura)</description>
                <description>Paris</description>
              </item>
              <item>
                <term>
                  <b>SourceName</b>
                </term>
                <description>[Europe]. [ França]. [Paris] (somente leitura)</description>
                <description>(igual ao valor da propriedade SQL, somente leitura)</description>
              </item>
              <item>
                <term>
                  <b>Valor</b>
                </term>
                <description>[Europe]. [ França]. [Paris] (somente leitura)</description>
                <description>Paris</description>
              </item>
            </list>
            <para>Ao se especificar um índice para o <see cref="T:Microsoft.Office.Interop.Excel.PivotItems" /> coleção, você pode usar a sintaxe mostrada na tabela a seguir.</para> expressão 
          <list type="table"><item><term>. PivotItems ("[Europe]. [ França]. [Paris] ")</term><description>expressão. PivotItems("Paris")</description></item></list><para>ao usar o <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMembers.Item(System.Object)" /> propriedade referência um determinado membro de uma coleção, você pode usar os nomes de índice de texto, conforme mostrado na tabela a seguir.</para><list type="table"><item><term>[Europe]. [ França]. [Paris]</term><description>Paris</description></item></list><para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="feced-140">
              <para>The <b>SourceName</b> property might be different from the current item name if the user renamed the item after creating the PivotTable report.</para>
              <para>The following table shows example values of the <b>SourceName</b> property and related properties, given an <a href="mk:@MSITStore:C:\Program%20Files\Microsoft%20Office\OFFICE11\1033\VBAXL10.CHM::/html/xlproSourceName1.htm">OLAP</a></para>
              <list type="table">
                <item>
                  <term>
                    <b>Caption</b>
                  </term>
                  <description>Paris</description>
                  <description>Paris</description>
                </item>
                <item>
                  <term>
                    <b>Name</b>
                  </term>
                  <description>[Europe].[France].[Paris] (read-only)</description>
                  <description>Paris</description>
                </item>
                <item>
                  <term>
                    <b>SourceName</b>
                  </term>
                  <description>[Europe].[France].[Paris] (read-only)</description>
                  <description>(same as SQL property value, read-only)</description>
                </item>
                <item>
                  <term>
                    <b>Value</b>
                  </term>
                  <description>[Europe].[France].[Paris] (read-only)</description>
                  <description>Paris</description>
                </item>
              </list>
              <para>When specifying an index into the <see cref="T:Microsoft.Office.Interop.Excel.PivotItems" /> collection, you can use the syntax shown in the following table.</para>
              <list type="table">
                <item>
                  <term>expression.PivotItems("[Europe].[France].[Paris]")</term>
                  <description>expression.PivotItems("Paris")</description>
                </item>
              </list>
              <para>When using the <see cref="P:Microsoft.Office.Interop.Excel.CalculatedMembers.Item(System.Object)" /> property to reference a specific member of a collection, you can use the text index names, as shown in the following table.</para>
              <list type="table">
                <item>
                  <term>[Europe].[France].[Paris]</term>
                  <description>Paris</description>
                </item>
              </list>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCalculatedMemberType Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCalculatedMemberType Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CalculatedMember.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As XlCalculatedMemberType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCalculatedMemberType Type { Microsoft::Office::Interop::Excel::XlCalculatedMemberType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCalculatedMemberType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="feced-141">Retorna o tipo do membro calculado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="feced-141">Returns the calculated member type.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="feced-142">
            <para>
              <see cref="T:Microsoft.Office.Interop.Excel.XlCalculatedMemberType" />pode ser uma destas constantes <b>XlCalculatedMemberType</b> :</para>
            <para>
              <b>xlCalculatedMember</b>
            </para>
            <para>
              <b>xlCalculatedSet</b>
            </para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="feced-142">
              <para>
                <see cref="T:Microsoft.Office.Interop.Excel.XlCalculatedMemberType" /> can be one of these <b>XlCalculatedMemberType</b> constants:</para>
              <para>
                <b>xlCalculatedMember</b>
              </para>
              <para>
                <b>xlCalculatedSet</b>
              </para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>