<Type Name="XmlMap" FullName="Microsoft.Office.Interop.Excel.XmlMap">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="90e19f9871537de3824defd244b85c6255bb7e45" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="09/24/2018" />
    <Meta Name="ms.locfileid" Value="20583605" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface XmlMap" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract XmlMap" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.XmlMap" />
  <TypeSignature Language="VB.NET" Value="Public Interface XmlMap" />
  <TypeSignature Language="C++ CLI" Value="public interface class XmlMap" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("0002447B-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="06434-101">Representa um mapa XML que foi adicionado a uma pasta de trabalho.</span>
      <span class="sxs-lookup">
        <span data-stu-id="06434-101">Represents an XML map that has been added to a workbook.</span>
      </span>
    </summary>
    <remarks>
      <para>
        <span data-ttu-id="06434-102">Recursos de XML, exceto salvar arquivos no formato de planilha XML, estão disponíveis somente no Microsoft Office Professional Edition 2003 e o Microsoft Office Excel 2003.</span>
        <span class="sxs-lookup">
          <span data-stu-id="06434-102">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span>
        </span>
      </para>
      <para>
        <span data-ttu-id="06434-103">Use o <see cref="M:Microsoft.Office.Interop.Excel.XmlMaps.Add(System.String,System.Object)" /> método do <see cref="T:Microsoft.Office.Interop.Excel.XmlMaps" /> conjunto para adicionar um mapa XML a uma pasta de trabalho.</span>
        <span class="sxs-lookup">
          <span data-stu-id="06434-103">Use the <see cref="M:Microsoft.Office.Interop.Excel.XmlMaps.Add(System.String,System.Object)" /> method of the <see cref="T:Microsoft.Office.Interop.Excel.XmlMaps" /> collection to add an XML map to a workbook.</span>
        </span>
      </para>
      <para>
        <span data-ttu-id="06434-104">Importando e exportando dados XML</span>
        <span class="sxs-lookup">
          <span data-stu-id="06434-104">Importing and exporting XML data</span>
        </span>
      </para>
      <para>
        <span data-ttu-id="06434-105">Use o <see cref="M:Microsoft.Office.Interop.Excel.XmlMap.Import(System.String,System.Object)" /> método para importar dados XML de um arquivo de dados XML para as células mapeadas para o <b>XmlMap</b>especificado.</span>
        <span class="sxs-lookup">
          <span data-stu-id="06434-105">Use the <see cref="M:Microsoft.Office.Interop.Excel.XmlMap.Import(System.String,System.Object)" /> method to import XML data from an XML data file into cells mapped to the specified <b>XmlMap</b>.</span>
        </span>
        <span data-ttu-id="06434-106">O <see cref="M:Microsoft.Office.Interop.Excel.XmlMap.ImportXml(System.String,System.Object)" /> método importa dados XML para uma variável <b>String</b> .</span>
        <span class="sxs-lookup">
          <span data-stu-id="06434-106">The <see cref="M:Microsoft.Office.Interop.Excel.XmlMap.ImportXml(System.String,System.Object)" /> method imports XML data for a <b>String</b> variable.</span>
        </span>
      </para>
      <para>
        <span data-ttu-id="06434-107">Use o <see cref="M:Microsoft.Office.Interop.Excel.XmlMap.Export(System.String,System.Object)" /> método para exportar dados das células mapeadas para o <b>XmlMap</b>especificado.</span>
        <span class="sxs-lookup">
          <span data-stu-id="06434-107">Use the <see cref="M:Microsoft.Office.Interop.Excel.XmlMap.Export(System.String,System.Object)" /> method to export data from cells mapped to the specified <b>XmlMap</b>.</span>
        </span>
        <span data-ttu-id="06434-108">O <see cref="M:Microsoft.Office.Interop.Excel.XmlMap.ExportXml(System.String@)" /> método exporta dados XML para uma variável <b>String</b> .</span>
        <span class="sxs-lookup">
          <span data-stu-id="06434-108">The <see cref="M:Microsoft.Office.Interop.Excel.XmlMap.ExportXml(System.String@)" /> method exports XML data to a <b>String</b> variable.</span>
        </span>
      </para>
      <para></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="_Default">
      <MemberSignature Language="C#" Value="public string this { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string _Default" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap._Default" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property _Default As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ default { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AdjustColumnWidth">
      <MemberSignature Language="C#" Value="public bool AdjustColumnWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AdjustColumnWidth" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.AdjustColumnWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property AdjustColumnWidth As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AdjustColumnWidth { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1868)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1868)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1868)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="06434-109">
            <b>True</b> se as larguras de coluna são ajustadas automaticamente para o melhor ajuste cada vez que você atualiza a tabela de consulta especificada ou o mapa XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06434-109">
              <b>True</b> if the column widths are automatically adjusted for the best fit each time you refresh the specified query table or XML map.</span>
          </span>
          <span data-ttu-id="06434-110">
            <b>False</b> se as larguras de coluna não são ajustadas automaticamente com cada atualização.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06434-110">
              <b>False</b> if the column widths aren’t automatically adjusted with each refresh.</span>
          </span>
          <span data-ttu-id="06434-111">O valor padrão é <b>True</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06434-111">The default value is <b>True</b>.</span>
          </span>
          <span data-ttu-id="06434-112">Leitura/gravação <b>booleano</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06434-112">Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="06434-113">A largura máxima da coluna é dois terços da largura da tela.</span>
            <span class="sxs-lookup">
              <span data-stu-id="06434-113">The maximum column width is two-thirds the width of the screen.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendOnImport">
      <MemberSignature Language="C#" Value="public bool AppendOnImport { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AppendOnImport" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.AppendOnImport" />
      <MemberSignature Language="VB.NET" Value="Public Property AppendOnImport As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AppendOnImport { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2339)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2339)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2339)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="06434-114">
            <b>True</b> se você deseja anexar novas linhas a listas XML vinculadas para o mapa de esquema especificado quando estiver importando novos dados ou atualizando uma conexão existente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06434-114">
              <b>True</b> if you want to append new rows to XML lists that are bound to the specified schema map when you are importing new data or refreshing an existing connection.</span>
          </span>
          <span data-ttu-id="06434-115">
            <b>False</b> se você deseja substituir o conteúdo das células.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06434-115">
              <b>False</b> if you want to overwrite the contents of cells.</span>
          </span>
          <span data-ttu-id="06434-116">O valor padrão é <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06434-116">The default value is <b>False</b>.</span>
          </span>
          <span data-ttu-id="06434-117">Leitura/gravação <b>booleano</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06434-117">Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="06434-118">Recursos de XML, exceto salvar arquivos no formato de planilha XML, estão disponíveis somente no Microsoft Office Professional Edition 2003 e o Microsoft Office Excel 2003.</span>
            <span class="sxs-lookup">
              <span data-stu-id="06434-118">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="06434-119">Retorna um <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object que representa o aplicativo Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06434-119">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span>
          </span>
          <span data-ttu-id="06434-120">Somente leitura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06434-120">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="06434-121">Retorna um inteiro de 32 bits que indica o aplicativo no qual esse objeto foi criado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06434-121">Returns a 32-bit integer that indicates the application in which this object was created.</span>
          </span>
          <span data-ttu-id="06434-122">Se o objeto foi criado no Microsoft Excel, essa propriedade retorna a cadeia de caracteres XCEL, que é equivalente ao número hexadecimal 5843454C.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06434-122">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span>
          </span>
          <span data-ttu-id="06434-123">Somente leitura <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06434-123">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="06434-124">A propriedade <b>Creator</b> é projetada para ser usado no Microsoft Excel para Macintosh, onde cada aplicativo possui um código de criador de quatro caracteres.</span>
            <span class="sxs-lookup">
              <span data-stu-id="06434-124">The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span>
            </span>
            <span data-ttu-id="06434-125">Por exemplo, o Microsoft Excel tem o código de criador XCEL.</span>
            <span class="sxs-lookup">
              <span data-stu-id="06434-125">For example, Microsoft Excel has the creator code XCEL.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBinding">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XmlDataBinding DataBinding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.XmlDataBinding DataBinding" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.DataBinding" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataBinding As XmlDataBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XmlDataBinding ^ DataBinding { Microsoft::Office::Interop::Excel::XmlDataBinding ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2343)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2343)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XmlDataBinding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="06434-126">Retorna um <see cref="T:Microsoft.Office.Interop.Excel.XmlDataBinding" /> object que representa a ligação associada mapa de esquema especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06434-126">Returns an <see cref="T:Microsoft.Office.Interop.Excel.XmlDataBinding" /> object that represents the binding associated with the specified schema map.</span>
          </span>
          <span data-ttu-id="06434-127">Somente leitura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06434-127">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="06434-128">Recursos de XML, exceto salvar arquivos no formato de planilha XML, estão disponíveis somente no Microsoft Office Professional Edition 2003 e o Microsoft Office Excel 2003.</span>
            <span class="sxs-lookup">
              <span data-stu-id="06434-128">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.XmlMap.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(117)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="06434-129">Remove da pasta de trabalho o mapa XML especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06434-129">Removes the specified XML map from the workbook.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Export">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlXmlExportResult Export (string Url, object Overwrite);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.Office.Interop.Excel.XlXmlExportResult Export([in]string Url, [in]object Overwrite) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.XmlMap.Export(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Export (Url As String, Optional Overwrite As Object) As XlXmlExportResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1414)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlXmlExportResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Url" Type="System.String" />
        <Parameter Name="Overwrite" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Url">
          <span data-ttu-id="06434-130">
            <b>String</b> necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06434-130">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="06434-131">O caminho e nome de arquivo do arquivo de dados XML para exportar para.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06434-131">The path and filename of the XML data file to export to.</span>
          </span>
        </param>
        <param name="Overwrite">
          <span data-ttu-id="06434-132">Necessário <b>booleano</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06434-132">Required <b>Boolean</b>.</span>
          </span>
          <span data-ttu-id="06434-133">Defina como <b>True</b> para substituir o arquivo especificado no <paramref name="URL" /> parâmetro se o arquivo existir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06434-133">Set to <b>True</b> to overwrite the file specified in the <paramref name="URL" /> parameter if the file exists.</span>
          </span>
          <span data-ttu-id="06434-134">O valor padrão <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06434-134">The default value if <b>False</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="06434-135">Exporta o conteúdo das células mapeadas para especificado <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> objeto para um arquivo de dados XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06434-135">Exports the contents of cells mapped to the specified <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> object to an XML data file.</span>
          </span>
          <span data-ttu-id="06434-136">Retorna <see cref="T:Microsoft.Office.Interop.Excel.XlXmlExportResult" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06434-136">Returns <see cref="T:Microsoft.Office.Interop.Excel.XlXmlExportResult" />.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <span data-ttu-id="06434-137">Use o <see cref="M:Microsoft.Office.Interop.Excel.XmlMap.ExportXml(System.String@)" /> método para exportar o conteúdo das células mapeadas para uma variável <b>String</b> .</span>
            <span class="sxs-lookup">
              <span data-stu-id="06434-137">Use the <see cref="M:Microsoft.Office.Interop.Excel.XmlMap.ExportXml(System.String@)" /> method to export the contents of the mapped cells to a <b>String</b> variable.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportXml">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlXmlExportResult ExportXml (out string Data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.Office.Interop.Excel.XlXmlExportResult ExportXml([out] string&amp; Data) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.XmlMap.ExportXml(System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExportXml (ByRef Data As String) As XlXmlExportResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::XlXmlExportResult ExportXml([Runtime::InteropServices::Out] System::String ^ % Data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2346)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlXmlExportResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Data" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="Data">
          <span data-ttu-id="06434-138">
            <b>String</b> necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06434-138">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="06434-139">A variável para exportar os dados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06434-139">The variable to export the data to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="06434-140">Exporta o conteúdo das células mapeadas para especificado <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> objeto a uma variável <b>String</b> .</span>
          <span class="sxs-lookup">
            <span data-stu-id="06434-140">Exports the contents of cells mapped to the specified <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> object to a <b>String</b> variable.</span>
          </span>
          <span data-ttu-id="06434-141">Retorna <see cref="T:Microsoft.Office.Interop.Excel.XlXmlExportResult" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06434-141">Returns <see cref="T:Microsoft.Office.Interop.Excel.XlXmlExportResult" />.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <span data-ttu-id="06434-142">Recursos de XML, exceto salvar arquivos no formato de planilha XML, estão disponíveis somente no Microsoft Office Professional Edition 2003 e o Microsoft Office Excel 2003.</span>
            <span class="sxs-lookup">
              <span data-stu-id="06434-142">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="06434-143">Para exportar o conteúdo das células mapeadas para um arquivo de dados XML, use o <see cref="M:Microsoft.Office.Interop.Excel.XmlMap.Export(System.String,System.Object)" /> método.</span>
            <span class="sxs-lookup">
              <span data-stu-id="06434-143">To export the contents of the mapped cells to an XML data file, use the <see cref="M:Microsoft.Office.Interop.Excel.XmlMap.Export(System.String,System.Object)" /> method.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlXmlImportResult Import (string Url, object Overwrite);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.Office.Interop.Excel.XlXmlImportResult Import([in]string Url, [in]object Overwrite) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.XmlMap.Import(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Import (Url As String, Optional Overwrite As Object) As XlXmlImportResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(917)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlXmlImportResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Url" Type="System.String" />
        <Parameter Name="Overwrite" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Url">
          <span data-ttu-id="06434-144">
            <b>String</b> necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06434-144">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="06434-145">O caminho para os dados XML serem importados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06434-145">The path to the XML data to import.</span>
          </span>
          <span data-ttu-id="06434-146">O caminho pode ser especificado no formato de Uniform Resource Locator (URL) ou convenção de nomenclatura Universal (UNC).</span>
          <span class="sxs-lookup">
            <span data-stu-id="06434-146">The path can be specified in Universal Naming convention (UNC) or Uniform Resource Locator (URL) format.</span>
          </span>
          <span data-ttu-id="06434-147">O arquivo pode ser um arquivo de dados XML ou de um arquivo de Conexão de fonte (. uxdc) de dados XML do Office válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06434-147">The file can be an XML data file or a valid Office XML data Source Connection (.uxdc) file.</span>
          </span>
        </param>
        <param name="Overwrite">
          <span data-ttu-id="06434-148">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06434-148">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="06434-149">Defina como <b>True</b> para substituir os dados existentes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06434-149">Set to <b>True</b> to overwrite existing data.</span>
          </span>
          <span data-ttu-id="06434-150">Defina como <b>False</b> para acrescentar aos dados existentes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06434-150">Set to <b>False</b> to append to existing data.</span>
          </span>
          <span data-ttu-id="06434-151">O valor padrão é <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06434-151">The default value is <b>False</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="06434-152">Importa dados do arquivo de dados XML especificado para as células que foram mapeadas para especificado <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06434-152">Imports data from the specified XML data file into cells that have been mapped to the specified <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> object.</span>
          </span>
          <span data-ttu-id="06434-153">Retorna <see cref="T:Microsoft.Office.Interop.Excel.XlXmlImportResult" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06434-153">Returns <see cref="T:Microsoft.Office.Interop.Excel.XlXmlImportResult" />.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportXml">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlXmlImportResult ImportXml (string XmlData, object Overwrite);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.Office.Interop.Excel.XlXmlImportResult ImportXml([in]string XmlData, [in]object Overwrite) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.XmlMap.ImportXml(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportXml (XmlData As String, Optional Overwrite As Object) As XlXmlImportResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2344)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlXmlImportResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="XmlData" Type="System.String" />
        <Parameter Name="Overwrite" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="XmlData">
          <span data-ttu-id="06434-154">
            <b>String</b> necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06434-154">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="06434-155">A sequência de caracteres que contém os dados XML a serem importados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06434-155">The string that contains the XML data to import.</span>
          </span>
        </param>
        <param name="Overwrite">
          <span data-ttu-id="06434-156">Opcional valor <b>booleano</b> .</span>
          <span class="sxs-lookup">
            <span data-stu-id="06434-156">Optional <b>Boolean</b> value.</span>
          </span>
          <span data-ttu-id="06434-157">Especifica se é substituir o conteúdo das células que estão atualmente mapeados para o mapa XML especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06434-157">Specifies whether to overwrite the contents of cells that are currently mapped to the specified XML map.</span>
          </span>
          <span data-ttu-id="06434-158">Defina como <b>True</b> para substituir as células; Defina como <b>False</b> para acrescentar os dados ao intervalo existente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06434-158">Set to <b>True</b> to overwrite the cells; set to <b>False</b> to append the data to the existing range.</span>
          </span>
          <span data-ttu-id="06434-159">Se esse parâmetro não for especificado, o valor atual do <see cref="P:Microsoft.Office.Interop.Excel.XmlMap.AppendOnImport" /> propriedade do mapa XML determina se o conteúdo das células é sobregravado ou não.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06434-159">If this parameter is not specified, the current value of the <see cref="P:Microsoft.Office.Interop.Excel.XmlMap.AppendOnImport" /> property of the XML map determines whether the contents of cells are overwritten or not.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="06434-160">Importa dados XML de uma variável <b>String</b> em células que foram mapeadas para especificado <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06434-160">Imports XML data from a <b>String</b> variable into cells that have been mapped to the specified <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> object.</span>
          </span>
          <span data-ttu-id="06434-161">Retorna um <see cref="T:Microsoft.Office.Interop.Excel.XlXmlImportResult" /> constante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06434-161">Returns an <see cref="T:Microsoft.Office.Interop.Excel.XlXmlImportResult" /> constant.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <span data-ttu-id="06434-162">Recursos de XML, exceto salvar arquivos no formato de planilha XML, estão disponíveis somente no Microsoft Office Professional Edition 2003 e o Microsoft Office Excel 2003.</span>
            <span class="sxs-lookup">
              <span data-stu-id="06434-162">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="06434-163">Para importar o conteúdo de um arquivo de dados XML para as células mapeadas para um mapa de esquema específico, use o <see cref="M:Microsoft.Office.Interop.Excel.XmlMap.Import(System.String,System.Object)" /> método do objeto <b>XmlMap</b> .</span>
            <span class="sxs-lookup">
              <span data-stu-id="06434-163">To import the contents of an XML data file into cells mapped to a specific schema map, use the <see cref="M:Microsoft.Office.Interop.Excel.XmlMap.Import(System.String,System.Object)" /> method of the <b>XmlMap</b> object.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsExportable">
      <MemberSignature Language="C#" Value="public bool IsExportable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsExportable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.IsExportable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsExportable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsExportable { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2334)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2334)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="06434-164">Retorna <b>True</b> se o Microsoft Excel pode usar o <see cref="T:Microsoft.Office.Interop.Excel.XPath" /> objetos no mapa de esquema especificado para exportar dados XML e se todas as listas XML mapeadas para o mapa de esquema especificado podem ser exportadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06434-164">Returns <b>True</b> if Microsoft Excel can use the <see cref="T:Microsoft.Office.Interop.Excel.XPath" /> objects in the specified schema map to export XML data and if all XML lists mapped to the specified schema map can be exported.</span>
          </span>
          <span data-ttu-id="06434-165">
            <b>Boolean</b> somente leitura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06434-165">Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="06434-166">Recursos de XML, exceto salvar arquivos no formato de planilha XML, estão disponíveis somente no Microsoft Office Professional Edition 2003 e o Microsoft Office Excel 2003.</span>
            <span class="sxs-lookup">
              <span data-stu-id="06434-166">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="06434-167">Retorna ou define o nome amigável usado para identificar exclusivamente um mapeamento na pasta de trabalho.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06434-167">Returns or sets the friendly name used to uniquely identify a mapping in the workbook.</span>
          </span>
          <span data-ttu-id="06434-168">
            <b>String</b> de leitura/gravação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06434-168">Read/write <b>String</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="06434-p122">Retorna o objeto pai para o objeto especificado. Somente leitura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06434-p122">Returns the parent object for the specified object. Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreserveColumnFilter">
      <MemberSignature Language="C#" Value="public bool PreserveColumnFilter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PreserveColumnFilter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.PreserveColumnFilter" />
      <MemberSignature Language="VB.NET" Value="Public Property PreserveColumnFilter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PreserveColumnFilter { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2337)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2337)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2337)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="06434-171">Retorna ou define se a filtragem é preservada quando o mapa XML especificado for atualizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06434-171">Returns or sets whether filtering is preserved when the specified XML map is refreshed.</span>
          </span>
          <span data-ttu-id="06434-172">
            <b>Boolean</b> de leitura/gravação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06434-172">Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="06434-173">Recursos de XML, exceto salvar arquivos no formato de planilha XML, estão disponíveis somente no Microsoft Office Professional Edition 2003 e o Microsoft Office Excel 2003.</span>
            <span class="sxs-lookup">
              <span data-stu-id="06434-173">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreserveNumberFormatting">
      <MemberSignature Language="C#" Value="public bool PreserveNumberFormatting { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PreserveNumberFormatting" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.PreserveNumberFormatting" />
      <MemberSignature Language="VB.NET" Value="Public Property PreserveNumberFormatting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PreserveNumberFormatting { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2338)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2338)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2338)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="06434-174">
            <b>True</b> se a formatação de número em células mapeadas para o mapa de esquema XML especificado será preservado quando o mapa de esquema for atualizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06434-174">
              <b>True</b> if number formatting on cells mapped to the specified XML schema map will be preserved when the schema map is refreshed.</span>
          </span>
          <span data-ttu-id="06434-175">O valor padrão é <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06434-175">The default value is <b>False</b>.</span>
          </span>
          <span data-ttu-id="06434-176">Leitura/gravação <b>booleano</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06434-176">Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="06434-177">Recursos de XML, exceto salvar arquivos no formato de planilha XML, estão disponíveis somente no Microsoft Office Professional Edition 2003 e o Microsoft Office Excel 2003.</span>
            <span class="sxs-lookup">
              <span data-stu-id="06434-177">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootElementName">
      <MemberSignature Language="C#" Value="public string RootElementName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RootElementName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.RootElementName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RootElementName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RootElementName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2340)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2340)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="06434-p125">Retorna um valor <b>String</b> que representa o nome do elemento raiz do mapa de esquema XML especificado. Somente leitura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06434-p125">Returns a <b>String</b> that represents the name of the root element for the specified XML schema map. Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="06434-180">Recursos de XML, exceto salvar arquivos no formato de planilha XML, estão disponíveis somente no Microsoft Office Professional Edition 2003 e o Microsoft Office Excel 2003.</span>
            <span class="sxs-lookup">
              <span data-stu-id="06434-180">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootElementNamespace">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XmlNamespace RootElementNamespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.XmlNamespace RootElementNamespace" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.RootElementNamespace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RootElementNamespace As XmlNamespace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XmlNamespace ^ RootElementNamespace { Microsoft::Office::Interop::Excel::XmlNamespace ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2341)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2341)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XmlNamespace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="06434-181">Retorna um <see cref="T:Microsoft.Office.Interop.Excel.XmlNamespace" /> object que representa o elemento raiz para o mapa de esquema XML especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06434-181">Returns an <see cref="T:Microsoft.Office.Interop.Excel.XmlNamespace" /> object that represents the root element for the specified XML schema map.</span>
          </span>
          <span data-ttu-id="06434-182">Somente leitura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06434-182">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="06434-183">Recursos de XML, exceto salvar arquivos no formato de planilha XML, estão disponíveis somente no Microsoft Office Professional Edition 2003 e o Microsoft Office Excel 2003.</span>
            <span class="sxs-lookup">
              <span data-stu-id="06434-183">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveDataSourceDefinition">
      <MemberSignature Language="C#" Value="public bool SaveDataSourceDefinition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SaveDataSourceDefinition" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.SaveDataSourceDefinition" />
      <MemberSignature Language="VB.NET" Value="Public Property SaveDataSourceDefinition As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SaveDataSourceDefinition { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2336)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2336)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2336)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="06434-184">
            <b>True</b> se a definição do mapa de esquema XML especificado da fonte de dados é salvo com a pasta de trabalho.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06434-184">
              <b>True</b> if the data source definition of the specified XML schema map is saved with the workbook.</span>
          </span>
          <span data-ttu-id="06434-185">O valor padrão é <b>True</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06434-185">The default value is <b>True</b>.</span>
          </span>
          <span data-ttu-id="06434-186">Leitura/gravação <b>booleano</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06434-186">Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="06434-187">Recursos de XML, exceto salvar arquivos no formato de planilha XML, estão disponíveis somente no Microsoft Office Professional Edition 2003 e o Microsoft Office Excel 2003.</span>
            <span class="sxs-lookup">
              <span data-stu-id="06434-187">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Schemas">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XmlSchemas Schemas { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.XmlSchemas Schemas" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.Schemas" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Schemas As XmlSchemas" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XmlSchemas ^ Schemas { Microsoft::Office::Interop::Excel::XmlSchemas ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2342)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2342)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XmlSchemas</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="06434-188">Retorna um <see cref="T:Microsoft.Office.Interop.Excel.XmlSchemas" /> coleção que representa os esquemas que especificado <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> objeto contém.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06434-188">Returns an <see cref="T:Microsoft.Office.Interop.Excel.XmlSchemas" /> collection that represents the schemas that the specified <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> object contains.</span>
          </span>
          <span data-ttu-id="06434-189">Somente leitura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06434-189">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="06434-190">Recursos de XML, exceto salvar arquivos no formato de planilha XML, estão disponíveis somente no Microsoft Office Professional Edition 2003 e o Microsoft Office Excel 2003.</span>
            <span class="sxs-lookup">
              <span data-stu-id="06434-190">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="06434-191">O primeiro item da coleção <b>XmlSchemas</b> retornada é o esquema usado como o elemento raiz do mapa de esquema XML especificado.</span>
            <span class="sxs-lookup">
              <span data-stu-id="06434-191">The first item in the returned <b>XmlSchemas</b> collection is the schema that is used as the root element of the specified XML schema map.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowImportExportValidationErrors">
      <MemberSignature Language="C#" Value="public bool ShowImportExportValidationErrors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowImportExportValidationErrors" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.ShowImportExportValidationErrors" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowImportExportValidationErrors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowImportExportValidationErrors { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2335)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2335)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2335)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="06434-p129">Retorna ou define se será exibida uma caixa de diálogo com detalhes de erros de esquema-validação quando os dados forem importados ou exportados através do mapa de esquema XML especificado. O valor padrão é <b>False</b>. <b>Boolean</b> de leitura/gravação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06434-p129">Returns or sets whether to display a dialog box that details schema-validation errors when data is imported or exported through the specified XML schema map. The default value is <b>False</b>. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="06434-195">Recursos de XML, exceto salvar arquivos no formato de planilha XML, estão disponíveis somente no Microsoft Office Professional Edition 2003 e o Microsoft Office Excel 2003.</span>
            <span class="sxs-lookup">
              <span data-stu-id="06434-195">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkbookConnection">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.WorkbookConnection WorkbookConnection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.WorkbookConnection WorkbookConnection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.WorkbookConnection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WorkbookConnection As WorkbookConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::WorkbookConnection ^ WorkbookConnection { Microsoft::Office::Interop::Excel::WorkbookConnection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2544)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2544)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.WorkbookConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="06434-196">Retuns uma nova conexão para especificado <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06434-196">Retuns a new connection for the specified <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> object.</span>
          </span>
          <span data-ttu-id="06434-197">Somente leitura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06434-197">Read-only.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Excel.WorkbookConnection" />
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>