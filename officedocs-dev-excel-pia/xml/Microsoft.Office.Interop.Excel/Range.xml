<Type Name="Range" FullName="Microsoft.Office.Interop.Excel.Range">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b8435c17b649304d5fae3920a40103ffa541f441" /><Meta Name="ms.sourcegitcommit" Value="f58b07bd9753015d401a69461f61bc174edee843" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="01/27/2021" /><Meta Name="ms.locfileid" Value="50010700" /></Metadata><TypeSignature Language="C#" Value="public interface Range : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Range implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.Range" />
  <TypeSignature Language="VB.NET" Value="Public Interface Range&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class Range : System::Collections::IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00020846-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="65c6c-101">Representa uma célula, uma linha, uma coluna, uma seleção de células contendo um ou mais blocos contíguos de células ou um intervalo 3D.</span><span class="sxs-lookup"><span data-stu-id="65c6c-101">Represents a cell, a row, a column, a selection of cells containing one or more contiguous blocks of cells, or a 3-D range.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="_Default">
      <MemberSignature Language="C#" Value="public object this[object RowIndex, object ColumnIndex] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object _Default(object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range._Default(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property _Default(Optional RowIndex As Object, Optional ColumnIndex As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::Object ^, System::Object ^] { System::Object ^ get(System::Object ^ RowIndex, System::Object ^ ColumnIndex); void set(System::Object ^ RowIndex, System::Object ^ ColumnIndex, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="RowIndex" Type="System.Object" />
        <Parameter Name="ColumnIndex" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="RowIndex">To be added.</param>
        <param name="ColumnIndex">To be added.</param>
        <summary><span data-ttu-id="65c6c-102">Reservado para uso interno.</span><span class="sxs-lookup"><span data-stu-id="65c6c-102">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_PasteSpecial">
      <MemberSignature Language="C#" Value="public object _PasteSpecial (Microsoft.Office.Interop.Excel.XlPasteType Paste = Microsoft.Office.Interop.Excel.XlPasteType.xlPasteAll, Microsoft.Office.Interop.Excel.XlPasteSpecialOperation Operation = Microsoft.Office.Interop.Excel.XlPasteSpecialOperation.xlPasteSpecialOperationNone, object SkipBlanks, object Transpose);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object _PasteSpecial([in]valuetype Microsoft.Office.Interop.Excel.XlPasteType Paste, [in]valuetype Microsoft.Office.Interop.Excel.XlPasteSpecialOperation Operation, [in]object SkipBlanks, [in]object Transpose) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range._PasteSpecial(Microsoft.Office.Interop.Excel.XlPasteType,Microsoft.Office.Interop.Excel.XlPasteSpecialOperation,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _PasteSpecial (Optional Paste As XlPasteType = Microsoft.Office.Interop.Excel.XlPasteType.xlPasteAll, Optional Operation As XlPasteSpecialOperation = Microsoft.Office.Interop.Excel.XlPasteSpecialOperation.xlPasteSpecialOperationNone, Optional SkipBlanks As Object, Optional Transpose As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1027)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Paste" Type="Microsoft.Office.Interop.Excel.XlPasteType" />
        <Parameter Name="Operation" Type="Microsoft.Office.Interop.Excel.XlPasteSpecialOperation" />
        <Parameter Name="SkipBlanks" Type="System.Object" />
        <Parameter Name="Transpose" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Paste">To be added.</param>
        <param name="Operation">To be added.</param>
        <param name="SkipBlanks">To be added.</param>
        <param name="Transpose">To be added.</param>
        <summary><span data-ttu-id="65c6c-103">Reservado para uso interno.</span><span class="sxs-lookup"><span data-stu-id="65c6c-103">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_PrintOut">
      <MemberSignature Language="C#" Value="public object _PrintOut (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object _PrintOut([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range._PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _PrintOut (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(905)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">To be added.</param>
        <param name="To">To be added.</param>
        <param name="Copies">To be added.</param>
        <param name="Preview">To be added.</param>
        <param name="ActivePrinter">To be added.</param>
        <param name="PrintToFile">To be added.</param>
        <param name="Collate">To be added.</param>
        <summary><span data-ttu-id="65c6c-104">Reservado para uso interno.</span><span class="sxs-lookup"><span data-stu-id="65c6c-104">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="public object Activate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Activate() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Activate" />
      <MemberSignature Language="VB.NET" Value="Public Function Activate () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Activate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(304)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="65c6c-105">Ativa uma única célula, que precisa estar dentro da seleção atual.</span><span class="sxs-lookup"><span data-stu-id="65c6c-105">Activates a single cell, which must be inside the current selection.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="65c6c-106">Para selecionar um intervalo de células, use o <see cref="M:Microsoft.Office.Interop.Excel.Range.Select" /> método.</span><span class="sxs-lookup"><span data-stu-id="65c6c-106">To select a range of cells, use the <see cref="M:Microsoft.Office.Interop.Excel.Range.Select" /> method.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AddComment">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Comment AddComment (object Text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Comment AddComment([in]object Text) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.AddComment(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddComment (Optional Text As Object) As Comment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1389)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Comment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Text" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Text"><span data-ttu-id="65c6c-107">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-107">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-108">O texto do comentário.</span><span class="sxs-lookup"><span data-stu-id="65c6c-108">The comment text.</span></span></param>
        <summary><span data-ttu-id="65c6c-109">Adiciona um comentário ao intervalo.</span><span class="sxs-lookup"><span data-stu-id="65c6c-109">Adds a comment to the range.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddIndent">
      <MemberSignature Language="C#" Value="public object AddIndent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object AddIndent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.AddIndent" />
      <MemberSignature Language="VB.NET" Value="Public Property AddIndent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ AddIndent { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1063)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1063)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1063)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65c6c-110">Determina se o texto será automaticamente recuado quando o alinhamento do texto em uma célula for definido como distribuição igual horizontal ou vertical.</span><span class="sxs-lookup"><span data-stu-id="65c6c-110">Determines if text is automatically indented when the text alignment in a cell is set to equal distribution either horizontally or vertically.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="65c6c-111">Essa propriedade <b>retornará True</b> se o texto for recuado automaticamente quando o alinhamento do texto em uma célula for definido como distribuição igual horizontal ou verticalmente.</span><span class="sxs-lookup"><span data-stu-id="65c6c-111">This property returns <b>True</b> if text is automatically indented when the text alignment in a cell is set to equal distribution either horizontally or vertically.</span></span></para>
          <para><span data-ttu-id="65c6c-112">Para definir o alinhamento do texto como distribuição igual, você pode definir a propriedade como xlVAlignDistributed quando o valor da propriedade for xlVertical e você pode definir a propriedade como <see cref="P:Microsoft.Office.Interop.Excel.Range.VerticalAlignment" /> <b></b> <see cref="P:Microsoft.Office.Interop.Excel.Range.Orientation" /> <b></b> <see cref="P:Microsoft.Office.Interop.Excel.Range.HorizontalAlignment" /> <b>xlHAlignDistributed</b> quando o valor da propriedade Orientation for <b>xlHorizontal</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-112">To set text alignment to equal distribution, you can set the <see cref="P:Microsoft.Office.Interop.Excel.Range.VerticalAlignment" /> property to <b>xlVAlignDistributed</b> when the value of the <see cref="P:Microsoft.Office.Interop.Excel.Range.Orientation" /> property is <b>xlVertical</b>, and you can set the <see cref="P:Microsoft.Office.Interop.Excel.Range.HorizontalAlignment" /> property to <b>xlHAlignDistributed</b> when the value of the Orientation property is <b>xlHorizontal</b>.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Address">
      <MemberSignature Language="C#" Value="public string Address[object RowAbsolute, object ColumnAbsolute, Microsoft.Office.Interop.Excel.XlReferenceStyle ReferenceStyle = Microsoft.Office.Interop.Excel.XlReferenceStyle.xlA1, object External, object RelativeTo] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Address(object, object, valuetype Microsoft.Office.Interop.Excel.XlReferenceStyle, object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Address(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlReferenceStyle,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Address(Optional RowAbsolute As Object, Optional ColumnAbsolute As Object, Optional ReferenceStyle As XlReferenceStyle = Microsoft.Office.Interop.Excel.XlReferenceStyle.xlA1, Optional External As Object, Optional RelativeTo As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Address[System::Object ^, System::Object ^, Microsoft::Office::Interop::Excel::XlReferenceStyle, System::Object ^, System::Object ^] { System::String ^ get(System::Object ^ RowAbsolute, System::Object ^ ColumnAbsolute, Microsoft::Office::Interop::Excel::XlReferenceStyle ReferenceStyle, System::Object ^ External, System::Object ^ RelativeTo); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(236)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(236)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="RowAbsolute" Type="System.Object" />
        <Parameter Name="ColumnAbsolute" Type="System.Object" />
        <Parameter Name="ReferenceStyle" Type="Microsoft.Office.Interop.Excel.XlReferenceStyle" />
        <Parameter Name="External" Type="System.Object" />
        <Parameter Name="RelativeTo" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="RowAbsolute"><span data-ttu-id="65c6c-113">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-113">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-114"><b>True</b> para retornar a parte da linha da referência como uma referência absoluta.</span><span class="sxs-lookup"><span data-stu-id="65c6c-114"><b>True</b> to return the row part of the reference as an absolute reference.</span></span> <span data-ttu-id="65c6c-115">O valor padrão é <b>True</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-115">The default value is <b>True</b>.</span></span></param>
        <param name="ColumnAbsolute"><span data-ttu-id="65c6c-116">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-116">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-117"><b>True</b> para retornar a parte da coluna da referência como uma referência absoluta.</span><span class="sxs-lookup"><span data-stu-id="65c6c-117"><b>True</b> to return the column part of the reference as an absolute reference.</span></span> <span data-ttu-id="65c6c-118">O valor padrão é <b>True</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-118">The default value is <b>True</b>.</span></span></param>
        <param name="ReferenceStyle"><span data-ttu-id="65c6c-119">Opcional <see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" /> .</span><span class="sxs-lookup"><span data-stu-id="65c6c-119">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" />.</span></span></param>
        <param name="External"><span data-ttu-id="65c6c-120">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-120">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-121"><b>True</b> para retornar uma referência externa; <b>False</b> para retornar uma referência local.</span><span class="sxs-lookup"><span data-stu-id="65c6c-121"><b>True</b> to return an external reference; <b>False</b> to return a local reference.</span></span> <span data-ttu-id="65c6c-122">O valor padrão é <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-122">The default value is <b>False</b>.</span></span></param>
        <param name="RelativeTo"><span data-ttu-id="65c6c-123">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-123">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-124">If <paramref name="RowAbsolute" /> and are <paramref name="ColumnAbsolute" /> <b>False</b>, and <paramref name="ReferenceStyle" /> is <b>xlR1C1</b>, you must include a starting point for the relative reference.</span><span class="sxs-lookup"><span data-stu-id="65c6c-124">If <paramref name="RowAbsolute" /> and <paramref name="ColumnAbsolute" /> are <b>False</b>, and <paramref name="ReferenceStyle" /> is <b>xlR1C1</b>, you must include a starting point for the relative reference.</span></span> <span data-ttu-id="65c6c-125">Esse argumento é um <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objeto que define o ponto inicial.</span><span class="sxs-lookup"><span data-stu-id="65c6c-125">This argument is a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that defines the starting point.</span></span></param>
        <summary><span data-ttu-id="65c6c-126">Retorna a referência de intervalo.</span><span class="sxs-lookup"><span data-stu-id="65c6c-126">Returns the range reference.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="65c6c-127">Se a referência contiver mais de uma célula <paramref name="RowAbsolute" /> e se aplicar a todas as linhas e <paramref name="ColumnAbsolute" /> colunas.</span><span class="sxs-lookup"><span data-stu-id="65c6c-127">If the reference contains more than one cell, <paramref name="RowAbsolute" /> and <paramref name="ColumnAbsolute" /> apply to all rows and columns.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AddressLocal">
      <MemberSignature Language="C#" Value="public string AddressLocal[object RowAbsolute, object ColumnAbsolute, Microsoft.Office.Interop.Excel.XlReferenceStyle ReferenceStyle = Microsoft.Office.Interop.Excel.XlReferenceStyle.xlA1, object External, object RelativeTo] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AddressLocal(object, object, valuetype Microsoft.Office.Interop.Excel.XlReferenceStyle, object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.AddressLocal(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlReferenceStyle,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AddressLocal(Optional RowAbsolute As Object, Optional ColumnAbsolute As Object, Optional ReferenceStyle As XlReferenceStyle = Microsoft.Office.Interop.Excel.XlReferenceStyle.xlA1, Optional External As Object, Optional RelativeTo As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AddressLocal[System::Object ^, System::Object ^, Microsoft::Office::Interop::Excel::XlReferenceStyle, System::Object ^, System::Object ^] { System::String ^ get(System::Object ^ RowAbsolute, System::Object ^ ColumnAbsolute, Microsoft::Office::Interop::Excel::XlReferenceStyle ReferenceStyle, System::Object ^ External, System::Object ^ RelativeTo); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(437)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(437)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="RowAbsolute" Type="System.Object" />
        <Parameter Name="ColumnAbsolute" Type="System.Object" />
        <Parameter Name="ReferenceStyle" Type="Microsoft.Office.Interop.Excel.XlReferenceStyle" />
        <Parameter Name="External" Type="System.Object" />
        <Parameter Name="RelativeTo" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="RowAbsolute"><span data-ttu-id="65c6c-128">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-128">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-129"><b>True</b> para retornar a parte da linha da referência como uma referência absoluta.</span><span class="sxs-lookup"><span data-stu-id="65c6c-129"><b>True</b> to return the row part of the reference as an absolute reference.</span></span> <span data-ttu-id="65c6c-130">O valor padrão é <b>True</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-130">The default value is <b>True</b>.</span></span></param>
        <param name="ColumnAbsolute"><span data-ttu-id="65c6c-131">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-131">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-132"><b>True</b> para retornar a parte da coluna da referência como uma referência absoluta.</span><span class="sxs-lookup"><span data-stu-id="65c6c-132"><b>True</b> to return the column part of the reference as an absolute reference.</span></span> <span data-ttu-id="65c6c-133">O valor padrão é <b>True</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-133">The default value is <b>True</b>.</span></span></param>
        <param name="ReferenceStyle"><span data-ttu-id="65c6c-134">Opcional <see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" /> .</span><span class="sxs-lookup"><span data-stu-id="65c6c-134">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" />.</span></span></param>
        <param name="External"><span data-ttu-id="65c6c-135">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-135">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-136"><b>True</b> para retornar uma referência externa.</span><span class="sxs-lookup"><span data-stu-id="65c6c-136"><b>True</b> to return an external reference.</span></span> <span data-ttu-id="65c6c-137"><b>False</b> para retornar uma referência local.</span><span class="sxs-lookup"><span data-stu-id="65c6c-137"><b>False</b> to return a local reference.</span></span> <span data-ttu-id="65c6c-138">O valor padrão é <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-138">The default value is <b>False</b>.</span></span></param>
        <param name="RelativeTo"><span data-ttu-id="65c6c-139">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-139">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-140">Se e ambos estão definidos como False e está definido como <paramref name="RowAbsolute" /> <paramref name="ColumnAbsolute" /> <b></b> <paramref name="ReferenceStyle" /> <b>xlR1C1</b>, você deve incluir um ponto de partida para a referência relativa.</span><span class="sxs-lookup"><span data-stu-id="65c6c-140">If <paramref name="RowAbsolute" /> and <paramref name="ColumnAbsolute" /> are both set to <b>False</b> and <paramref name="ReferenceStyle" /> is set to <b>xlR1C1</b>, you must include a starting point for the relative reference.</span></span> <span data-ttu-id="65c6c-141">Esse argumento é <see cref="T:Microsoft.Office.Interop.Excel.Range" /> um objeto que define o ponto de partida para a referência.</span><span class="sxs-lookup"><span data-stu-id="65c6c-141">This argument is a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that defines the starting point for the reference.</span></span></param>
        <summary><span data-ttu-id="65c6c-142">Retorna a referência ao intervalo para o intervalo especificado no idioma do usuário.</span><span class="sxs-lookup"><span data-stu-id="65c6c-142">Returns the range reference for the specified range in the language of the user.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="65c6c-143">Se a referência contiver mais de uma célula e se aplicar a todas as <paramref name="RowAbsolute" /> linhas e a todas as <paramref name="ColumnAbsolute" /> colunas, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="65c6c-143">If the reference contains more than one cell, <paramref name="RowAbsolute" /> and <paramref name="ColumnAbsolute" /> apply to all rows and all columns, respectively.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AdvancedFilter">
      <MemberSignature Language="C#" Value="public object AdvancedFilter (Microsoft.Office.Interop.Excel.XlFilterAction Action, object CriteriaRange, object CopyToRange, object Unique);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AdvancedFilter([in]valuetype Microsoft.Office.Interop.Excel.XlFilterAction Action, [in]object CriteriaRange, [in]object CopyToRange, [in]object Unique) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.AdvancedFilter(Microsoft.Office.Interop.Excel.XlFilterAction,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AdvancedFilter (Action As XlFilterAction, Optional CriteriaRange As Object, Optional CopyToRange As Object, Optional Unique As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(876)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Action" Type="Microsoft.Office.Interop.Excel.XlFilterAction" />
        <Parameter Name="CriteriaRange" Type="System.Object" />
        <Parameter Name="CopyToRange" Type="System.Object" />
        <Parameter Name="Unique" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Action"><span data-ttu-id="65c6c-144">Obrigatório. <see cref="T:Microsoft.Office.Interop.Excel.XlFilterAction" /></span><span class="sxs-lookup"><span data-stu-id="65c6c-144">Required <see cref="T:Microsoft.Office.Interop.Excel.XlFilterAction" />.</span></span> <span data-ttu-id="65c6c-145">Pode ser uma das seguintes constantes <b>XlFilterAction:</b> <b>xlFilterCopy</b><b>xlFilterInPlace</b></span><span class="sxs-lookup"><span data-stu-id="65c6c-145">Can be one of the following <b>XlFilterAction</b> constants:<b>xlFilterCopy</b><b>xlFilterInPlace</b></span></span></param>
        <param name="CriteriaRange"><span data-ttu-id="65c6c-146">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-146">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-147">O intervalo dos critérios.</span><span class="sxs-lookup"><span data-stu-id="65c6c-147">The criteria range.</span></span> <span data-ttu-id="65c6c-148">Se esse argumento for omitido, não haverá critérios.</span><span class="sxs-lookup"><span data-stu-id="65c6c-148">If this argument is omitted, there are no criteria.</span></span></param>
        <param name="CopyToRange"><span data-ttu-id="65c6c-149">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-149">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-150">O intervalo de destino para as linhas copiadas se Action for <paramref name="xlFilterCopy" /> .</span><span class="sxs-lookup"><span data-stu-id="65c6c-150">The destination range for the copied rows if Action is <paramref name="xlFilterCopy" />.</span></span> <span data-ttu-id="65c6c-151">Caso contrário, esse argumento será ignorado.</span><span class="sxs-lookup"><span data-stu-id="65c6c-151">Otherwise, this argument is ignored.</span></span></param>
        <param name="Unique"><span data-ttu-id="65c6c-152">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-152">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-153"><b>True</b> para filtrar somente registros exclusivos; <b>False</b> para filtrar todos os registros que atendem aos critérios.</span><span class="sxs-lookup"><span data-stu-id="65c6c-153"><b>True</b> to filter unique records only; <b>False</b> to filter all records that meet the criteria.</span></span> <span data-ttu-id="65c6c-154">O valor padrão é <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-154">The default value is <b>False</b>.</span></span></param>
        <summary><span data-ttu-id="65c6c-155">Filtra ou copia os dados de uma lista com base em um intervalo de critérios.</span><span class="sxs-lookup"><span data-stu-id="65c6c-155">Filters or copies data from a list based on a criteria range.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="65c6c-156">Se a seleção inicial estiver em uma única célula, a região atual dessa célula será usada.</span><span class="sxs-lookup"><span data-stu-id="65c6c-156">If the initial selection is a single cell, that cell's current region is used.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AllocateChanges">
      <MemberSignature Language="C#" Value="public void AllocateChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AllocateChanges() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.AllocateChanges" />
      <MemberSignature Language="VB.NET" Value="Public Sub AllocateChanges ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AllocateChanges();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2855)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="65c6c-157">Executa uma operação de write-back para todas as células editadas em um intervalo com base em uma fonte de dados OLAP.</span><span class="sxs-lookup"><span data-stu-id="65c6c-157">Performs a writeback operation for all edited cells in a range based on an OLAP data source.</span></span></summary>
        <remarks><para><span data-ttu-id="65c6c-158">O método executará uma instrução UPDATE CUBE para todas as alterações feitas no intervalo desde que a última operação de aplicação de alterações <see cref="M:Microsoft.Office.Interop.Excel.Range.AllocateChanges" /> foi comprometida.</span><span class="sxs-lookup"><span data-stu-id="65c6c-158">The <see cref="M:Microsoft.Office.Interop.Excel.Range.AllocateChanges" /> method will execute an UPDATE CUBE statement for all changes made in the range since the last apply changes operation was committed.</span></span> <span data-ttu-id="65c6c-159">Esse método gera um erro de tempo de execução se é executado em um intervalo com base em uma fonte de dados não OLAP.</span><span class="sxs-lookup"><span data-stu-id="65c6c-159">This method generates a run-time error if it is executed on a range based on a non-OLAP data source.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowEdit">
      <MemberSignature Language="C#" Value="public bool AllowEdit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowEdit" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.AllowEdit" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowEdit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowEdit { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2020)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2020)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65c6c-160">Determina se o intervalo pode ser editado em uma planilha protegida.</span><span class="sxs-lookup"><span data-stu-id="65c6c-160">Determines if the range can be edited on a protected worksheet.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="65c6c-161">Essa propriedade <b>retornará True</b> se o intervalo puder ser editado em uma planilha protegida.</span><span class="sxs-lookup"><span data-stu-id="65c6c-161">This property returns <b>True</b> if the range can be edited on a protected worksheet.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65c6c-162">Retorna um <see cref="T:Microsoft.Office.Interop.Excel.Application" /> objeto que representa o aplicativo Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="65c6c-162">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyNames">
      <MemberSignature Language="C#" Value="public object ApplyNames (object Names, object IgnoreRelativeAbsolute, object UseRowColumnNames, object OmitColumn, object OmitRow, Microsoft.Office.Interop.Excel.XlApplyNamesOrder Order = Microsoft.Office.Interop.Excel.XlApplyNamesOrder.xlRowThenColumn, object AppendLast);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ApplyNames([in]object Names, [in]object IgnoreRelativeAbsolute, [in]object UseRowColumnNames, [in]object OmitColumn, [in]object OmitRow, [in]valuetype Microsoft.Office.Interop.Excel.XlApplyNamesOrder Order, [in]object AppendLast) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ApplyNames(System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlApplyNamesOrder,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ApplyNames (Optional Names As Object, Optional IgnoreRelativeAbsolute As Object, Optional UseRowColumnNames As Object, Optional OmitColumn As Object, Optional OmitRow As Object, Optional Order As XlApplyNamesOrder = Microsoft.Office.Interop.Excel.XlApplyNamesOrder.xlRowThenColumn, Optional AppendLast As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(441)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Names" Type="System.Object" />
        <Parameter Name="IgnoreRelativeAbsolute" Type="System.Object" />
        <Parameter Name="UseRowColumnNames" Type="System.Object" />
        <Parameter Name="OmitColumn" Type="System.Object" />
        <Parameter Name="OmitRow" Type="System.Object" />
        <Parameter Name="Order" Type="Microsoft.Office.Interop.Excel.XlApplyNamesOrder" />
        <Parameter Name="AppendLast" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Names"><span data-ttu-id="65c6c-163">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-163">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-164">Uma matriz dos nomes a serem aplicados.</span><span class="sxs-lookup"><span data-stu-id="65c6c-164">An array of the names to be applied.</span></span> <span data-ttu-id="65c6c-165">Se esse argumento for omitido, todos os nomes na planilha serão aplicados ao intervalo.</span><span class="sxs-lookup"><span data-stu-id="65c6c-165">If this argument is omitted, all names on the sheet are applied to the range.</span></span></param>
        <param name="IgnoreRelativeAbsolute"><span data-ttu-id="65c6c-166">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-166">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-167"><b>True</b> para substituir referências por nomes, independentemente dos tipos de referência dos nomes ou referências; <b>False</b> para substituir referências absolutas apenas por nomes absolutos, referências relativas apenas por nomes relativos e referências mistas apenas por nomes mistos.</span><span class="sxs-lookup"><span data-stu-id="65c6c-167"><b>True</b> to replace references with names, regardless of the reference types of either the names or references; <b>False</b> to replace absolute references only with absolute names, relative references only with relative names, and mixed references only with mixed names.</span></span> <span data-ttu-id="65c6c-168">O valor padrão é <b>True</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-168">The default value is <b>True</b>.</span></span></param>
        <param name="UseRowColumnNames"><span data-ttu-id="65c6c-169">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-169">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-170"><b>True</b> para usar os nomes de intervalos de linhas e colunas que contêm o intervalo especificado se não for possível encontrar nomes para o intervalo; <b>False</b> para ignorar os <paramref name="OmitColumn" /> <paramref name="OmitRow" /> argumentos e os argumentos.</span><span class="sxs-lookup"><span data-stu-id="65c6c-170"><b>True</b> to use the names of row and column ranges that contain the specified range if names for the range cannot be found; <b>False</b> to ignore the <paramref name="OmitColumn" /> and <paramref name="OmitRow" /> arguments.</span></span> <span data-ttu-id="65c6c-171">O valor padrão é <b>True</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-171">The default value is <b>True</b>.</span></span></param>
        <param name="OmitColumn"><span data-ttu-id="65c6c-172">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-172">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-173"><b>True</b> para substituir a referência inteira pelo nome orientado por linha.</span><span class="sxs-lookup"><span data-stu-id="65c6c-173"><b>True</b> to replace the entire reference with the row-oriented name.</span></span> <span data-ttu-id="65c6c-174">O nome orientado por coluna só poderá ser omitido se a célula referida estiver na mesma coluna que a fórmula e dentro de um intervalo nomeado orientado por linha.</span><span class="sxs-lookup"><span data-stu-id="65c6c-174">The column-oriented name can be omitted only if the referenced cell is in the same column as the formula and is within a row-oriented named range.</span></span> <span data-ttu-id="65c6c-175">O valor padrão é <b>True</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-175">The default value is <b>True</b>.</span></span></param>
        <param name="OmitRow"><span data-ttu-id="65c6c-176">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-176">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-177"><b>True</b> para substituir a referência inteira pelo nome orientado por coluna.</span><span class="sxs-lookup"><span data-stu-id="65c6c-177"><b>True</b> to replace the entire reference with the column-oriented name.</span></span> <span data-ttu-id="65c6c-178">O nome orientado por linha só poderá ser omitido se a célula referida estiver na mesma linha que a fórmula e dentro de um intervalo nomeado orientado por coluna.</span><span class="sxs-lookup"><span data-stu-id="65c6c-178">The row-oriented name can be omitted only if the referenced cell is in the same row as the formula and is within a column-oriented named range.</span></span> <span data-ttu-id="65c6c-179">O valor padrão é <b>True</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-179">The default value is <b>True</b>.</span></span></param>
        <param name="Order"><span data-ttu-id="65c6c-180">Opcional <see cref="T:Microsoft.Office.Interop.Excel.XlApplyNamesOrder" /> .</span><span class="sxs-lookup"><span data-stu-id="65c6c-180">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlApplyNamesOrder" />.</span></span> <span data-ttu-id="65c6c-181">Determina que nome de intervalo será listado primeiro quando uma referência de célula for substituída por um nome de intervalo orientado por linha e por coluna.</span><span class="sxs-lookup"><span data-stu-id="65c6c-181">Determines which range name is listed first when a cell reference is replaced by a row-oriented and column-oriented range name.</span></span> <span data-ttu-id="65c6c-182">Pode ser uma destas <b>constantes XlApplyNamesOrder:</b> <b>xlColumnThenRow</b><b>xlRowThenColumn </b><paramref name="default" /></span><span class="sxs-lookup"><span data-stu-id="65c6c-182">Can be one of these <b>XlApplyNamesOrder</b> constants:<b>xlColumnThenRow</b><b>xlRowThenColumn </b><paramref name="default" /></span></span></param>
        <param name="AppendLast"><span data-ttu-id="65c6c-183">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-183">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-184"><b>True</b> para substituir as definições dos nomes e <paramref name="Names" /> também substituir as definições dos sobrenomes que foram definidos; <b>False</b> para substituir apenas as definições dos <paramref name="Names" /> nomes.</span><span class="sxs-lookup"><span data-stu-id="65c6c-184"><b>True</b> to replace the definitions of the names in <paramref name="Names" /> and also replace the definitions of the last names that were defined; <b>False</b> to replace the definitions of the names in <paramref name="Names" /> only.</span></span> <span data-ttu-id="65c6c-185">O valor padrão é <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-185">The default value is <b>False</b>.</span></span></param>
        <summary><span data-ttu-id="65c6c-186">Aplica nomes às células do intervalo especificado.</span><span class="sxs-lookup"><span data-stu-id="65c6c-186">Applies names to the cells in the specified range.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="65c6c-187">Você pode usar <b>a função Array</b> para criar a lista de nomes para o <paramref name="Names" /> argumento.</span><span class="sxs-lookup"><span data-stu-id="65c6c-187">You can use the <b>Array</b> function to create the list of names for the <paramref name="Names" /> argument.</span></span></para>
          <para><span data-ttu-id="65c6c-188">Se você quiser aplicar nomes à planilha inteira, use Cells.ApplyNames.</span><span class="sxs-lookup"><span data-stu-id="65c6c-188">If you want to apply names to the entire sheet, use Cells.ApplyNames.</span></span></para>
          <para><span data-ttu-id="65c6c-189">Você não pode "desaplicação" de nomes; para excluir nomes, use o <see cref="M:Microsoft.Office.Interop.Excel.Name.Delete" /> método.</span><span class="sxs-lookup"><span data-stu-id="65c6c-189">You cannot "unapply" names; to delete names, use the <see cref="M:Microsoft.Office.Interop.Excel.Name.Delete" /> method.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyOutlineStyles">
      <MemberSignature Language="C#" Value="public object ApplyOutlineStyles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ApplyOutlineStyles() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ApplyOutlineStyles" />
      <MemberSignature Language="VB.NET" Value="Public Function ApplyOutlineStyles () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ApplyOutlineStyles();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(448)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="65c6c-190">Aplica estilos de tópicos ao intervalo especificado.</span><span class="sxs-lookup"><span data-stu-id="65c6c-190">Applies outlining styles to the specified range.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Areas">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Areas Areas { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Areas Areas" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Areas" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Areas As Areas" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Areas ^ Areas { Microsoft::Office::Interop::Excel::Areas ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(568)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(568)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Areas</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65c6c-191">Retorna uma <see cref="T:Microsoft.Office.Interop.Excel.Areas" /> coleção que representa todos os intervalos em uma seleção de várias áreas.</span><span class="sxs-lookup"><span data-stu-id="65c6c-191">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Areas" /> collection that represents all the ranges in a multiple-area selection.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="65c6c-192">Para uma única seleção, a propriedade <b>Areas</b> retorna uma coleção que contém um objeto — o próprio <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objeto original.</span><span class="sxs-lookup"><span data-stu-id="65c6c-192">For a single selection, the <b>Areas</b> property returns a collection that contains one object — the original <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object itself.</span></span> <span data-ttu-id="65c6c-193">Para uma seleção de várias áreas, a propriedade <b>Areas</b> retorna uma coleção que contém um objeto para cada área selecionada.</span><span class="sxs-lookup"><span data-stu-id="65c6c-193">For a multiple-area selection, the <b>Areas</b> property returns a collection that contains one object for each selected area.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoComplete">
      <MemberSignature Language="C#" Value="public string AutoComplete (string String);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string AutoComplete([in]string String) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.AutoComplete(System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ AutoComplete(System::String ^ String);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1185)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="String" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="String"><span data-ttu-id="65c6c-194"><b>String</b> necessário.</span><span class="sxs-lookup"><span data-stu-id="65c6c-194">Required <b>String</b>.</span></span> <span data-ttu-id="65c6c-195">A sequência de caracteres a ser completada.</span><span class="sxs-lookup"><span data-stu-id="65c6c-195">The string to complete.</span></span></param>
        <summary><span data-ttu-id="65c6c-196">Retorna uma AutoConclusão coincidente da lista.</span><span class="sxs-lookup"><span data-stu-id="65c6c-196">Returns an AutoComplete match from the list.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="65c6c-197">Quando não há AutoConclusão coincidente ou mais de uma entrada da lista coincide com a sequência de caracteres a ser completada, este método retorna uma sequência de caracteres vazia.</span><span class="sxs-lookup"><span data-stu-id="65c6c-197">If there’s no AutoComplete match or if more than one entry in the list matches the string to complete, this method returns an empty string.</span></span></para>
          <para><span data-ttu-id="65c6c-198">Este método funciona mesmo quando o recurso AutoConclusão está desativado.</span><span class="sxs-lookup"><span data-stu-id="65c6c-198">This method works even if the AutoComplete feature is disabled.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoFill">
      <MemberSignature Language="C#" Value="public object AutoFill (Microsoft.Office.Interop.Excel.Range Destination, Microsoft.Office.Interop.Excel.XlAutoFillType Type = Microsoft.Office.Interop.Excel.XlAutoFillType.xlFillDefault);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AutoFill([in]class Microsoft.Office.Interop.Excel.Range Destination, [in]valuetype Microsoft.Office.Interop.Excel.XlAutoFillType Type) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.AutoFill(Microsoft.Office.Interop.Excel.Range,Microsoft.Office.Interop.Excel.XlAutoFillType)" />
      <MemberSignature Language="VB.NET" Value="Public Function AutoFill (Destination As Range, Optional Type As XlAutoFillType = Microsoft.Office.Interop.Excel.XlAutoFillType.xlFillDefault) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(449)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Destination" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlAutoFillType" />
      </Parameters>
      <Docs>
        <param name="Destination"><span data-ttu-id="65c6c-199">Objeto <see cref="T:Microsoft.Office.Interop.Excel.Range" /> obrigatório.</span><span class="sxs-lookup"><span data-stu-id="65c6c-199">Required <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object.</span></span> <span data-ttu-id="65c6c-200">As células a serem preenchidas.</span><span class="sxs-lookup"><span data-stu-id="65c6c-200">The cells to be filled.</span></span> <span data-ttu-id="65c6c-201">O destino deve incluir o intervalo de origem.</span><span class="sxs-lookup"><span data-stu-id="65c6c-201">The destination must include the source range.</span></span></param>
        <param name="Type"><span data-ttu-id="65c6c-202">Opcional <see cref="T:Microsoft.Office.Interop.Excel.XlAutoFillType" /> .</span><span class="sxs-lookup"><span data-stu-id="65c6c-202">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlAutoFillType" />.</span></span> <span data-ttu-id="65c6c-203">Especifica o tipo de preenchimento.</span><span class="sxs-lookup"><span data-stu-id="65c6c-203">Specifies the fill type.</span></span> <span data-ttu-id="65c6c-204">Pode ser uma destas constantes <b>XlAutoFillType:</b> <b>xlFillDays</b><b>xlFillFormats</b><b>xlFillSeries</b><b>xlFillWeekdays</b><b>xlGrowthTrend</b><b>xlFillCopy</b><b>xlFillDefault</b> <paramref name="default" /> <b>xlFillMonths</b><b>xlFillValues</b><b>xlFillYears</b><b>xlLinearTrend</b>Se esse argumento for <b>xlFillDefault</b> ou omitido, o Microsoft Excel selecionará o tipo de preenchimento mais apropriado, com base no intervalo de origem.</span><span class="sxs-lookup"><span data-stu-id="65c6c-204">Can be one of these <b>XlAutoFillType</b> constants:<b>xlFillDays</b><b>xlFillFormats</b><b>xlFillSeries</b><b>xlFillWeekdays</b><b>xlGrowthTrend</b><b>xlFillCopy</b><b>xlFillDefault</b><paramref name="default" /><b>xlFillMonths</b><b>xlFillValues</b><b>xlFillYears</b><b>xlLinearTrend</b>If this argument is <b>xlFillDefault</b> or omitted, Microsoft Excel selects the most appropriate fill type, based on the source range.</span></span></param>
        <summary><span data-ttu-id="65c6c-205">Executa um preenchimento automático nas células no intervalo especificado.</span><span class="sxs-lookup"><span data-stu-id="65c6c-205">Performs an autofill on the cells in the specified range.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoFilter">
      <MemberSignature Language="C#" Value="public object AutoFilter (object Field, object Criteria1, Microsoft.Office.Interop.Excel.XlAutoFilterOperator Operator = Microsoft.Office.Interop.Excel.XlAutoFilterOperator.xlAnd, object Criteria2, object VisibleDropDown);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AutoFilter([in]object Field, [in]object Criteria1, [in]valuetype Microsoft.Office.Interop.Excel.XlAutoFilterOperator Operator, [in]object Criteria2, [in]object VisibleDropDown) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.AutoFilter(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlAutoFilterOperator,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AutoFilter (Optional Field As Object, Optional Criteria1 As Object, Optional Operator As XlAutoFilterOperator = Microsoft.Office.Interop.Excel.XlAutoFilterOperator.xlAnd, Optional Criteria2 As Object, Optional VisibleDropDown As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(793)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Field" Type="System.Object" />
        <Parameter Name="Criteria1" Type="System.Object" />
        <Parameter Name="Operator" Type="Microsoft.Office.Interop.Excel.XlAutoFilterOperator" />
        <Parameter Name="Criteria2" Type="System.Object" />
        <Parameter Name="VisibleDropDown" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Field"><span data-ttu-id="65c6c-206">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-206">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-207">O deslocamento de um inteiro do campo no qual você deseja basear o filtro (da esquerda da lista; o campo mais à esquerda é o campo um).</span><span class="sxs-lookup"><span data-stu-id="65c6c-207">The integer offset of the field on which you want to base the filter (from the left of the list; the leftmost field is field one).</span></span></param>
        <param name="Criteria1"><span data-ttu-id="65c6c-208">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-208">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-209">Os critérios (uma cadeia de caracteres; por exemplo, "101").</span><span class="sxs-lookup"><span data-stu-id="65c6c-209">The criteria (a string; for example, "101").</span></span> <span data-ttu-id="65c6c-210">Use "=" para encontrar campos em branco ou " &lt; &gt; para encontrar campos não vazios.</span><span class="sxs-lookup"><span data-stu-id="65c6c-210">Use "=" to find blank fields, or use "&lt;&gt;" to find nonblank fields.</span></span> <span data-ttu-id="65c6c-211">Se esse argumento for omitido, o critério será <b>Tudo.</b></span><span class="sxs-lookup"><span data-stu-id="65c6c-211">If this argument is omitted, the criteria is <b>All</b>.</span></span> <span data-ttu-id="65c6c-212">Se <paramref name="Operator" /> for <b>xlTop10Items</b>, especifica o <paramref name="Criteria1" /> número de itens (por exemplo, "10").</span><span class="sxs-lookup"><span data-stu-id="65c6c-212">If <paramref name="Operator" /> is <b>xlTop10Items</b>, <paramref name="Criteria1" /> specifies the number of items (for example, "10").</span></span></param>
        <param name="Operator"><span data-ttu-id="65c6c-213">Opcional <see cref="T:Microsoft.Office.Interop.Excel.XlAutoFilterOperator" /> .</span><span class="sxs-lookup"><span data-stu-id="65c6c-213">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlAutoFilterOperator" />.</span></span> <span data-ttu-id="65c6c-214">Pode ser uma das seguintes constantes <b>XlAutoFilterOperator:</b> <b>xlAnd</b> <paramref name="default" /> <b>xlBottom10Items</b><b>xlBottom10Percent</b><b>xlOr</b><b>xlTop10Items</b><b>xlTop10Percent</b>Use <b>xlAnd</b> e <b>xlOr</b> com e para construir critérios <paramref name="Criteria1" /> <paramref name="Criteria2" /> compostos.</span><span class="sxs-lookup"><span data-stu-id="65c6c-214">Can be one of the following <b>XlAutoFilterOperator</b> constants:<b>xlAnd</b><paramref name="default" /><b>xlBottom10Items</b><b>xlBottom10Percent</b><b>xlOr</b><b>xlTop10Items</b><b>xlTop10Percent</b>Use <b>xlAnd</b> and <b>xlOr</b> with <paramref name="Criteria1" /> and <paramref name="Criteria2" /> to construct compound criteria.</span></span></param>
        <param name="Criteria2"><span data-ttu-id="65c6c-215">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-215">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-216">O segundo critério (uma cadeia de caracteres).</span><span class="sxs-lookup"><span data-stu-id="65c6c-216">The second criteria (a string).</span></span> <span data-ttu-id="65c6c-217">Usado com Criteria1 e Operator para criar critérios compostos.</span><span class="sxs-lookup"><span data-stu-id="65c6c-217">Used with Criteria1 and Operator to construct compound criteria.</span></span></param>
        <param name="VisibleDropDown"><span data-ttu-id="65c6c-218">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-218">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-219"><b>True</b> para exibir a seta drop-down do Filtro Automático para o campo filtrado; <b>False</b> para ocultar a seta drop-down do Filtro Automático para o campo filtrado.</span><span class="sxs-lookup"><span data-stu-id="65c6c-219"><b>True</b> to display the AutoFilter drop-down arrow for the filtered field; <b>False</b> to hide the AutoFilter drop-down arrow for the filtered field.</span></span> <span data-ttu-id="65c6c-220"><b>True</b>, por padrão.</span><span class="sxs-lookup"><span data-stu-id="65c6c-220"><b>True</b> by default.</span></span></param>
        <summary><span data-ttu-id="65c6c-221">Filtra uma lista usando o Filtro Automático.</span><span class="sxs-lookup"><span data-stu-id="65c6c-221">Filters a list using the AutoFilter.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="65c6c-222">Aplique a <see cref="P:Microsoft.Office.Interop.Excel._Worksheet.AutoFilter" /> propriedade a um objeto para retornar um <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> <see cref="T:Microsoft.Office.Interop.Excel.AutoFilter" /> objeto.</span><span class="sxs-lookup"><span data-stu-id="65c6c-222">Apply the <see cref="P:Microsoft.Office.Interop.Excel._Worksheet.AutoFilter" /> property to a <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> object to return an <see cref="T:Microsoft.Office.Interop.Excel.AutoFilter" /> object.</span></span></para>
          <para><span data-ttu-id="65c6c-223">Se você omitir todos os argumentos, este método vai simplesmente alternar a exibição das setas suspensas do filtro automático no intervalo especificado.</span><span class="sxs-lookup"><span data-stu-id="65c6c-223">If you omit all the arguments, this method simply toggles the display of the AutoFilter drop-down arrows in the specified range.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoFit">
      <MemberSignature Language="C#" Value="public object AutoFit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AutoFit() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.AutoFit" />
      <MemberSignature Language="VB.NET" Value="Public Function AutoFit () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ AutoFit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(237)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="65c6c-224">Altera a largura das colunas no intervalo ou a altura das linhas no intervalo para obter o melhor ajuste.</span><span class="sxs-lookup"><span data-stu-id="65c6c-224">Changes the width of the columns in the range or the height of the rows in the range to achieve the best fit.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="65c6c-225">A expressão deve ser uma linha ou um intervalo de linhas, ou uma coluna ou um intervalo de colunas.</span><span class="sxs-lookup"><span data-stu-id="65c6c-225">The expression must be a row or a range of rows, or a column or a range of columns.</span></span> <span data-ttu-id="65c6c-226">Caso contrário, esse método gerará um erro.</span><span class="sxs-lookup"><span data-stu-id="65c6c-226">Otherwise, this method generates an error.</span></span></para>
          <para><span data-ttu-id="65c6c-227">Uma unidade de largura de coluna é igual à largura de um caractere no estilo Normal.</span><span class="sxs-lookup"><span data-stu-id="65c6c-227">One unit of column width is equal to the width of one character in the Normal style.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoFormat">
      <MemberSignature Language="C#" Value="public object AutoFormat (Microsoft.Office.Interop.Excel.XlRangeAutoFormat Format = Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatClassic1, object Number, object Font, object Alignment, object Border, object Pattern, object Width);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AutoFormat([in]valuetype Microsoft.Office.Interop.Excel.XlRangeAutoFormat Format, [in]object Number, [in]object Font, [in]object Alignment, [in]object Border, [in]object Pattern, [in]object Width) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.AutoFormat(Microsoft.Office.Interop.Excel.XlRangeAutoFormat,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AutoFormat (Optional Format As XlRangeAutoFormat = Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatClassic1, Optional Number As Object, Optional Font As Object, Optional Alignment As Object, Optional Border As Object, Optional Pattern As Object, Optional Width As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(114)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Format" Type="Microsoft.Office.Interop.Excel.XlRangeAutoFormat" />
        <Parameter Name="Number" Type="System.Object" />
        <Parameter Name="Font" Type="System.Object" />
        <Parameter Name="Alignment" Type="System.Object" />
        <Parameter Name="Border" Type="System.Object" />
        <Parameter Name="Pattern" Type="System.Object" />
        <Parameter Name="Width" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Format"><span data-ttu-id="65c6c-228">Opcional <see cref="T:Microsoft.Office.Interop.Excel.XlRangeAutoFormat" /> .</span><span class="sxs-lookup"><span data-stu-id="65c6c-228">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlRangeAutoFormat" />.</span></span> <span data-ttu-id="65c6c-229">A AutoFormat.Some of the <b>XlRangeAutoFormat</b> constants may not be available to you, depending on the language support (U.S. English, for example) that you've selected or installed.</span><span class="sxs-lookup"><span data-stu-id="65c6c-229">The specified AutoFormat.Some of the <b>XlRangeAutoFormat</b> constants may not be available to you, depending on the language support (U.S. English, for example) that you’ve selected or installed.</span></span></param>
        <param name="Number"><span data-ttu-id="65c6c-230">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-230">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-231"><b>True</b> para incluir formatos de número na AutoFormatação.</span><span class="sxs-lookup"><span data-stu-id="65c6c-231"><b>True</b> to include number formats in the AutoFormat.</span></span> <span data-ttu-id="65c6c-232">O valor padrão é <b>True.</b></span><span class="sxs-lookup"><span data-stu-id="65c6c-232">The default value is <b>True.</b></span></span></param>
        <param name="Font"><span data-ttu-id="65c6c-233">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-233">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-234"><b>True</b> para incluir formatos de fonte na AutoFormatação.</span><span class="sxs-lookup"><span data-stu-id="65c6c-234"><b>True</b> to include font formats in the AutoFormat.</span></span> <span data-ttu-id="65c6c-235">O valor padrão é <b>True</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-235">The default value is <b>True</b>.</span></span></param>
        <param name="Alignment"><span data-ttu-id="65c6c-236">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-236">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-237"><b>True</b> para incluir alinhamento na AutoFormatação.</span><span class="sxs-lookup"><span data-stu-id="65c6c-237"><b>True</b> to include alignment in the AutoFormat.</span></span> <span data-ttu-id="65c6c-238">O valor padrão é <b>True</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-238">The default value is <b>True</b>.</span></span></param>
        <param name="Border"><span data-ttu-id="65c6c-239">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-239">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-240"><b>True</b> para incluir formatos de borda na AutoFormatação.</span><span class="sxs-lookup"><span data-stu-id="65c6c-240"><b>True</b> to include border formats in the AutoFormat.</span></span> <span data-ttu-id="65c6c-241">O valor padrão é <b>True</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-241">The default value is <b>True</b>.</span></span></param>
        <param name="Pattern"><span data-ttu-id="65c6c-242">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-242">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-243"><b>True</b> para incluir formatos de padrão na AutoFormatação.</span><span class="sxs-lookup"><span data-stu-id="65c6c-243"><b>True</b> to include pattern formats in the AutoFormat.</span></span> <span data-ttu-id="65c6c-244">O valor padrão é <b>True</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-244">The default value is <b>True</b>.</span></span></param>
        <param name="Width"><span data-ttu-id="65c6c-245">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-245">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-246"><b>True</b> para incluir a largura da coluna e a altura da linha na AutoFormatação.</span><span class="sxs-lookup"><span data-stu-id="65c6c-246"><b>True</b> to include column width and row height in the AutoFormat.</span></span> <span data-ttu-id="65c6c-247">O valor padrão é <b>True</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-247">The default value is <b>True</b>.</span></span></param>
        <summary><span data-ttu-id="65c6c-248">Formatar automaticamente o intervalo especificado, usando um formato predefinido.</span><span class="sxs-lookup"><span data-stu-id="65c6c-248">Automatically formats the specified range, using a predefined format.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="65c6c-249">Se o intervalo for uma única célula, esse método também formatará a região ativa ao redor da célula.</span><span class="sxs-lookup"><span data-stu-id="65c6c-249">If the range is a single cell, this method also formats the active region surrounding the cell.</span></span> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoOutline">
      <MemberSignature Language="C#" Value="public object AutoOutline ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AutoOutline() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.AutoOutline" />
      <MemberSignature Language="VB.NET" Value="Public Function AutoOutline () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ AutoOutline();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1036)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="65c6c-250">Cria tópicos automaticamente para o intervalo especificado.</span><span class="sxs-lookup"><span data-stu-id="65c6c-250">Automatically creates an outline for the specified range.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="65c6c-251">Se o intervalo for uma única célula, o Microsoft Excel criará tópicos para a planilha inteira.</span><span class="sxs-lookup"><span data-stu-id="65c6c-251">If the range is a single cell, Microsoft Excel creates an outline for the entire sheet.</span></span> <span data-ttu-id="65c6c-252">Os novos tópicos substituem quaisquer tópicos existentes.</span><span class="sxs-lookup"><span data-stu-id="65c6c-252">The new outline replaces any existing outline.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderAround">
      <MemberSignature Language="C#" Value="public object BorderAround (object LineStyle, Microsoft.Office.Interop.Excel.XlBorderWeight Weight = Microsoft.Office.Interop.Excel.XlBorderWeight.xlThin, Microsoft.Office.Interop.Excel.XlColorIndex ColorIndex = Microsoft.Office.Interop.Excel.XlColorIndex.xlColorIndexAutomatic, object Color);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object BorderAround([in]object LineStyle, [in]valuetype Microsoft.Office.Interop.Excel.XlBorderWeight Weight, [in]valuetype Microsoft.Office.Interop.Excel.XlColorIndex ColorIndex, [in]object Color) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.BorderAround(System.Object,Microsoft.Office.Interop.Excel.XlBorderWeight,Microsoft.Office.Interop.Excel.XlColorIndex,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BorderAround (Optional LineStyle As Object, Optional Weight As XlBorderWeight = Microsoft.Office.Interop.Excel.XlBorderWeight.xlThin, Optional ColorIndex As XlColorIndex = Microsoft.Office.Interop.Excel.XlColorIndex.xlColorIndexAutomatic, Optional Color As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1067)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="LineStyle" Type="System.Object" />
        <Parameter Name="Weight" Type="Microsoft.Office.Interop.Excel.XlBorderWeight" />
        <Parameter Name="ColorIndex" Type="Microsoft.Office.Interop.Excel.XlColorIndex" />
        <Parameter Name="Color" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="LineStyle"><span data-ttu-id="65c6c-253">Opcional <see cref="T:Microsoft.Office.Interop.Excel.XlLineStyle" /> .</span><span class="sxs-lookup"><span data-stu-id="65c6c-253">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlLineStyle" />.</span></span> <span data-ttu-id="65c6c-254">O estilo de linha da borda.</span><span class="sxs-lookup"><span data-stu-id="65c6c-254">The line style for the border.</span></span> <span data-ttu-id="65c6c-255">Pode ser uma das seguintes constantes <b>XlLineStyle:</b> <b></b> <paramref name="default" /> <b>xlDash xlDashDot</b><b>xlDashDot</b><b>xlDot</b><b>xlDot xlDouble</b><b>xlLineStlyeNone</b><b>xlSlantDashDot</b><b>xlLineStlyeNone</b> <b></b></span><span class="sxs-lookup"><span data-stu-id="65c6c-255">Can be one of the following <b>XlLineStyle</b> constants:<b>xlContinuous</b><paramref name="default" /><b>xlDash</b><b>xlDashDot</b><b>xlDashDotDot</b><b>xlDot</b><b>xlDouble</b><b>xlLineStlyeNone</b><b>xlSlantDashDot</b><b>xlLineStlyeNone</b></span></span></param>
        <param name="Weight"><span data-ttu-id="65c6c-256">Opcional <see cref="T:Microsoft.Office.Interop.Excel.XlBorderWeight" /> .</span><span class="sxs-lookup"><span data-stu-id="65c6c-256">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlBorderWeight" />.</span></span> <span data-ttu-id="65c6c-257">A espessura da borda.</span><span class="sxs-lookup"><span data-stu-id="65c6c-257">The border weight.</span></span> <span data-ttu-id="65c6c-258">Pode ser uma das seguintes constantes <b>XlBorderWeight:</b> <b>xlWeightline</b><b>xlMedium</b><b>xlThick</b><b>xlThin</b><paramref name="default" /></span><span class="sxs-lookup"><span data-stu-id="65c6c-258">Can be one of the following <b>XlBorderWeight</b> constants:<b>xlHairline</b><b>xlMedium</b><b>xlThick</b><b>xlThin</b><paramref name="default" /></span></span></param>
        <param name="ColorIndex"><span data-ttu-id="65c6c-259">Opcional <see cref="T:Microsoft.Office.Interop.Excel.XlColorIndex" /> .</span><span class="sxs-lookup"><span data-stu-id="65c6c-259">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlColorIndex" />.</span></span> <span data-ttu-id="65c6c-260">A cor da borda, como um índice na paleta de cores atual ou como uma constante <b>XlColorIndex</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-260">The border color, as an index into the current color palette or as an <b>XlColorIndex</b> constant.</span></span> <span data-ttu-id="65c6c-261">Pode ser uma das seguintes constantes <b>XlColorIndex:</b> <b>xlColorIndexAutomatic</b> <paramref name="default" /> <b>xlColorIndexNone</b></span><span class="sxs-lookup"><span data-stu-id="65c6c-261">Can be one of the following <b>XlColorIndex</b> constants:<b>xlColorIndexAutomatic</b><paramref name="default" /><b>xlColorIndexNone</b></span></span></param>
        <param name="Color"><span data-ttu-id="65c6c-262">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-262">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-263">A cor da borda, como um valor RGB.</span><span class="sxs-lookup"><span data-stu-id="65c6c-263">The border color, as an RGB value.</span></span></param>
        <summary><span data-ttu-id="65c6c-264">Adiciona uma borda a um intervalo e define <see cref="P:Microsoft.Office.Interop.Excel.Border.Color" /> as propriedades e , para a nova <see cref="P:Microsoft.Office.Interop.Excel.Border.LineStyle" /> <see cref="P:Microsoft.Office.Interop.Excel.Border.Weight" /> borda.</span><span class="sxs-lookup"><span data-stu-id="65c6c-264">Adds a border to a range and sets the <see cref="P:Microsoft.Office.Interop.Excel.Border.Color" />, <see cref="P:Microsoft.Office.Interop.Excel.Border.LineStyle" />, and <see cref="P:Microsoft.Office.Interop.Excel.Border.Weight" /> properties for the new border.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="65c6c-265">Você deve especificar um <paramref name="ColorIndex" /> ou , mas não <paramref name="Color" /> ambos.</span><span class="sxs-lookup"><span data-stu-id="65c6c-265">You must specify either <paramref name="ColorIndex" /> or <paramref name="Color" />, but not both.</span></span></para>
          <para><span data-ttu-id="65c6c-266">Você pode especificar um <paramref name="LineStyle" /> ou , mas não <paramref name="Weight" /> ambos.</span><span class="sxs-lookup"><span data-stu-id="65c6c-266">You can specify either <paramref name="LineStyle" /> or <paramref name="Weight" />, but not both.</span></span> <span data-ttu-id="65c6c-267">Se você não especificar um dos argumentos, o Microsoft Excel usará o estilo e peso de linha.</span><span class="sxs-lookup"><span data-stu-id="65c6c-267">If you don't specify either argument, Microsoft Excel uses the default line style and weight.</span></span></para>
          <para><span data-ttu-id="65c6c-268">Este método aplica tópicos a todo o intervalo sem preenchê-lo.</span><span class="sxs-lookup"><span data-stu-id="65c6c-268">This method outlines the entire range without filling it in.</span></span> <span data-ttu-id="65c6c-269">Para definir as bordas de todas as células, você deve definir <see cref="P:Microsoft.Office.Interop.Excel.Borders.Color" /> as propriedades e , para a coleção Borders <see cref="P:Microsoft.Office.Interop.Excel.Borders.LineStyle" /> <see cref="P:Microsoft.Office.Interop.Excel.Borders.Weight" /> .</span><span class="sxs-lookup"><span data-stu-id="65c6c-269">To set the borders of all the cells, you must set the <see cref="P:Microsoft.Office.Interop.Excel.Borders.Color" />, <see cref="P:Microsoft.Office.Interop.Excel.Borders.LineStyle" />, and <see cref="P:Microsoft.Office.Interop.Excel.Borders.Weight" /> properties for the Borders collection.</span></span> <span data-ttu-id="65c6c-270">Para limpar a borda, é necessário definir a propriedade  <b>LineStyle</b> como <b>xlLineStyleNone</b> para todas as células no intervalo.</span><span class="sxs-lookup"><span data-stu-id="65c6c-270">To clear the border, you must set the <b>LineStyle</b> property to <b>xlLineStyleNone</b> for all the cells in the range.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderAround2">
      <MemberSignature Language="C#" Value="public object BorderAround2 (object LineStyle, Microsoft.Office.Interop.Excel.XlBorderWeight Weight = Microsoft.Office.Interop.Excel.XlBorderWeight.xlThin, Microsoft.Office.Interop.Excel.XlColorIndex ColorIndex = Microsoft.Office.Interop.Excel.XlColorIndex.xlColorIndexAutomatic, object Color, object ThemeColor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object BorderAround2([in]object LineStyle, [in]valuetype Microsoft.Office.Interop.Excel.XlBorderWeight Weight, [in]valuetype Microsoft.Office.Interop.Excel.XlColorIndex ColorIndex, [in]object Color, [in]object ThemeColor) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.BorderAround2(System.Object,Microsoft.Office.Interop.Excel.XlBorderWeight,Microsoft.Office.Interop.Excel.XlColorIndex,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BorderAround2 (Optional LineStyle As Object, Optional Weight As XlBorderWeight = Microsoft.Office.Interop.Excel.XlBorderWeight.xlThin, Optional ColorIndex As XlColorIndex = Microsoft.Office.Interop.Excel.XlColorIndex.xlColorIndexAutomatic, Optional Color As Object, Optional ThemeColor As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2771)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="LineStyle" Type="System.Object" />
        <Parameter Name="Weight" Type="Microsoft.Office.Interop.Excel.XlBorderWeight" />
        <Parameter Name="ColorIndex" Type="Microsoft.Office.Interop.Excel.XlColorIndex" />
        <Parameter Name="Color" Type="System.Object" />
        <Parameter Name="ThemeColor" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="LineStyle">To be added.</param>
        <param name="Weight">To be added.</param>
        <param name="ColorIndex">To be added.</param>
        <param name="Color">To be added.</param>
        <param name="ThemeColor">To be added.</param>
        <summary><span data-ttu-id="65c6c-271">Reservado para uso interno.</span><span class="sxs-lookup"><span data-stu-id="65c6c-271">Reserved for internal use.</span></span></summary>
        <returns><span data-ttu-id="65c6c-272">Retorna <see cref="T:System.Object" /> .</span><span class="sxs-lookup"><span data-stu-id="65c6c-272">Returns <see cref="T:System.Object" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Borders">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Borders Borders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Borders Borders" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Borders" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Borders As Borders" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Borders ^ Borders { Microsoft::Office::Interop::Excel::Borders ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(435)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(435)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Borders</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65c6c-273">Retorna uma coleção que representa as bordas de um estilo ou de um intervalo de células (incluindo um intervalo definido como <see cref="T:Microsoft.Office.Interop.Excel.Borders" /> parte de um formato condicional).</span><span class="sxs-lookup"><span data-stu-id="65c6c-273">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Borders" /> collection that represents the borders of a style or a range of cells (including a range defined as part of a conditional format).</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Calculate">
      <MemberSignature Language="C#" Value="public object Calculate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Calculate() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Calculate" />
      <MemberSignature Language="VB.NET" Value="Public Function Calculate () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Calculate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(279)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="65c6c-274">Calcula um intervalo especificado de células em uma planilha.</span><span class="sxs-lookup"><span data-stu-id="65c6c-274">Calculates a specified range of cells on a worksheet.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculateRowMajorOrder">
      <MemberSignature Language="C#" Value="public object CalculateRowMajorOrder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CalculateRowMajorOrder() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.CalculateRowMajorOrder" />
      <MemberSignature Language="VB.NET" Value="Public Function CalculateRowMajorOrder () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ CalculateRowMajorOrder();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2364)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="65c6c-275">Calcula um intervalo especificado de células.</span><span class="sxs-lookup"><span data-stu-id="65c6c-275">Calculates a specfied range of cells.</span></span></summary>
        <returns><span data-ttu-id="65c6c-276"><b>Object</b></span><span class="sxs-lookup"><span data-stu-id="65c6c-276"><b>Object</b></span></span></returns>
        <remarks><para><span data-ttu-id="65c6c-277">O método calcula o intervalo especificado célula por célula, do seu canto superior esquerdo ao canto inferior direito na <see cref="M:Microsoft.Office.Interop.Excel.Range.CalculateRowMajorOrder" /> ordem linha-principal.</span><span class="sxs-lookup"><span data-stu-id="65c6c-277">The <see cref="M:Microsoft.Office.Interop.Excel.Range.CalculateRowMajorOrder" /> method calculates the specified range range cell-by-cell, from its top left corner to its to bottom right corner in row-major order.</span></span> <span data-ttu-id="65c6c-278">Esse é o mesmo processo usado pelo Excel 2000 e versões anteriores para calcular um intervalo.</span><span class="sxs-lookup"><span data-stu-id="65c6c-278">This is the same process that is used  by  Excel 2000 and earlier versions to calculate a range.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Cells">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Cells { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Cells" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Cells" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Cells As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Cells { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(238)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(238)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65c6c-279">Retorna um objeto <b>Range</b> que representa as células no intervalo especificado.</span><span class="sxs-lookup"><span data-stu-id="65c6c-279">Returns a <b>Range</b> object that represents the cells in the specified range.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Characters">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Characters Characters[object Start, object Length] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Characters Characters(object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Characters(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Characters(Optional Start As Object, Optional Length As Object) As Characters" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Characters ^ Characters[System::Object ^, System::Object ^] { Microsoft::Office::Interop::Excel::Characters ^ get(System::Object ^ Start, System::Object ^ Length); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(603)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(603)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Characters</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Start" Type="System.Object" />
        <Parameter Name="Length" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Start"><span data-ttu-id="65c6c-280">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-280">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-281">O primeiro caractere a ser retornado.</span><span class="sxs-lookup"><span data-stu-id="65c6c-281">The first character to be returned.</span></span> <span data-ttu-id="65c6c-282">Se esse argumento for 1 ou omitido, essa propriedade retornará um intervalo de caracteres começando com o primeiro caractere.</span><span class="sxs-lookup"><span data-stu-id="65c6c-282">If this argument is either 1 or omitted, this property returns a range of characters starting with the first character.</span></span></param>
        <param name="Length"><span data-ttu-id="65c6c-283">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-283">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-284">O número de caracteres a ser retornado.</span><span class="sxs-lookup"><span data-stu-id="65c6c-284">The number of characters to be returned.</span></span> <span data-ttu-id="65c6c-285">Se esse argumento for omitido, essa propriedade retornará o restante da cadeia de caracteres (tudo após o <paramref name="Start" /> caractere).</span><span class="sxs-lookup"><span data-stu-id="65c6c-285">If this argument is omitted, this property returns the remainder of the string (everything after the <paramref name="Start" /> character).</span></span></param>
        <summary><span data-ttu-id="65c6c-286">Retorna um <see cref="T:Microsoft.Office.Interop.Excel.Characters" /> objeto que representa um intervalo de caracteres dentro do texto do objeto.</span><span class="sxs-lookup"><span data-stu-id="65c6c-286">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Characters" /> object that represents a range of characters within the object text.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="65c6c-287">Você pode usar o objeto <b>Characters</b> para formatar caracteres dentro de uma cadeia de caracteres de texto.</span><span class="sxs-lookup"><span data-stu-id="65c6c-287">You can use the <b>Characters</b> object to format characters within a text string.</span></span></para>
          <para><span data-ttu-id="65c6c-288">O objeto <b>Characters</b> não é uma coleção.</span><span class="sxs-lookup"><span data-stu-id="65c6c-288">The <b>Characters</b> object isn't a collection.</span></span></para>
          <para><span data-ttu-id="65c6c-289">Para o <see cref="T:Microsoft.Office.Interop.Excel.TextFrame" /> objeto, <see cref="M:Microsoft.Office.Interop.Excel.TextFrame.Characters(System.Object,System.Object)" /> é um método.</span><span class="sxs-lookup"><span data-stu-id="65c6c-289">For the <see cref="T:Microsoft.Office.Interop.Excel.TextFrame" /> object, <see cref="M:Microsoft.Office.Interop.Excel.TextFrame.Characters(System.Object,System.Object)" /> is a method.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckSpelling">
      <MemberSignature Language="C#" Value="public object CheckSpelling (object CustomDictionary, object IgnoreUppercase, object AlwaysSuggest, object SpellLang);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CheckSpelling([in]object CustomDictionary, [in]object IgnoreUppercase, [in]object AlwaysSuggest, [in]object SpellLang) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.CheckSpelling(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckSpelling (Optional CustomDictionary As Object, Optional IgnoreUppercase As Object, Optional AlwaysSuggest As Object, Optional SpellLang As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(505)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="CustomDictionary" Type="System.Object" />
        <Parameter Name="IgnoreUppercase" Type="System.Object" />
        <Parameter Name="AlwaysSuggest" Type="System.Object" />
        <Parameter Name="SpellLang" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="CustomDictionary"><span data-ttu-id="65c6c-290">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-290">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-291">Uma sequência de caracteres que indica o nome de arquivo do dicionário personalizado a ser examinado caso a palavra não seja encontrada no dicionário principal.</span><span class="sxs-lookup"><span data-stu-id="65c6c-291">A string that indicates the file name of the custom dictionary to be examined if the word isn't found in the main dictionary.</span></span> <span data-ttu-id="65c6c-292">Se este argumento for omitido, o dicionário especificado no momento será usado.</span><span class="sxs-lookup"><span data-stu-id="65c6c-292">If this argument is omitted, the currently specified dictionary is used.</span></span></param>
        <param name="IgnoreUppercase"><span data-ttu-id="65c6c-293">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-293">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-294"><b>True</b> para que o Microsoft Excel ignore palavras que estão todas em maiúsculas; <b>False</b> para que o Microsoft Excel verifique as palavras que estão todas em maiúsculas.</span><span class="sxs-lookup"><span data-stu-id="65c6c-294"><b>True</b> to have Microsoft Excel ignore words that are all uppercase; <b>False</b> to have Microsoft Excel check words that are all uppercase.</span></span> <span data-ttu-id="65c6c-295">Se este argumento for omitido, a configuração atual será usada.</span><span class="sxs-lookup"><span data-stu-id="65c6c-295">If this argument is omitted, the current setting will be used.</span></span></param>
        <param name="AlwaysSuggest"><span data-ttu-id="65c6c-296">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-296">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-297"><b>True</b> para fazer o Microsoft Excel exibir uma lista de ortografias alternativas sugeridas quando uma ortografia incorreta for encontrada; <b>False</b> para fazer o Microsoft Excel pausar enquanto você ins apresenta a ortografia correta.</span><span class="sxs-lookup"><span data-stu-id="65c6c-297"><b>True</b> to have Microsoft Excel display a list of suggested alternate spellings when an incorrect spelling is found; <b>False</b> to have Microsoft Excel pause while you input the correct spelling.</span></span> <span data-ttu-id="65c6c-298">Se este argumento for omitido, a configuração atual será usada.</span><span class="sxs-lookup"><span data-stu-id="65c6c-298">If this argument is omitted, the current setting will be used.</span></span></param>
        <param name="SpellLang"><span data-ttu-id="65c6c-299">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-299">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-300">O idioma do dicionário que está sendo usado.</span><span class="sxs-lookup"><span data-stu-id="65c6c-300">The language of the dictionary being used.</span></span> <span data-ttu-id="65c6c-301">Pode ser um dos <b>valores MsoLanguageID</b> usados pela <see cref="P:Microsoft.Office.Core.LanguageSettings.LanguageID(Microsoft.Office.Core.MsoAppLanguageID)" /> propriedade.</span><span class="sxs-lookup"><span data-stu-id="65c6c-301">Can be one of the <b>MsoLanguageID</b> values used by the <see cref="P:Microsoft.Office.Core.LanguageSettings.LanguageID(Microsoft.Office.Core.MsoAppLanguageID)" /> property.</span></span></param>
        <summary><span data-ttu-id="65c6c-302">Verifica a ortografia de um objeto.</span><span class="sxs-lookup"><span data-stu-id="65c6c-302">Checks the spelling of an object.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="65c6c-303">Este método não tem valor de retorno; o Microsoft Excel exibe a caixa de diálogo Verificar Ortografia.</span><span class="sxs-lookup"><span data-stu-id="65c6c-303">This method has no return value; Microsoft Excel displays the Spelling dialog box.</span></span></para>
          <para><span data-ttu-id="65c6c-304">Para verificar os headers, rodapés e objetos em uma planilha, use esse método em um <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> objeto.</span><span class="sxs-lookup"><span data-stu-id="65c6c-304">To check headers, footers, and objects on a worksheet, use this method on a <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> object.</span></span></para>
          <para><span data-ttu-id="65c6c-305">Para verificar somente células e anotações, use esse método com o objeto retornado pela <see cref="P:Microsoft.Office.Interop.Excel.Range.Cells" /> propriedade.</span><span class="sxs-lookup"><span data-stu-id="65c6c-305">To check only cells and notes, use this method with the object returned by the <see cref="P:Microsoft.Office.Interop.Excel.Range.Cells" /> property.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public object Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clear() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Function Clear () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(111)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="65c6c-306">Limpa o objeto inteiro.</span><span class="sxs-lookup"><span data-stu-id="65c6c-306">Clears the entire object.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearComments">
      <MemberSignature Language="C#" Value="public void ClearComments ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearComments() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ClearComments" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearComments ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearComments();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1390)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="65c6c-307">Limpa todos os comentários de célula do intervalo especificado.</span><span class="sxs-lookup"><span data-stu-id="65c6c-307">Clears all cell comments from the specified range.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearContents">
      <MemberSignature Language="C#" Value="public object ClearContents ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ClearContents() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ClearContents" />
      <MemberSignature Language="VB.NET" Value="Public Function ClearContents () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ClearContents();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(113)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="65c6c-308">Limpa as fórmulas do intervalo.</span><span class="sxs-lookup"><span data-stu-id="65c6c-308">Clears the formulas from the range.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="65c6c-309">Esse método limpa os dados de um gráfico, mas deixa a formatação.</span><span class="sxs-lookup"><span data-stu-id="65c6c-309">This method clears the data from a chart but leaves the formatting.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearFormats">
      <MemberSignature Language="C#" Value="public object ClearFormats ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ClearFormats() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ClearFormats" />
      <MemberSignature Language="VB.NET" Value="Public Function ClearFormats () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ClearFormats();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(112)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="65c6c-310">Limpa a formatação do objeto.</span><span class="sxs-lookup"><span data-stu-id="65c6c-310">Clears the formatting of the object.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearHyperlinks">
      <MemberSignature Language="C#" Value="public void ClearHyperlinks ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearHyperlinks() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ClearHyperlinks" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearHyperlinks ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearHyperlinks();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2854)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="65c6c-311">Remove todos os hiperlinks do intervalo especificado.</span><span class="sxs-lookup"><span data-stu-id="65c6c-311">Removes all hyperlinks from the specified range.</span></span></summary>
        <remarks><para><span data-ttu-id="65c6c-312">Chamar o método no intervalo especificado é equivalente a usar o comando Limpar Hiperlinks na lista drop-down Clear, na seção Edição da <see cref="M:Microsoft.Office.Interop.Excel.Range.ClearHyperlinks" /> guia Página Home. Somente hiperlinks serão removidos; todos os outros conteúdos de células, como texto e formatação, não serão afetados.</span><span class="sxs-lookup"><span data-stu-id="65c6c-312">Calling the <see cref="M:Microsoft.Office.Interop.Excel.Range.ClearHyperlinks" /> method on the specified range is equivalent to using the Clear Hyperlinks command from the Clear drop-down list in the Editing section of the Home tab. Only hyperlinks will be removed; all other cell content, such as text and formatting will be unaffected.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearNotes">
      <MemberSignature Language="C#" Value="public object ClearNotes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ClearNotes() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ClearNotes" />
      <MemberSignature Language="VB.NET" Value="Public Function ClearNotes () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ClearNotes();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(239)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="65c6c-313">Limpa as notas e notas sonoras de todas as células do intervalo especificado.</span><span class="sxs-lookup"><span data-stu-id="65c6c-313">Clears notes and sound notes from all the cells in the specified range.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearOutline">
      <MemberSignature Language="C#" Value="public object ClearOutline ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ClearOutline() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ClearOutline" />
      <MemberSignature Language="VB.NET" Value="Public Function ClearOutline () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ClearOutline();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1037)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="65c6c-314">Limpa os tópicos do intervalo especificado.</span><span class="sxs-lookup"><span data-stu-id="65c6c-314">Clears the outline for the specified range.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Column">
      <MemberSignature Language="C#" Value="public int Column { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Column" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Column" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Column As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Column { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(240)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(240)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65c6c-315">Retorna o número da primeira coluna na primeira área do intervalo especificado.</span><span class="sxs-lookup"><span data-stu-id="65c6c-315">Returns the number of the first column in the first area in the specified range.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="65c6c-316">A coluna A retorna 1, a coluna B retorna 2 e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="65c6c-316">Column A returns 1, column B returns 2, and so on.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnDifferences">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range ColumnDifferences (object Comparison);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Range ColumnDifferences([in]object Comparison) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ColumnDifferences(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ColumnDifferences (Comparison As Object) As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::Range ^ ColumnDifferences(System::Object ^ Comparison);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(510)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Comparison" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Comparison"><span data-ttu-id="65c6c-317">Objeto <b>Required</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-317">Required <b>Object</b>.</span></span> <span data-ttu-id="65c6c-318">Uma única célula a ser comparada com o intervalo especificado.</span><span class="sxs-lookup"><span data-stu-id="65c6c-318">A single cell to compare to the specified range.</span></span></param>
        <summary><span data-ttu-id="65c6c-319">Retorna um <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objeto que representa todas as células cujo conteúdo é diferente da célula de comparação em cada coluna.</span><span class="sxs-lookup"><span data-stu-id="65c6c-319">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents all the cells whose contents are different from the comparison cell in each column.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Columns">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Columns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Columns" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Columns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Columns As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Columns { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(241)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(241)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65c6c-320">Retorna um <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objeto que representa as colunas no intervalo especificado.</span><span class="sxs-lookup"><span data-stu-id="65c6c-320">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the columns in the specified range.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="65c6c-321">Quando aplicada a um objeto <b>Range</b> que é uma seleção de várias áreas, essa propriedade retorna colunas apenas da primeira área do intervalo.</span><span class="sxs-lookup"><span data-stu-id="65c6c-321">When applied to a <b>Range</b> object that's a multiple-area selection, this property returns columns from only the first area of the range.</span></span> <span data-ttu-id="65c6c-322">Por exemplo, se o objeto <b>Range</b> tiver duas áreas A1:B2 e C3:D4, a propriedade retornará <see cref="P:Microsoft.Office.Interop.Excel.Range.Count" /> 2, e não 4.</span><span class="sxs-lookup"><span data-stu-id="65c6c-322">For example, if the <b>Range</b> object has two areas — A1:B2 and C3:D4 — the <see cref="P:Microsoft.Office.Interop.Excel.Range.Count" /> property returns 2, not 4.</span></span> <span data-ttu-id="65c6c-323">Para usar essa propriedade em um intervalo que possa conter uma seleção de várias áreas, teste a propriedade do objeto para determinar se o intervalo contém mais <see cref="P:Microsoft.Office.Interop.Excel.Areas.Count" /> <see cref="T:Microsoft.Office.Interop.Excel.Areas" /> de uma área.</span><span class="sxs-lookup"><span data-stu-id="65c6c-323">To use this property on a range that may contain a multiple-area selection, test the <see cref="P:Microsoft.Office.Interop.Excel.Areas.Count" /> property of the <see cref="T:Microsoft.Office.Interop.Excel.Areas" /> object to determine whether the range contains more than one area.</span></span> <span data-ttu-id="65c6c-324">Caso contenha, faça loop sobre cada área do intervalo.</span><span class="sxs-lookup"><span data-stu-id="65c6c-324">If it does, loop over each area in the range.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnWidth">
      <MemberSignature Language="C#" Value="public object ColumnWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ColumnWidth" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.ColumnWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property ColumnWidth As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ColumnWidth { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(242)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(242)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(242)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65c6c-325">Retorna ou define a largura de todas as colunas no intervalo especificado.</span><span class="sxs-lookup"><span data-stu-id="65c6c-325">Returns or sets the width of all columns in the specified range.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="65c6c-p155">Uma unidade de largura de coluna equivale à largura de um caractere no estilo Normal. Para fontes proporcionais, será usada a largura do caractere 0 (zero).</span><span class="sxs-lookup"><span data-stu-id="65c6c-p155">One unit of column width is equal to the width of one character in the Normal style. For proportional fonts, the width of the character 0 (zero) is used.</span></span></para>
          <para><span data-ttu-id="65c6c-328">Use a <see cref="P:Microsoft.Office.Interop.Excel.Range.Width" /> propriedade para retornar a largura de uma coluna em pontos.</span><span class="sxs-lookup"><span data-stu-id="65c6c-328">Use the <see cref="P:Microsoft.Office.Interop.Excel.Range.Width" /> property to return the width of a column in points.</span></span></para>
          <para><span data-ttu-id="65c6c-p156">Se todas as colunas do intervalo possuírem a mesma largura, a propriedade <b>ColumnWidth</b> retornará a largura. Se as colunas do intervalo tiverem larguras diferentes, essa propriedade retornará <b>Null</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-p156">If all columns in the range have the same width, the <b>ColumnWidth</b> property returns the width. If columns in the range have different widths, this property returns <b>Null</b>.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Comment">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Comment Comment { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Comment Comment" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Comment" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Comment As Comment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Comment ^ Comment { Microsoft::Office::Interop::Excel::Comment ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(910)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(910)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Comment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65c6c-331">Retorna um objeto que representa o comentário associado à célula no canto superior <see cref="T:Microsoft.Office.Interop.Excel.Comment" /> esquerdo do intervalo.</span><span class="sxs-lookup"><span data-stu-id="65c6c-331">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Comment" /> object that represents the comment associated with the cell in the upper-left corner of the range.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Consolidate">
      <MemberSignature Language="C#" Value="public object Consolidate (object Sources, object Function, object TopRow, object LeftColumn, object CreateLinks);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Consolidate([in]object Sources, [in]object Function, [in]object TopRow, [in]object LeftColumn, [in]object CreateLinks) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Consolidate(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Consolidate (Optional Sources As Object, Optional Function As Object, Optional TopRow As Object, Optional LeftColumn As Object, Optional CreateLinks As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(482)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Sources" Type="System.Object" />
        <Parameter Name="Function" Type="System.Object" />
        <Parameter Name="TopRow" Type="System.Object" />
        <Parameter Name="LeftColumn" Type="System.Object" />
        <Parameter Name="CreateLinks" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Sources"><span data-ttu-id="65c6c-332">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-332">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-333">A origem da consolidação como uma matriz de sequências de caracteres de referência de texto na notação de estilo L1C1.</span><span class="sxs-lookup"><span data-stu-id="65c6c-333">The sources of the consolidation as an array of text reference strings in R1C1-style notation.</span></span> <span data-ttu-id="65c6c-334">As referências devem incluir o caminho completo das planilhas a serem consolidadas.</span><span class="sxs-lookup"><span data-stu-id="65c6c-334">The references must include the full path of sheets to be consolidated.</span></span></param>
        <param name="Function"><span data-ttu-id="65c6c-335">Opcional <see cref="T:Microsoft.Office.Interop.Excel.XlConsolidationFunction" /> .</span><span class="sxs-lookup"><span data-stu-id="65c6c-335">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlConsolidationFunction" />.</span></span> <span data-ttu-id="65c6c-336">Pode ser uma das seguintes <b>constantes XlConsilidationFunction:</b> <b>xlAverage</b> <paramref name="default" /> <b>xlCount xlCountNums</b><b></b><b>xlMax</b><b>xlMin</b><b>xlProduct</b><b>xlStDev</b><b>xlStDevP</b><b>xlSum</b><b>xlVar</b><b>xlVarP</b></span><span class="sxs-lookup"><span data-stu-id="65c6c-336">Can be one of the following <b>XlConsilidationFunction</b> constants:<b>xlAverage</b><paramref name="default" /><b>xlCount</b><b>xlCountNums</b><b>xlMax</b><b>xlMin</b><b>xlProduct</b><b>xlStDev</b><b>xlStDevP</b><b>xlSum</b><b>xlVar</b><b>xlVarP</b></span></span></param>
        <param name="TopRow"><span data-ttu-id="65c6c-337">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-337">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-338"><b>True</b> para consolidar dados com base em títulos de coluna na linha superior dos intervalos de consolidação; <b>False</b> para consolidar dados por posição.</span><span class="sxs-lookup"><span data-stu-id="65c6c-338"><b>True</b> to consolidate data based on column titles in the top row of the consolidation ranges; <b>False</b> to consolidate data by position.</span></span> <span data-ttu-id="65c6c-339">O valor padrão é <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-339">The default value is <b>False</b>.</span></span></param>
        <param name="LeftColumn"><span data-ttu-id="65c6c-340">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-340">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-341"><b>True</b> para consolidar dados com base em títulos de linha na coluna esquerda dos intervalos de consolidação; <b>False</b> para consolidar dados por posição.</span><span class="sxs-lookup"><span data-stu-id="65c6c-341"><b>True</b> to consolidate data based on row titles in the left column of the consolidation ranges; <b>False</b> to consolidate data by position.</span></span> <span data-ttu-id="65c6c-342">O valor padrão é <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-342">The default value is <b>False</b>.</span></span></param>
        <param name="CreateLinks"><span data-ttu-id="65c6c-343">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-343">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-344"><b>True</b> para que a consolidação use links de planilha; <b>False</b> para fazer com que a consolidação copie os dados.</span><span class="sxs-lookup"><span data-stu-id="65c6c-344"><b>True</b> to have the consolidation use worksheet links; <b>False</b> to have the consolidation copy the data.</span></span> <span data-ttu-id="65c6c-345">O valor padrão é <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-345">The default value is <b>False</b>.</span></span></param>
        <summary><span data-ttu-id="65c6c-346">Consolida dados de vários intervalos de várias planilhas em um só intervalo de uma única planilha.</span><span class="sxs-lookup"><span data-stu-id="65c6c-346">Consolidates data from multiple ranges on multiple worksheets into a single range on a single worksheet.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public object Copy (object Destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Copy([in]object Destination) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Copy(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Copy (Optional Destination As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(551)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Destination" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Destination"><span data-ttu-id="65c6c-347">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-347">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-348">Especifica o novo intervalo para que o intervalo especificado será copiado.</span><span class="sxs-lookup"><span data-stu-id="65c6c-348">Specifies the new range to which the specified range will be copied.</span></span> <span data-ttu-id="65c6c-349">Se esse argumento for omitido, o Microsoft Excel copia o intervalo para a área de transferência.</span><span class="sxs-lookup"><span data-stu-id="65c6c-349">If this argument is omitted, Microsoft Excel copies the range to the Clipboard.</span></span></param>
        <summary><span data-ttu-id="65c6c-350">Copia o intervalo para o intervalo especificado ou na área de transferência.</span><span class="sxs-lookup"><span data-stu-id="65c6c-350">Copies the range to the specified range or to the Clipboard.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyFromRecordset">
      <MemberSignature Language="C#" Value="public int CopyFromRecordset (object Data, object MaxRows, object MaxColumns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CopyFromRecordset([in]object Data, [in]object MaxRows, [in]object MaxColumns) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.CopyFromRecordset(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyFromRecordset (Data As Object, Optional MaxRows As Object, Optional MaxColumns As Object) As Integer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1152)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Data" Type="System.Object" />
        <Parameter Name="MaxRows" Type="System.Object" />
        <Parameter Name="MaxColumns" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Data"><span data-ttu-id="65c6c-351">Objeto <b>Required</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-351">Required <b>Object</b>.</span></span> <span data-ttu-id="65c6c-352">O objeto <b>Recordset</b> a ser copiado no intervalo.</span><span class="sxs-lookup"><span data-stu-id="65c6c-352">The <b>Recordset</b> object to copy into the range.</span></span></param>
        <param name="MaxRows"><span data-ttu-id="65c6c-353">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-353">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-354">O número máximo de registros a serem copiados na planilha.</span><span class="sxs-lookup"><span data-stu-id="65c6c-354">The maximum number of records to copy onto the worksheet.</span></span> <span data-ttu-id="65c6c-355">Se esse argumento for omitido, todos os registros do objeto <b>Recordset</b> serão copiados.</span><span class="sxs-lookup"><span data-stu-id="65c6c-355">If this argument is omitted, all the records in the <b>Recordset</b> object are copied.</span></span></param>
        <param name="MaxColumns"><span data-ttu-id="65c6c-356">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-356">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-357">O número máximo de campos a serem copiados para a planilha.</span><span class="sxs-lookup"><span data-stu-id="65c6c-357">The maximum number of fields to copy onto the worksheet.</span></span> <span data-ttu-id="65c6c-358">Se esse argumento for omitido, todos os campos do objeto <b>Recordset</b> serão copiados.</span><span class="sxs-lookup"><span data-stu-id="65c6c-358">If this argument is omitted, all the fields in the <b>Recordset</b> object are copied.</span></span></param>
        <summary><span data-ttu-id="65c6c-359">Copia o conteúdo de um objeto <b>Recordset</b> da ADO ou o DAO em uma planilha, começando no canto superior esquerdo do intervalo especificado.</span><span class="sxs-lookup"><span data-stu-id="65c6c-359">Copies the contents of an ADO or DAO <b>Recordset</b> object onto a worksheet, beginning at the upper-left corner of the specified range.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="65c6c-360">Se o objeto <b>Recordset</b> tiver campos contendo objetos OLE, esse método falhará.</span><span class="sxs-lookup"><span data-stu-id="65c6c-360">If the <b>Recordset</b> object contains fields with OLE objects in them, this method fails.</span></span></para>
          <para><span data-ttu-id="65c6c-361">A cópia começa na linha atual do objeto <b>Recordset</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-361">Copying begins at the current row of the <b>Recordset</b> object.</span></span> <span data-ttu-id="65c6c-362">Após a conclusão da cópia, a propriedade <b>EOF</b> do objeto <b>Recordset</b> será <b>True</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-362">After copying is completed, the <b>EOF</b> property of the <b>Recordset</b> object is <b>True</b>.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyPicture">
      <MemberSignature Language="C#" Value="public object CopyPicture (Microsoft.Office.Interop.Excel.XlPictureAppearance Appearance = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlScreen, Microsoft.Office.Interop.Excel.XlCopyPictureFormat Format = Microsoft.Office.Interop.Excel.XlCopyPictureFormat.xlPicture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CopyPicture([in]valuetype Microsoft.Office.Interop.Excel.XlPictureAppearance Appearance, [in]valuetype Microsoft.Office.Interop.Excel.XlCopyPictureFormat Format) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyPicture (Optional Appearance As XlPictureAppearance = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlScreen, Optional Format As XlCopyPictureFormat = Microsoft.Office.Interop.Excel.XlCopyPictureFormat.xlPicture) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(213)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Appearance" Type="Microsoft.Office.Interop.Excel.XlPictureAppearance" />
        <Parameter Name="Format" Type="Microsoft.Office.Interop.Excel.XlCopyPictureFormat" />
      </Parameters>
      <Docs>
        <param name="Appearance"><span data-ttu-id="65c6c-363">Opcional <see cref="T:Microsoft.Office.Interop.Excel.XlPictureAppearance" /> .</span><span class="sxs-lookup"><span data-stu-id="65c6c-363">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlPictureAppearance" />.</span></span> <span data-ttu-id="65c6c-364">Especifica como a imagem deve ser copiada.</span><span class="sxs-lookup"><span data-stu-id="65c6c-364">Specifies how the picture should be copied.</span></span> <span data-ttu-id="65c6c-365">Pode ser uma das seguintes constantes <b>XlCopyPictureFormat:</b> <b>xlBitmap</b><b>xlPicture</b><paramref name="default" /></span><span class="sxs-lookup"><span data-stu-id="65c6c-365">Can be one of the following <b>XlCopyPictureFormat</b> constants:<b>xlBitmap</b><b>xlPicture</b><paramref name="default" /></span></span></param>
        <param name="Format"><span data-ttu-id="65c6c-366">Opcional <see cref="T:Microsoft.Office.Interop.Excel.XlCopyPictureFormat" /> .</span><span class="sxs-lookup"><span data-stu-id="65c6c-366">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlCopyPictureFormat" />.</span></span> <span data-ttu-id="65c6c-367">O formato da imagem.</span><span class="sxs-lookup"><span data-stu-id="65c6c-367">The format of the picture.</span></span> <span data-ttu-id="65c6c-368">Pode ser uma das seguintes constantes <b>XlPictureAppearance:</b> <b>xlPrinter</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-368">Can be one of the following <b>XlPictureAppearance</b> constants:<b>xlPrinter</b>.</span></span> <span data-ttu-id="65c6c-369">A imagem é copiada como ficará quando for impressa. <b>xlScreen</b> <paramref name="default" /> .</span><span class="sxs-lookup"><span data-stu-id="65c6c-369">The picture is copied as it will look when it's printed.<b>xlScreen</b><paramref name="default" />.</span></span> <span data-ttu-id="65c6c-370">A imagem é copiada para se parecer ao máximo com sua exibição na tela</span><span class="sxs-lookup"><span data-stu-id="65c6c-370">The picture is copied to resemble its display on the screen as closely as possible.</span></span></param>
        <summary><span data-ttu-id="65c6c-371">Copia o objeto selecionado para a Área de Transferência como uma imagem.</span><span class="sxs-lookup"><span data-stu-id="65c6c-371">Copies the selected object to the Clipboard as a picture.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65c6c-372">Retorna o número de objetos na coleção.</span><span class="sxs-lookup"><span data-stu-id="65c6c-372">Returns the number of objects in the collection.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CountLarge">
      <MemberSignature Language="C#" Value="public object CountLarge { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CountLarge" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.CountLarge" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CountLarge As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CountLarge { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2499)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2499)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65c6c-373">Conta o maior valor em um determinado Intervalo de valores.</span><span class="sxs-lookup"><span data-stu-id="65c6c-373">Counts the largest value in a given Range of values.</span></span> <span data-ttu-id="65c6c-374">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="65c6c-374">Read-only.</span></span></summary>
        <value><span data-ttu-id="65c6c-375"><b>Object</b></span><span class="sxs-lookup"><span data-stu-id="65c6c-375"><b>Object</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateNames">
      <MemberSignature Language="C#" Value="public object CreateNames (object Top, object Left, object Bottom, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateNames([in]object Top, [in]object Left, [in]object Bottom, [in]object Right) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.CreateNames(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateNames (Optional Top As Object, Optional Left As Object, Optional Bottom As Object, Optional Right As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(457)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Top" Type="System.Object" />
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Bottom" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Top"><span data-ttu-id="65c6c-376">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-376">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-377"><b>True</b> para criar nomes usando rótulos na linha superior.</span><span class="sxs-lookup"><span data-stu-id="65c6c-377"><b>True</b> to create names by using labels in the top row.</span></span> <span data-ttu-id="65c6c-378">O valor padrão é <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-378">The default value is <b>False</b>.</span></span></param>
        <param name="Left"><span data-ttu-id="65c6c-379">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-379">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-380"><b>True</b> para criar nomes usando rótulos na coluna esquerda.</span><span class="sxs-lookup"><span data-stu-id="65c6c-380"><b>True</b> to create names by using labels in the left column.</span></span> <span data-ttu-id="65c6c-381">O valor padrão é <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-381">The default value is <b>False</b>.</span></span></param>
        <param name="Bottom"><span data-ttu-id="65c6c-382">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-382">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-383"><b>True</b> para criar nomes usando rótulos na linha inferior.</span><span class="sxs-lookup"><span data-stu-id="65c6c-383"><b>True</b> to create names by using labels in the bottom row.</span></span> <span data-ttu-id="65c6c-384">O valor padrão é <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-384">The default value is <b>False</b>.</span></span></param>
        <param name="Right"><span data-ttu-id="65c6c-385">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-385">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-386"><b>True</b> para criar nomes usando rótulos na coluna direita.</span><span class="sxs-lookup"><span data-stu-id="65c6c-386"><b>True</b> to create names by using labels in the right column.</span></span> <span data-ttu-id="65c6c-387">O valor padrão é <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-387">The default value is <b>False</b>.</span></span></param>
        <summary><span data-ttu-id="65c6c-388">Cria nomes no intervalo especificado, com base nos rótulos de texto da planilha.</span><span class="sxs-lookup"><span data-stu-id="65c6c-388">Creates names in the specified range, based on text labels in the sheet.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="65c6c-389">Se você não especificar um dos rótulos de texto, ou o Microsoft Excel adivinhará o local dos rótulos de texto, com base na forma do <paramref name="Top" /> <paramref name="Left" /> intervalo <paramref name="Bottom" /> <paramref name="Right" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="65c6c-389">If you don’t specify one of <paramref name="Top" />, <paramref name="Left" />, <paramref name="Bottom" />, or <paramref name="Right" />, Microsoft Excel guesses the location of the text labels, based on the shape of the specified range.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePublisher">
      <MemberSignature Language="C#" Value="public object CreatePublisher (object Edition, Microsoft.Office.Interop.Excel.XlPictureAppearance Appearance = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlScreen, object ContainsPICT, object ContainsBIFF, object ContainsRTF, object ContainsVALU);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreatePublisher([in]object Edition, [in]valuetype Microsoft.Office.Interop.Excel.XlPictureAppearance Appearance, [in]object ContainsPICT, [in]object ContainsBIFF, [in]object ContainsRTF, [in]object ContainsVALU) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.CreatePublisher(System.Object,Microsoft.Office.Interop.Excel.XlPictureAppearance,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreatePublisher (Optional Edition As Object, Optional Appearance As XlPictureAppearance = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlScreen, Optional ContainsPICT As Object, Optional ContainsBIFF As Object, Optional ContainsRTF As Object, Optional ContainsVALU As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(458)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Edition" Type="System.Object" />
        <Parameter Name="Appearance" Type="Microsoft.Office.Interop.Excel.XlPictureAppearance" />
        <Parameter Name="ContainsPICT" Type="System.Object" />
        <Parameter Name="ContainsBIFF" Type="System.Object" />
        <Parameter Name="ContainsRTF" Type="System.Object" />
        <Parameter Name="ContainsVALU" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Edition"><span data-ttu-id="65c6c-390">This parameter is for Macintosh only and should not be used.</span><span class="sxs-lookup"><span data-stu-id="65c6c-390">This parameter is for Macintosh only and should not be used.</span></span></param>
        <param name="Appearance"><span data-ttu-id="65c6c-391">This parameter is for Macintosh only and should not be used.</span><span class="sxs-lookup"><span data-stu-id="65c6c-391">This parameter is for Macintosh only and should not be used.</span></span></param>
        <param name="ContainsPICT"><span data-ttu-id="65c6c-392">This parameter is for Macintosh only and should not be used.</span><span class="sxs-lookup"><span data-stu-id="65c6c-392">This parameter is for Macintosh only and should not be used.</span></span></param>
        <param name="ContainsBIFF"><span data-ttu-id="65c6c-393">This parameter is for Macintosh only and should not be used.</span><span class="sxs-lookup"><span data-stu-id="65c6c-393">This parameter is for Macintosh only and should not be used.</span></span></param>
        <param name="ContainsRTF"><span data-ttu-id="65c6c-394">This parameter is for Macintosh only and should not be used.</span><span class="sxs-lookup"><span data-stu-id="65c6c-394">This parameter is for Macintosh only and should not be used.</span></span></param>
        <param name="ContainsVALU"><span data-ttu-id="65c6c-395">This parameter is for Macintosh only and should not be used.</span><span class="sxs-lookup"><span data-stu-id="65c6c-395">This parameter is for Macintosh only and should not be used.</span></span></param>
        <summary><span data-ttu-id="65c6c-396">Você solicitou ajuda sobre uma palavra-chave usada somente no Macintosh.</span><span class="sxs-lookup"><span data-stu-id="65c6c-396">You have requested Help for a keyword used only on the Macintosh.</span></span> <span data-ttu-id="65c6c-397">Para obter informações sobre essa palavra-chave, consulte a Ajuda de referência de idioma fornecida no Microsoft Office Macintosh Edition.</span><span class="sxs-lookup"><span data-stu-id="65c6c-397">For information about this keyword, consult the language reference Help included with Microsoft Office Macintosh Edition.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65c6c-398">Retorna um inteiro de 32 bits que indica o aplicativo no qual esse objeto foi criado.</span><span class="sxs-lookup"><span data-stu-id="65c6c-398">Returns a 32-bit integer that indicates the application in which this object was created.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="65c6c-399">Se o objeto especificado foi criado no Microsoft Excel, essa propriedade retorna a cadeia de caracteres XCEL, que é equivalente ao número hexadecimal 5843454C.</span><span class="sxs-lookup"><span data-stu-id="65c6c-399">If the specified object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span></span></para>
          <para><span data-ttu-id="65c6c-400">A propriedade <b>Creator</b> foi projetada para ser usada no Microsoft Excel para Macintosh, onde cada aplicativo possui um código de criador de quatro caracteres.</span><span class="sxs-lookup"><span data-stu-id="65c6c-400">The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span></span> <span data-ttu-id="65c6c-401">Por exemplo, o Microsoft Excel possui o código de criador XCEL.</span><span class="sxs-lookup"><span data-stu-id="65c6c-401">For example, Microsoft Excel has the creator code XCEL.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentArray">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range CurrentArray { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range CurrentArray" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.CurrentArray" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentArray As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ CurrentArray { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(501)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(501)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65c6c-402">Se a célula especificada for parte de uma matriz, retornará um <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objeto que representa toda a matriz.</span><span class="sxs-lookup"><span data-stu-id="65c6c-402">If the specified cell is part of an array, returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the entire array.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentRegion">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range CurrentRegion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range CurrentRegion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.CurrentRegion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentRegion As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ CurrentRegion { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(243)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(243)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65c6c-403">Retorna um <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objeto que representa a região atual.</span><span class="sxs-lookup"><span data-stu-id="65c6c-403">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the current region.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="65c6c-404">A região atual é um intervalo limitado por qualquer combinação de linhas e de colunas em branco.</span><span class="sxs-lookup"><span data-stu-id="65c6c-404">The current region is a range bounded by any combination of blank rows and blank columns.</span></span></para>
          <para><span data-ttu-id="65c6c-405">Essa propriedade é útil para muitas operações que expandem automaticamente a seleção para incluir toda a região atual, como o <see cref="M:Microsoft.Office.Interop.Excel.Range.AutoFormat(Microsoft.Office.Interop.Excel.XlRangeAutoFormat,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> método.</span><span class="sxs-lookup"><span data-stu-id="65c6c-405">This property is useful for many operations that automatically expand the selection to include the entire current region, such as the <see cref="M:Microsoft.Office.Interop.Excel.Range.AutoFormat(Microsoft.Office.Interop.Excel.XlRangeAutoFormat,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method.</span></span></para>
          <para><span data-ttu-id="65c6c-406">Esta propriedade não pode ser usada em uma planilha protegida.</span><span class="sxs-lookup"><span data-stu-id="65c6c-406">This property cannot be used on a protected worksheet.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Cut">
      <MemberSignature Language="C#" Value="public object Cut (object Destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Cut([in]object Destination) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Cut(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Cut (Optional Destination As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(565)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Destination" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Destination"><span data-ttu-id="65c6c-407">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-407">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-408">O intervalo onde o objeto deve ser colado.</span><span class="sxs-lookup"><span data-stu-id="65c6c-408">The range where the object should be pasted.</span></span> <span data-ttu-id="65c6c-409">Se este argumento for omitido, o objeto será recortado para a Área de Transferência.</span><span class="sxs-lookup"><span data-stu-id="65c6c-409">If this argument is omitted, the object is cut to the Clipboard.</span></span></param>
        <summary><span data-ttu-id="65c6c-410">Recorta o objeto para a Área de Transferência ou o cola em um local especificado.</span><span class="sxs-lookup"><span data-stu-id="65c6c-410">Cuts the object to the Clipboard or pastes it into a specified destination.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="65c6c-411">O intervalo recortado precisa ser constituído de células adjacentes.</span><span class="sxs-lookup"><span data-stu-id="65c6c-411">The cut range must be made up of adjacent cells.</span></span></para>
          <para><span data-ttu-id="65c6c-412">Somente gráficos incorporados podem ser recortados.</span><span class="sxs-lookup"><span data-stu-id="65c6c-412">Only embedded charts can be cut.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DataSeries">
      <MemberSignature Language="C#" Value="public object DataSeries (object Rowcol, Microsoft.Office.Interop.Excel.XlDataSeriesType Type = Microsoft.Office.Interop.Excel.XlDataSeriesType.xlDataSeriesLinear, Microsoft.Office.Interop.Excel.XlDataSeriesDate Date = Microsoft.Office.Interop.Excel.XlDataSeriesDate.xlDay, object Step, object Stop, object Trend);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object DataSeries([in]object Rowcol, [in]valuetype Microsoft.Office.Interop.Excel.XlDataSeriesType Type, [in]valuetype Microsoft.Office.Interop.Excel.XlDataSeriesDate Date, [in]object Step, [in]object Stop, [in]object Trend) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.DataSeries(System.Object,Microsoft.Office.Interop.Excel.XlDataSeriesType,Microsoft.Office.Interop.Excel.XlDataSeriesDate,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DataSeries (Optional Rowcol As Object, Optional Type As XlDataSeriesType = Microsoft.Office.Interop.Excel.XlDataSeriesType.xlDataSeriesLinear, Optional Date As XlDataSeriesDate = Microsoft.Office.Interop.Excel.XlDataSeriesDate.xlDay, Optional Step As Object, Optional Stop As Object, Optional Trend As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(464)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Rowcol" Type="System.Object" />
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlDataSeriesType" />
        <Parameter Name="Date" Type="Microsoft.Office.Interop.Excel.XlDataSeriesDate" />
        <Parameter Name="Step" Type="System.Object" />
        <Parameter Name="Stop" Type="System.Object" />
        <Parameter Name="Trend" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Rowcol"><span data-ttu-id="65c6c-413">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-413">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-414">Pode ser a constante <b>xlRows</b> ou <b>xlColumns</b> para que a série de dados seja inserida nas linhas ou nas colunas, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="65c6c-414">Can be the <b>xlRows</b> or <b>xlColumns</b> constant to have the data series entered in rows or columns, respectively.</span></span> <span data-ttu-id="65c6c-415">Se esse argumento for omitido, o tamanho e a forma do intervalo serão usados.</span><span class="sxs-lookup"><span data-stu-id="65c6c-415">If this argument is omitted, the size and shape of the range is used.</span></span></param>
        <param name="Type"><span data-ttu-id="65c6c-416">Opcional <see cref="T:Microsoft.Office.Interop.Excel.XlDataSeriesType" /> .</span><span class="sxs-lookup"><span data-stu-id="65c6c-416">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlDataSeriesType" />.</span></span> <span data-ttu-id="65c6c-417">Pode ser uma das seguintes constantes <b>XlDataSeriesType:</b> <b>xlAutoFill</b><b>xlDataSeriesLinear</b> <paramref name="default" /> <b>xlChron</b><b>xlGrowth</b></span><span class="sxs-lookup"><span data-stu-id="65c6c-417">Can be one of the following <b>XlDataSeriesType</b> constants:<b>xlAutoFill</b><b>xlDataSeriesLinear</b><paramref name="default" /><b>xlChronological</b><b>xlGrowth</b></span></span></param>
        <param name="Date"><span data-ttu-id="65c6c-418">Opcional <see cref="T:Microsoft.Office.Interop.Excel.XlDataSeriesDate" /> .</span><span class="sxs-lookup"><span data-stu-id="65c6c-418">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlDataSeriesDate" />.</span></span> <span data-ttu-id="65c6c-419">Se o argumento Type for <b>xlChron digitado,</b>o <b>argumento Date</b> indicará a unidade de data da etapa.</span><span class="sxs-lookup"><span data-stu-id="65c6c-419">If the Type argument is <b>xlChronological</b>, the <b>Date</b> argument indicates the step date unit.</span></span> <span data-ttu-id="65c6c-420">Pode ser uma das seguintes constantes <b>XlDataSeriesDate:</b> <b>xlDay</b> <paramref name="default" /> <b>xlWeekday</b><b>xlMonth</b><b>xlYear</b></span><span class="sxs-lookup"><span data-stu-id="65c6c-420">Can be one of the following <b>XlDataSeriesDate</b> constants:<b>xlDay</b><paramref name="default" /><b>xlWeekday</b><b>xlMonth</b><b>xlYear</b></span></span></param>
        <param name="Step"><span data-ttu-id="65c6c-421">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-421">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-422">O valor de passo para a série.</span><span class="sxs-lookup"><span data-stu-id="65c6c-422">The step value for the series.</span></span> <span data-ttu-id="65c6c-423">O valor padrão é 1.</span><span class="sxs-lookup"><span data-stu-id="65c6c-423">The default value is 1.</span></span></param>
        <param name="Stop"><span data-ttu-id="65c6c-424">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-424">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-425">O valor de parada para a série.</span><span class="sxs-lookup"><span data-stu-id="65c6c-425">The stop value for the series.</span></span> <span data-ttu-id="65c6c-426">Se este argumento for omitido, o Microsoft Excel preencherá até o fim do intervalo.</span><span class="sxs-lookup"><span data-stu-id="65c6c-426">If this argument is omitted, Microsoft Excel fills to the end of the range.</span></span></param>
        <param name="Trend"><span data-ttu-id="65c6c-427">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-427">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-428"><b>True</b> para criar uma tendência linear ou tendência de crescimento; <b>False</b> para criar uma série de dados padrão.</span><span class="sxs-lookup"><span data-stu-id="65c6c-428"><b>True</b> to create a linear trend or growth trend; <b>False</b> to create a standard data series.</span></span> <span data-ttu-id="65c6c-429">O valor padrão é <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-429">The default value is <b>False</b>.</span></span></param>
        <summary><span data-ttu-id="65c6c-430">Cria uma série de dados no intervalo especificado.</span><span class="sxs-lookup"><span data-stu-id="65c6c-430">Creates a data series in the specified range.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public object Delete (object Shift);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Delete([in]object Shift) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Delete(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Delete (Optional Shift As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(117)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Shift" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Shift"><span data-ttu-id="65c6c-431">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-431">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-432">Especifica como deslocar células para substituir as células excluídas.</span><span class="sxs-lookup"><span data-stu-id="65c6c-432">Specifies how to shift cells to replace deleted cells.</span></span> <span data-ttu-id="65c6c-433">Pode ser uma das seguintes <see cref="T:Microsoft.Office.Interop.Excel.XlDeleteShiftDirection" /> constantes: <b>xlShiftToLeft</b> ou <b>xlShiftUp</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-433">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlDeleteShiftDirection" /> constants: <b>xlShiftToLeft</b> or <b>xlShiftUp</b>.</span></span> <span data-ttu-id="65c6c-434">Se este argumento for omitido, o Microsoft Excel decidirá com base na forma do intervalo.</span><span class="sxs-lookup"><span data-stu-id="65c6c-434">If this argument is omitted, Microsoft Excel decides based on the shape of the range.</span></span></param>
        <summary><span data-ttu-id="65c6c-435">Exclui o objeto.</span><span class="sxs-lookup"><span data-stu-id="65c6c-435">Deletes the object.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dependents">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Dependents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Dependents" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Dependents" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Dependents As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Dependents { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(543)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(543)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65c6c-436">Retorna um <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objeto que representa o intervalo que contém todos os dependentes de uma célula.</span><span class="sxs-lookup"><span data-stu-id="65c6c-436">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the range containing all the dependents of a cell.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="65c6c-437">Isso pode ser uma seleção múltipla (uma união de objetos <b>Range</b>) se houver mais de um dependente.</span><span class="sxs-lookup"><span data-stu-id="65c6c-437">This can be a multiple selection (a union of <b>Range</b> objects) if there’s more than one dependent.</span></span></para>
          <para><span data-ttu-id="65c6c-438">A propriedade <b>Dependents</b> só funciona na planilha ativa e não pode rastrear referências remotas.</span><span class="sxs-lookup"><span data-stu-id="65c6c-438">The <b>Dependents</b> property only works on the active sheet and can not trace remote references.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DialogBox">
      <MemberSignature Language="C#" Value="public object DialogBox ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object DialogBox() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.DialogBox" />
      <MemberSignature Language="VB.NET" Value="Public Function DialogBox () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ DialogBox();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(245)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="65c6c-439">Exibe uma caixa de diálogo definida por uma tabela de definição de caixa de diálogo em uma folha de macro do Microsoft Excel 4.0.</span><span class="sxs-lookup"><span data-stu-id="65c6c-439">Displays a dialog box defined by a dialog box definition table on a Microsoft Excel 4.0 macro sheet.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="65c6c-440">Este método retorna o número do controle escolhido ou retorna <b>False</b> se o usuário clicar no botão Cancelar.</span><span class="sxs-lookup"><span data-stu-id="65c6c-440">This method returns the number of the chosen control, or returns <b>False</b> if the user clicks the Cancel button.</span></span></para>
          <para><span data-ttu-id="65c6c-441">O objeto retornado deve se referir a uma tabela de definição de caixa de diálogo em uma folha de macro do <see cref="T:Microsoft.Office.Interop.Excel.Range" /> Microsoft Excel 4.0.</span><span class="sxs-lookup"><span data-stu-id="65c6c-441">The returned <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object must refer to a dialog box definition table on a Microsoft Excel 4.0 macro sheet.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DirectDependents">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range DirectDependents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range DirectDependents" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.DirectDependents" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DirectDependents As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ DirectDependents { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(545)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(545)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65c6c-442">Retorna um <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objeto que representa o intervalo que contém todos os dependentes diretos de uma célula.</span><span class="sxs-lookup"><span data-stu-id="65c6c-442">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the range containing all the direct dependents of a cell.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="65c6c-443">Isso pode ser uma seleção múltipla (uma união de objetos <b>Range</b>) se houver mais de um dependente.</span><span class="sxs-lookup"><span data-stu-id="65c6c-443">This can be a multiple selection (a union of <b>Range</b> objects) if there’s more than one dependent.</span></span></para>
          <para><span data-ttu-id="65c6c-444">A propriedade <b>Direct Dependents</b> só funciona na planilha ativa e não pode rastrear referências remotas.</span><span class="sxs-lookup"><span data-stu-id="65c6c-444">The <b>Direct Dependents</b> property only works on the active sheet and can not trace remote references.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DirectPrecedents">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range DirectPrecedents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range DirectPrecedents" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.DirectPrecedents" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DirectPrecedents As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ DirectPrecedents { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(546)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(546)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65c6c-445">Retorna um <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objeto que representa o intervalo que contém todos os precedentes diretos de uma célula.</span><span class="sxs-lookup"><span data-stu-id="65c6c-445">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the range containing all the direct precedents of a cell.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="65c6c-446">A propriedade <b>DirectPrecedents</b> só funciona na planilha ativa e não pode rastrear referências remotas.</span><span class="sxs-lookup"><span data-stu-id="65c6c-446">The <b>DirectPrecedents</b> property only works on the active sheet and can not trace remote references.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Dirty">
      <MemberSignature Language="C#" Value="public void Dirty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dirty() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Dirty" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dirty ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Dirty();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2014)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="65c6c-447">Designa um intervalo a ser recalculado quando o próximo recálculo ocorrer.</span><span class="sxs-lookup"><span data-stu-id="65c6c-447">Designates a range to be recalculated when the next recalculation occurs.</span></span></summary>
        <remarks><para><span data-ttu-id="65c6c-448">O método força o intervalo especificado a ser recalculado, para células que o Microsoft Excel entende como precisando <see cref="M:Microsoft.Office.Interop.Excel.Range.Calculate" /> de recálculo.</span><span class="sxs-lookup"><span data-stu-id="65c6c-448">The <see cref="M:Microsoft.Office.Interop.Excel.Range.Calculate" /> method forces the specified range to be recalculated, for cells that Microsoft Excel understands as needing recalculation.</span></span></para>
          <para><span data-ttu-id="65c6c-449">Se o aplicativo estiver no modo de cálculo manual, o uso do método instrui o Excel a identificar a célula especificada a <see cref="M:Microsoft.Office.Interop.Excel.Range.Dirty" /> ser recalculada.</span><span class="sxs-lookup"><span data-stu-id="65c6c-449">If the application is in manual calculation mode, using the <see cref="M:Microsoft.Office.Interop.Excel.Range.Dirty" /> method instructs Excel to identify the specified cell to be recalculated.</span></span> <span data-ttu-id="65c6c-450">Se o aplicativo estiver no modo de cálculo automático, o uso do método <b>Dirty</b> instruirá o Excel a efetuar um recálculo.</span><span class="sxs-lookup"><span data-stu-id="65c6c-450">If the application is in automatic calculation mode, using the <b>Dirty</b> method instructs Excel to perform a recalculation.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DiscardChanges">
      <MemberSignature Language="C#" Value="public void DiscardChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DiscardChanges() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.DiscardChanges" />
      <MemberSignature Language="VB.NET" Value="Public Sub DiscardChanges ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DiscardChanges();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2856)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="65c6c-451">Descarta todas as alterações nas células editadas do intervalo.</span><span class="sxs-lookup"><span data-stu-id="65c6c-451">Discards all changes in the edited cells of the range.</span></span></summary>
        <remarks><para><span data-ttu-id="65c6c-452">Para um intervalo com base em uma fonte de dados OLAP, esse método remove todos os valores e fórmulas inseridos nas células e executa uma operação de atualização de intervalo para recuperar os valores mais recentes da fonte de dados.</span><span class="sxs-lookup"><span data-stu-id="65c6c-452">For a range based on an OLAP data source, this method removes all values and formulas entered in the cells, and then runs an update operation to retrieve the latest values from the data source.</span></span> <span data-ttu-id="65c6c-453">Ele define o valor da fonte de dados como uma referência nula (Nothing no Visual Basic) para todas as células de valor editadas e também executa uma instrução ROLLBACK TRANSACTION no servidor OLAP.</span><span class="sxs-lookup"><span data-stu-id="65c6c-453">It sets the data source value to a null reference (Nothing in Visual Basic) for all value cells that are edited, and also executes a ROLLBACK TRANSACTION statement against the OLAP server.</span></span> <span data-ttu-id="65c6c-454">Para intervalos com base em fontes de dados não OLAP, este método simplesmente limpa todas as células editadas.</span><span class="sxs-lookup"><span data-stu-id="65c6c-454">For ranges based on non-OLAP data sources, this method simply clears all edited cells.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayFormat">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.DisplayFormat DisplayFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.DisplayFormat DisplayFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.DisplayFormat" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DisplayFormat As DisplayFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::DisplayFormat ^ DisplayFormat { Microsoft::Office::Interop::Excel::DisplayFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(666)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(666)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.DisplayFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65c6c-455">Obtém <see cref="T:Microsoft.Office.Interop.Excel.DisplayFormat" /> um objeto que representa as configurações de exibição para o intervalo especificado.</span><span class="sxs-lookup"><span data-stu-id="65c6c-455">Gets a <see cref="T:Microsoft.Office.Interop.Excel.DisplayFormat" /> object that represents the display settings for the specified range.</span></span></summary>
        <value><span data-ttu-id="65c6c-456">Um <see cref="T:Microsoft.Office.Interop.Excel.DisplayFormat" /> objeto que representa as configurações de exibição para o intervalo especificado.</span><span class="sxs-lookup"><span data-stu-id="65c6c-456">A <see cref="T:Microsoft.Office.Interop.Excel.DisplayFormat" /> object that represents the display settings for the specified range.</span></span></value>
        <remarks><para><span data-ttu-id="65c6c-457">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="65c6c-457">Read-only.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="EditionOptions">
      <MemberSignature Language="C#" Value="public object EditionOptions (Microsoft.Office.Interop.Excel.XlEditionType Type, Microsoft.Office.Interop.Excel.XlEditionOptionsOption Option, object Name, object Reference, Microsoft.Office.Interop.Excel.XlPictureAppearance Appearance = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlScreen, Microsoft.Office.Interop.Excel.XlPictureAppearance ChartSize = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlScreen, object Format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object EditionOptions([in]valuetype Microsoft.Office.Interop.Excel.XlEditionType Type, [in]valuetype Microsoft.Office.Interop.Excel.XlEditionOptionsOption Option, [in]object Name, [in]object Reference, [in]valuetype Microsoft.Office.Interop.Excel.XlPictureAppearance Appearance, [in]valuetype Microsoft.Office.Interop.Excel.XlPictureAppearance ChartSize, [in]object Format) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.EditionOptions(Microsoft.Office.Interop.Excel.XlEditionType,Microsoft.Office.Interop.Excel.XlEditionOptionsOption,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlPictureAppearance,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function EditionOptions (Type As XlEditionType, Option As XlEditionOptionsOption, Optional Name As Object, Optional Reference As Object, Optional Appearance As XlPictureAppearance = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlScreen, Optional ChartSize As XlPictureAppearance = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlScreen, Optional Format As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1131)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlEditionType" />
        <Parameter Name="Option" Type="Microsoft.Office.Interop.Excel.XlEditionOptionsOption" />
        <Parameter Name="Name" Type="System.Object" />
        <Parameter Name="Reference" Type="System.Object" />
        <Parameter Name="Appearance" Type="Microsoft.Office.Interop.Excel.XlPictureAppearance" />
        <Parameter Name="ChartSize" Type="Microsoft.Office.Interop.Excel.XlPictureAppearance" />
        <Parameter Name="Format" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type"><span data-ttu-id="65c6c-458">This parameter is for Macintosh only and should not be used.</span><span class="sxs-lookup"><span data-stu-id="65c6c-458">This parameter is for Macintosh only and should not be used.</span></span></param>
        <param name="Option"><span data-ttu-id="65c6c-459">This parameter is for Macintosh only and should not be used.</span><span class="sxs-lookup"><span data-stu-id="65c6c-459">This parameter is for Macintosh only and should not be used.</span></span></param>
        <param name="Name"><span data-ttu-id="65c6c-460">This parameter is for Macintosh only and should not be used.</span><span class="sxs-lookup"><span data-stu-id="65c6c-460">This parameter is for Macintosh only and should not be used.</span></span></param>
        <param name="Reference"><span data-ttu-id="65c6c-461">This parameter is for Macintosh only and should not be used.</span><span class="sxs-lookup"><span data-stu-id="65c6c-461">This parameter is for Macintosh only and should not be used.</span></span></param>
        <param name="Appearance"><span data-ttu-id="65c6c-462">This parameter is for Macintosh only and should not be used.</span><span class="sxs-lookup"><span data-stu-id="65c6c-462">This parameter is for Macintosh only and should not be used.</span></span></param>
        <param name="ChartSize"><span data-ttu-id="65c6c-463">This parameter is for Macintosh only and should not be used.</span><span class="sxs-lookup"><span data-stu-id="65c6c-463">This parameter is for Macintosh only and should not be used.</span></span></param>
        <param name="Format"><span data-ttu-id="65c6c-464">This parameter is for Macintosh only and should not be used.</span><span class="sxs-lookup"><span data-stu-id="65c6c-464">This parameter is for Macintosh only and should not be used.</span></span></param>
        <summary><span data-ttu-id="65c6c-465">Você solicitou ajuda sobre uma palavra-chave usada somente no Macintosh.</span><span class="sxs-lookup"><span data-stu-id="65c6c-465">You have requested Help for a keyword used only on the Macintosh.</span></span> <span data-ttu-id="65c6c-466">Para obter informações sobre essa palavra-chave, consulte a Ajuda de referência de idioma fornecida no Microsoft Office Macintosh Edition.</span><span class="sxs-lookup"><span data-stu-id="65c6c-466">For information about this keyword, consult the language reference Help included with Microsoft Office Macintosh Edition.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="End">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range End[Microsoft.Office.Interop.Excel.XlDirection Direction] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range End(valuetype Microsoft.Office.Interop.Excel.XlDirection)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.End(Microsoft.Office.Interop.Excel.XlDirection)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property End(Direction As XlDirection) As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ End[Microsoft::Office::Interop::Excel::XlDirection] { Microsoft::Office::Interop::Excel::Range ^ get(Microsoft::Office::Interop::Excel::XlDirection Direction); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(500)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(500)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Direction" Type="Microsoft.Office.Interop.Excel.XlDirection" />
      </Parameters>
      <Docs>
        <param name="Direction"><span data-ttu-id="65c6c-467">Obrigatório. <see cref="T:Microsoft.Office.Interop.Excel.XlDirection" /></span><span class="sxs-lookup"><span data-stu-id="65c6c-467">Required <see cref="T:Microsoft.Office.Interop.Excel.XlDirection" />.</span></span> <span data-ttu-id="65c6c-468">Direção na qual deseja mover.</span><span class="sxs-lookup"><span data-stu-id="65c6c-468">The direction in which to move.</span></span></param>
        <summary><span data-ttu-id="65c6c-469">Retorna um <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objeto que representa a célula no final da região que contém o intervalo de origem.</span><span class="sxs-lookup"><span data-stu-id="65c6c-469">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the cell at the end of the region that contains the source range.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="65c6c-470">Equivalente ao pressionar FINAL + SETA PARA CIMA, FINAL + SETA PARA BAIXO, FINAL + SETA PARA ESQUERDA OU FINAL + SETA PARA A DIREITA.</span><span class="sxs-lookup"><span data-stu-id="65c6c-470">Equivalent to pressing END+UP ARROW, END+DOWN ARROW, END+LEFT ARROW, or END+RIGHT ARROW.</span></span> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="EntireColumn">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range EntireColumn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range EntireColumn" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.EntireColumn" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EntireColumn As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ EntireColumn { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(246)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(246)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65c6c-471">Retorna um <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objeto que representa toda a coluna (ou colunas) que contém o intervalo especificado.</span><span class="sxs-lookup"><span data-stu-id="65c6c-471">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the entire column (or columns) that contains the specified range.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EntireRow">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range EntireRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range EntireRow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.EntireRow" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EntireRow As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ EntireRow { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(247)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(247)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65c6c-472">Retorna um <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objeto que representa toda a linha (ou linhas) que contém o intervalo especificado.</span><span class="sxs-lookup"><span data-stu-id="65c6c-472">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the entire row (or rows) that contains the specified range.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Errors">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Errors Errors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Errors Errors" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Errors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Errors As Errors" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Errors ^ Errors { Microsoft::Office::Interop::Excel::Errors ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2015)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2015)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Errors</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65c6c-473">Permite que o usuário acesse as opções de verificação de erros.</span><span class="sxs-lookup"><span data-stu-id="65c6c-473">Allows the user to access error checking options.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="65c6c-474">Fazer referência <see cref="T:Microsoft.Office.Interop.Excel.Errors" /> ao objeto para exibir uma lista de valores de índice associados a opções de verificação de erros.</span><span class="sxs-lookup"><span data-stu-id="65c6c-474">Reference the <see cref="T:Microsoft.Office.Interop.Excel.Errors" /> object to view a list of index values associated with error checking options.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportAsFixedFormat">
      <MemberSignature Language="C#" Value="public void ExportAsFixedFormat (Microsoft.Office.Interop.Excel.XlFixedFormatType Type, object Filename, object Quality, object IncludeDocProperties, object IgnorePrintAreas, object From, object To, object OpenAfterPublish, object FixedFormatExtClassPtr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExportAsFixedFormat([in]valuetype Microsoft.Office.Interop.Excel.XlFixedFormatType Type, [in]object Filename, [in]object Quality, [in]object IncludeDocProperties, [in]object IgnorePrintAreas, [in]object From, [in]object To, [in]object OpenAfterPublish, [in]object FixedFormatExtClassPtr) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ExportAsFixedFormat(Microsoft.Office.Interop.Excel.XlFixedFormatType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExportAsFixedFormat (Type As XlFixedFormatType, Optional Filename As Object, Optional Quality As Object, Optional IncludeDocProperties As Object, Optional IgnorePrintAreas As Object, Optional From As Object, Optional To As Object, Optional OpenAfterPublish As Object, Optional FixedFormatExtClassPtr As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2493)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlFixedFormatType" />
        <Parameter Name="Filename" Type="System.Object" />
        <Parameter Name="Quality" Type="System.Object" />
        <Parameter Name="IncludeDocProperties" Type="System.Object" />
        <Parameter Name="IgnorePrintAreas" Type="System.Object" />
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="OpenAfterPublish" Type="System.Object" />
        <Parameter Name="FixedFormatExtClassPtr" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type"><span data-ttu-id="65c6c-475">Necessário o <see cref="T:Microsoft.Office.Interop.Excel.XlFixedFormatType" /> tipo de formato de arquivo para o qual exportar.</span><span class="sxs-lookup"><span data-stu-id="65c6c-475">Required <see cref="T:Microsoft.Office.Interop.Excel.XlFixedFormatType" /> The type of file format to export to.</span></span></param>
        <param name="Filename"><span data-ttu-id="65c6c-476">Objeto <b>opcional</b> O nome do arquivo a ser salvo.</span><span class="sxs-lookup"><span data-stu-id="65c6c-476">Optional <b>Object</b> The file name of the file to be saved.</span></span> <span data-ttu-id="65c6c-477">Você pode incluir um caminho completo ou short_Excel2007 salvar o arquivo na pasta atual.</span><span class="sxs-lookup"><span data-stu-id="65c6c-477">You can include a full path, or short_Excel2007 saves the file in the current folder.</span></span></param>
        <param name="Quality"><span data-ttu-id="65c6c-478">Objeto <b>opcional</b> normalmente formatado como <see cref="T:Microsoft.Office.Interop.Excel.XlFixedFormatQuality" /> um .</span><span class="sxs-lookup"><span data-stu-id="65c6c-478">Optional <b>Object</b> Typically formatted as a <see cref="T:Microsoft.Office.Interop.Excel.XlFixedFormatQuality" />.</span></span> <span data-ttu-id="65c6c-479">Especifica a qualidade do arquivo publicado.</span><span class="sxs-lookup"><span data-stu-id="65c6c-479">Specifies the quality of the published file.</span></span></param>
        <param name="IncludeDocProperties"><span data-ttu-id="65c6c-480">Objeto <b>opcional</b> definido como <b>True</b> para incluir as propriedades do documento; Caso <b>contrário, False</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-480">Optional <b>Object</b> set to <b>True</b> to include the document properties; otherwise <b>False</b>.</span></span></param>
        <param name="IgnorePrintAreas"><span data-ttu-id="65c6c-481">Objeto <b>opcional</b> definido como <b>True para</b> ignorar quaisquer áreas de impressão definidas durante a publicação; Caso <b>contrário, False</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-481">Optional <b>Object</b> set to <b>True</b> to ignore any print areas set when publishing; otherwise <b>False</b>.</span></span></param>
        <param name="From"><span data-ttu-id="65c6c-482">Objeto <b>opcional</b> O número da página na qual iniciar a publicação.</span><span class="sxs-lookup"><span data-stu-id="65c6c-482">Optional <b>Object</b> The number of the page at which to start publishing.</span></span> <span data-ttu-id="65c6c-483">Se esse argumento for omitido, a publicação começará no início.</span><span class="sxs-lookup"><span data-stu-id="65c6c-483">If this argument is omitted, publishing starts at the beginning.</span></span></param>
        <param name="To"><span data-ttu-id="65c6c-484">Objeto <b>opcional</b> O número da última página a ser publicada.</span><span class="sxs-lookup"><span data-stu-id="65c6c-484">Optional <b>Object</b> The number of the last page to publish.</span></span> <span data-ttu-id="65c6c-485">Se este argumento for omitido, a publicação terminará na última página.</span><span class="sxs-lookup"><span data-stu-id="65c6c-485">If this argument is omitted, publishing ends with the last page.</span></span></param>
        <param name="OpenAfterPublish"><span data-ttu-id="65c6c-486">Objeto <b>opcional</b> definido como <b>True</b> para exibir o arquivo no visualizador após sua publicação; Caso <b>contrário, False</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-486">Optional <b>Object</b> set to <b>True</b> to display the file in the viewer after it is published; otherwise <b>False</b>.</span></span></param>
        <param name="FixedFormatExtClassPtr"><span data-ttu-id="65c6c-487">Ponteiro <b>de</b> objeto opcional para <b>a classe FixedFormatExt.</b></span><span class="sxs-lookup"><span data-stu-id="65c6c-487">Optional <b>Object</b> Pointer to the <b>FixedFormatExt</b> class.</span></span></param>
        <summary><span data-ttu-id="65c6c-488">Exporta para um arquivo do formato especificado.</span><span class="sxs-lookup"><span data-stu-id="65c6c-488">Exports to a file of the specified format.</span></span></summary>
        <remarks><para><span data-ttu-id="65c6c-p192">Esse método também oferece suporte à inicialização de um suplemento para exportar um arquivo para um arquivo de formato fixo. Por exemplo, o Excel realizará a conversão do formato de arquivo, se houver conversores. A conversão é geralmente iniciada pelo usuário.</span><span class="sxs-lookup"><span data-stu-id="65c6c-p192">This method also supports initializing an add-in to export a file to a fixed-format file. For example, Excel will perform file format conversion if the converters are  present. The conversion is usually initiated by the user.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FillDown">
      <MemberSignature Language="C#" Value="public object FillDown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object FillDown() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.FillDown" />
      <MemberSignature Language="VB.NET" Value="Public Function FillDown () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ FillDown();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(248)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="65c6c-492">Preenche desde a célula ou células superiores do intervalo especificado até as inferiores.</span><span class="sxs-lookup"><span data-stu-id="65c6c-492">Fills down from the top cell or cells in the specified range to the bottom of the range.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="65c6c-493">O conteúdo e a formatação da célula ou células da linha superior de um intervalo são copiados para o restante das linhas do intervalo.</span><span class="sxs-lookup"><span data-stu-id="65c6c-493">The contents and formatting of the cell or cells in the top row of a range are copied into the rest of the rows in the range.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FillLeft">
      <MemberSignature Language="C#" Value="public object FillLeft ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object FillLeft() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.FillLeft" />
      <MemberSignature Language="VB.NET" Value="Public Function FillLeft () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ FillLeft();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(249)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="65c6c-494">Preenche à esquerda a partir da célula ou células mais à direita no intervalo especificado.</span><span class="sxs-lookup"><span data-stu-id="65c6c-494">Fills left from the rightmost cell or cells in the specified range.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="65c6c-495">O conteúdo e a formatação da célula ou células da coluna mais à direita de um intervalo são copiados para o restante das colunas do intervalo.</span><span class="sxs-lookup"><span data-stu-id="65c6c-495">The contents and formatting of the cell or cells in the rightmost column of a range are copied into the rest of the columns in the range.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FillRight">
      <MemberSignature Language="C#" Value="public object FillRight ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object FillRight() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.FillRight" />
      <MemberSignature Language="VB.NET" Value="Public Function FillRight () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ FillRight();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(250)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="65c6c-496">Preenche à direita a partir da célula ou células da extrema esquerda no intervalo especificado.</span><span class="sxs-lookup"><span data-stu-id="65c6c-496">Fills right from the leftmost cell or cells in the specified range.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="65c6c-497">O conteúdo e a formatação da célula ou células da coluna da extrema esquerda de um intervalo são copiados para o restante das colunas do intervalo.</span><span class="sxs-lookup"><span data-stu-id="65c6c-497">The contents and formatting of the cell or cells in the leftmost column of a range are copied into the rest of the columns in the range.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FillUp">
      <MemberSignature Language="C#" Value="public object FillUp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object FillUp() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.FillUp" />
      <MemberSignature Language="VB.NET" Value="Public Function FillUp () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ FillUp();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(251)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="65c6c-498">Preenche acima a partir da célula ou células de baixo no intervalo especificado até o topo do intervalo.</span><span class="sxs-lookup"><span data-stu-id="65c6c-498">Fills up from the bottom cell or cells in the specified range to the top of the range.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="65c6c-499">O conteúdo e formatação da célula ou células da linha inferior de um intervalo são copiados para o restante das linhas do intervalo.</span><span class="sxs-lookup"><span data-stu-id="65c6c-499">The contents and formatting of the cell or cells in the bottom row of a range are copied into the rest of the rows in the range.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Find (object What, object After, object LookIn, object LookAt, object SearchOrder, Microsoft.Office.Interop.Excel.XlSearchDirection SearchDirection = Microsoft.Office.Interop.Excel.XlSearchDirection.xlNext, object MatchCase, object MatchByte, object SearchFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Range Find([in]object What, [in]object After, [in]object LookIn, [in]object LookAt, [in]object SearchOrder, [in]valuetype Microsoft.Office.Interop.Excel.XlSearchDirection SearchDirection, [in]object MatchCase, [in]object MatchByte, [in]object SearchFormat) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Find(System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSearchDirection,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Find (What As Object, Optional After As Object, Optional LookIn As Object, Optional LookAt As Object, Optional SearchOrder As Object, Optional SearchDirection As XlSearchDirection = Microsoft.Office.Interop.Excel.XlSearchDirection.xlNext, Optional MatchCase As Object, Optional MatchByte As Object, Optional SearchFormat As Object) As Range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(398)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="What" Type="System.Object" />
        <Parameter Name="After" Type="System.Object" />
        <Parameter Name="LookIn" Type="System.Object" />
        <Parameter Name="LookAt" Type="System.Object" />
        <Parameter Name="SearchOrder" Type="System.Object" />
        <Parameter Name="SearchDirection" Type="Microsoft.Office.Interop.Excel.XlSearchDirection" />
        <Parameter Name="MatchCase" Type="System.Object" />
        <Parameter Name="MatchByte" Type="System.Object" />
        <Parameter Name="SearchFormat" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="What"><span data-ttu-id="65c6c-500">Objeto <b>Required</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-500">Required <b>Object</b>.</span></span> <span data-ttu-id="65c6c-501">A data a ser pesquisada.</span><span class="sxs-lookup"><span data-stu-id="65c6c-501">The data to search for.</span></span> <span data-ttu-id="65c6c-502">Pode ser uma cadeia de caracteres ou qualquer tipo de dados do Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="65c6c-502">Can be a string or any Microsoft Excel data type.</span></span></param>
        <param name="After"><span data-ttu-id="65c6c-503">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-503">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-504">A célula após a qual você deseja que a pesquisa seja iniciada.</span><span class="sxs-lookup"><span data-stu-id="65c6c-504">The cell after which you want the search to begin.</span></span> <span data-ttu-id="65c6c-505">Isso corresponde à posição da célula ativa quando uma pesquisa é feita desde a interface do usuário.</span><span class="sxs-lookup"><span data-stu-id="65c6c-505">This corresponds to the position of the active cell when a search is done from the user interface.</span></span> <span data-ttu-id="65c6c-506">Observe que <b>After</b> precisa ser uma única célula no intervalo.</span><span class="sxs-lookup"><span data-stu-id="65c6c-506">Note that <b>After</b> must be a single cell in the range.</span></span> <span data-ttu-id="65c6c-507">Lembre-se de que a pesquisa inicia essa célula; a célula especificada não será pesquisada até que o método seja retorno <paramref name="after" /> para essa célula.</span><span class="sxs-lookup"><span data-stu-id="65c6c-507">Remember that the search begins <paramref name="after" /> this cell; the specified cell isn’t searched until the method wraps back around to this cell.</span></span> <span data-ttu-id="65c6c-508">Se você não especificar esse argumento, a pesquisa começará depois da célula no canto superior esquerdo do intervalo.</span><span class="sxs-lookup"><span data-stu-id="65c6c-508">If you don’t specify this argument, the search starts after the cell in the upper-left corner of the range.</span></span></param>
        <param name="LookIn"><span data-ttu-id="65c6c-509">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-509">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-510">O tipo de informação.</span><span class="sxs-lookup"><span data-stu-id="65c6c-510">The type of information.</span></span></param>
        <param name="LookAt"><span data-ttu-id="65c6c-511">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-511">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-512">Pode ser uma das seguintes <see cref="T:Microsoft.Office.Interop.Excel.XlLookAt" /> constantes: <b>xlWhole</b> ou <b>xlPart</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-512">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlLookAt" /> constants: <b>xlWhole</b> or <b>xlPart</b>.</span></span></param>
        <param name="SearchOrder"><span data-ttu-id="65c6c-513">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-513">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-514">Pode ser uma das seguintes <see cref="T:Microsoft.Office.Interop.Excel.XlSearchOrder" /> constantes: <b>xlByRows</b> ou <b>xlByColumns</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-514">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlSearchOrder" /> constants: <b>xlByRows</b> or <b>xlByColumns</b>.</span></span></param>
        <param name="SearchDirection"><span data-ttu-id="65c6c-515">Opcional <see cref="T:Microsoft.Office.Interop.Excel.XlSearchDirection" /> .</span><span class="sxs-lookup"><span data-stu-id="65c6c-515">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSearchDirection" />.</span></span> <span data-ttu-id="65c6c-516">A direção da pesquisa.</span><span class="sxs-lookup"><span data-stu-id="65c6c-516">The search direction.</span></span> <span data-ttu-id="65c6c-517">Pode ser uma destas constantes XlSearchDirection:<b>xlNext</b> <paramref name="default" /> <b>xlPrevious</b></span><span class="sxs-lookup"><span data-stu-id="65c6c-517">Can be one of these XlSearchDirection constants:<b>xlNext</b><paramref name="default" /><b>xlPrevious</b></span></span></param>
        <param name="MatchCase"><span data-ttu-id="65c6c-518">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-518">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-519"><b>True</b> para fazer com que a pesquisa passe a diferenciar maiúsculas de minúsculas.</span><span class="sxs-lookup"><span data-stu-id="65c6c-519"><b>True</b> to make the search case sensitive.</span></span> <span data-ttu-id="65c6c-520">O valor padrão é <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-520">The default value is <b>False</b>.</span></span></param>
        <param name="MatchByte"><span data-ttu-id="65c6c-521">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-521">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-522">Usado somente se você tiver selecionado ou instalado suporte a idiomas de byte duplo.</span><span class="sxs-lookup"><span data-stu-id="65c6c-522">Used only if you’ve selected or installed double-byte language support.</span></span> <span data-ttu-id="65c6c-523"><b>True</b> para fazer caracteres de byte duplo corresponderem apenas a caracteres de byte duplo; <b>False</b> para fazer caracteres de byte duplo corresponderem aos seus equivalentes de byte único.</span><span class="sxs-lookup"><span data-stu-id="65c6c-523"><b>True</b> to have double-byte characters match only double-byte characters; <b>False</b> to have double-byte characters match their single-byte equivalents.</span></span></param>
        <param name="SearchFormat"><span data-ttu-id="65c6c-524">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-524">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-525">O formato da pesquisa.</span><span class="sxs-lookup"><span data-stu-id="65c6c-525">The search format.</span></span></param>
        <summary><span data-ttu-id="65c6c-526">Localiza informações específicas em um intervalo e retorna um objeto que representa a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> primeira célula onde essas informações são encontradas.</span><span class="sxs-lookup"><span data-stu-id="65c6c-526">Finds specific information in a range and returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the first cell where that information is found.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="65c6c-527">Esse método retornará <b>Nothing</b> se nenhuma correspondência for encontrada.</span><span class="sxs-lookup"><span data-stu-id="65c6c-527">This method returns <b>Nothing</b> if no match is found.</span></span></para>
          <para><span data-ttu-id="65c6c-528">Esse método não afeta a seleção ou a célula ativa.</span><span class="sxs-lookup"><span data-stu-id="65c6c-528">This method doesn’t affect the selection or the active cell.</span></span></para>
          <para><span data-ttu-id="65c6c-529">As configurações <paramref name="LookIn" /> para , e são <paramref name="LookAt" /> <paramref name="SearchOrder" /> <paramref name="MatchByte" /> salvas sempre que você usa esse método.</span><span class="sxs-lookup"><span data-stu-id="65c6c-529">The settings for <paramref name="LookIn" />, <paramref name="LookAt" />, <paramref name="SearchOrder" />, and <paramref name="MatchByte" /> are saved each time you use this method.</span></span> <span data-ttu-id="65c6c-530">Se você não especificar valores para esses argumentos na próxima vez que chamar o método, os valores salvos serão usados.</span><span class="sxs-lookup"><span data-stu-id="65c6c-530">If you don’t specify values for these arguments the next time you call the method, the saved values are used.</span></span> <span data-ttu-id="65c6c-531">Definir esses argumentos alterará as configurações na caixa de diálogo Find e, ao alterar as configurações na caixa de diálogo Find, os valores salvos que são usados se você omitir os argumentos serão alterados.</span><span class="sxs-lookup"><span data-stu-id="65c6c-531">Setting these arguments changes the settings in the Find dialog box, and changing the settings in the Find dialog box changes the saved values that are used if you omit the arguments.</span></span> <span data-ttu-id="65c6c-532">Para evitar problemas, defina estes argumentos explicitamente sempre que usar este método.</span><span class="sxs-lookup"><span data-stu-id="65c6c-532">To avoid problems, set these arguments explicitly each time you use this method.</span></span></para>
          <para><span data-ttu-id="65c6c-533">Você pode usar os <see cref="M:Microsoft.Office.Interop.Excel.Range.FindNext(System.Object)" /> métodos e os métodos para repetir a <see cref="M:Microsoft.Office.Interop.Excel.Range.FindPrevious(System.Object)" /> pesquisa.</span><span class="sxs-lookup"><span data-stu-id="65c6c-533">You can use the <see cref="M:Microsoft.Office.Interop.Excel.Range.FindNext(System.Object)" /> and <see cref="M:Microsoft.Office.Interop.Excel.Range.FindPrevious(System.Object)" /> methods to repeat the search.</span></span></para>
          <para><span data-ttu-id="65c6c-p203">Quando a pesquisa atingir o final do intervalo de pesquisa especificado, voltará ao início do intervalo. Para parar uma pesquisa quando isso acontecer, salve o endereço da primeira célula encontrada e então teste cada endereço de célula sucessivo encontrado em relação a esse endereço salvo.</span><span class="sxs-lookup"><span data-stu-id="65c6c-p203">When the search reaches the end of the specified search range, it wraps around to the beginning of the range. To stop a search when this wraparound occurs, save the address of the first found cell, and then test each successive found-cell address against this saved address.</span></span></para>
          <para><span data-ttu-id="65c6c-536">Para localizar células que correspondem padrões mais complicados, use uma instrução <b>For Each...Next</b> com o operador <b>Like</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-536">To find cells that match more complicated patterns, use a <b>For Each...Next</b> statement with the <b>Like</b> operator.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FindNext">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range FindNext (object After);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Range FindNext([in]object After) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.FindNext(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindNext (Optional After As Object) As Range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(399)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="After" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="After"><span data-ttu-id="65c6c-537">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-537">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-538">A célula depois da qual você deseja pesquisar.</span><span class="sxs-lookup"><span data-stu-id="65c6c-538">The cell after which you want to search.</span></span> <span data-ttu-id="65c6c-539">Isso corresponde à posição da célula ativa quando uma pesquisa é concluída a partir da interface do usuário.</span><span class="sxs-lookup"><span data-stu-id="65c6c-539">This corresponds to the position of the active cell when a search is done from the user interface.</span></span> <span data-ttu-id="65c6c-540">Observe que <paramref name="After" /> deve ser uma única célula no intervalo.</span><span class="sxs-lookup"><span data-stu-id="65c6c-540">Note that <paramref name="After" /> must be a single cell in the range.</span></span> <span data-ttu-id="65c6c-541">Lembre-se de que a pesquisa inicia essa célula; a célula especificada não será pesquisada até que o método seja retorno <paramref name="after" /> para essa célula.</span><span class="sxs-lookup"><span data-stu-id="65c6c-541">Remember that the search begins <paramref name="after" /> this cell; the specified cell isn’t searched until the method wraps back around to this cell.</span></span> <span data-ttu-id="65c6c-542">Se esse argumento não for especificado, a pesquisa começará depois da célula no canto superior esquerdo do intervalo.</span><span class="sxs-lookup"><span data-stu-id="65c6c-542">If this argument isn’t specified, the search starts after the cell in the upper-left corner of the range.</span></span></param>
        <summary><span data-ttu-id="65c6c-543">Continua uma pesquisa que começou com o <see cref="M:Microsoft.Office.Interop.Excel.Range.Find(System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSearchDirection,System.Object,System.Object,System.Object)" /> método.</span><span class="sxs-lookup"><span data-stu-id="65c6c-543">Continues a search that was begun with the <see cref="M:Microsoft.Office.Interop.Excel.Range.Find(System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSearchDirection,System.Object,System.Object,System.Object)" /> method.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="65c6c-544">Localiza a próxima célula que corresponde às mesmas condições e retorna um <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objeto que representa essa célula.</span><span class="sxs-lookup"><span data-stu-id="65c6c-544">Finds the next cell that matches those same conditions and returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents that cell.</span></span></para>
          <para><span data-ttu-id="65c6c-545">Esse método não afeta a seleção ou a célula ativa.</span><span class="sxs-lookup"><span data-stu-id="65c6c-545">This method doesn’t affect the selection or the active cell.</span></span></para>
          <para><span data-ttu-id="65c6c-p205">Quando a pesquisa atingir o final do intervalo de pesquisa especificado, voltará ao início do intervalo. Para parar uma pesquisa quando isso acontecer, salve o endereço da primeira célula encontrada e então teste cada endereço de célula sucessivo encontrado em relação a esse endereço salvo.</span><span class="sxs-lookup"><span data-stu-id="65c6c-p205">When the search reaches the end of the specified search range, it wraps around to the beginning of the range. To stop a search when this wraparound occurs, save the address of the first found cell, and then test each successive found-cell address against this saved address.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FindPrevious">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range FindPrevious (object After);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Range FindPrevious([in]object After) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.FindPrevious(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindPrevious (Optional After As Object) As Range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(400)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="After" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="After"><span data-ttu-id="65c6c-548">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-548">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-549">A célula antes da qual você deseja pesquisar.</span><span class="sxs-lookup"><span data-stu-id="65c6c-549">The cell before which you want to search.</span></span> <span data-ttu-id="65c6c-550">Corresponde à posição da célula ativa quando uma pesquisa é feita a partir da interface do usuário.</span><span class="sxs-lookup"><span data-stu-id="65c6c-550">This corresponds to the position of the active cell when a search is done from the user interface.</span></span> <span data-ttu-id="65c6c-551">Observe que <paramref name="After" /> deve ser uma única célula no intervalo.</span><span class="sxs-lookup"><span data-stu-id="65c6c-551">Note that <paramref name="After" /> must be a single cell in the range.</span></span> <span data-ttu-id="65c6c-552">Lembre-se de que a pesquisa inicia essa célula; a célula especificada não será pesquisada até que o método seja retorno <paramref name="before" /> para essa célula.</span><span class="sxs-lookup"><span data-stu-id="65c6c-552">Remember that the search begins <paramref name="before" /> this cell; the specified cell isn’t searched until the method wraps back around to this cell.</span></span> <span data-ttu-id="65c6c-553">Se esse argumento não for especificado, a pesquisa começará antes da célula superior esquerda do intervalo.</span><span class="sxs-lookup"><span data-stu-id="65c6c-553">If this argument isn’t specified, the search starts before the upper-left cell in the range.</span></span></param>
        <summary><span data-ttu-id="65c6c-554">Continua uma pesquisa que começou com o <see cref="M:Microsoft.Office.Interop.Excel.Range.Find(System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSearchDirection,System.Object,System.Object,System.Object)" /> método.</span><span class="sxs-lookup"><span data-stu-id="65c6c-554">Continues a search that was begun with the <see cref="M:Microsoft.Office.Interop.Excel.Range.Find(System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSearchDirection,System.Object,System.Object,System.Object)" /> method.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="65c6c-555">Localiza a célula anterior que corresponde às mesmas condições e retorna um <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objeto que representa essa célula.</span><span class="sxs-lookup"><span data-stu-id="65c6c-555">Finds the previous cell that matches those same conditions and returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents that cell.</span></span></para>
          <para><span data-ttu-id="65c6c-556">Esse método não afeta a seleção ou a célula ativa.</span><span class="sxs-lookup"><span data-stu-id="65c6c-556">This method doesn’t affect the selection or the active cell.</span></span></para>
          <para><span data-ttu-id="65c6c-p207">Quando a pesquisa chega ao início do intervalo de pesquisa especificado, ela continua a partir do final do intervalo. Para interromper uma pesquisa quando isso ocorrer, salve o endereço da primeira célula encontrada e compare-o ao endereço de cada célula sucessiva encontrada.</span><span class="sxs-lookup"><span data-stu-id="65c6c-p207">When the search reaches the beginning of the specified search range, it wraps around to the end of the range. To stop a search when this wraparound occurs, save the address of the first found cell, and then test each successive found-cell address against this saved address.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FlashFill">
      <MemberSignature Language="C#" Value="public void FlashFill ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FlashFill() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.FlashFill" />
      <MemberSignature Language="VB.NET" Value="Public Sub FlashFill ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FlashFill();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2996)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="65c6c-559">TRUE indica que o recurso Preenchimento Flash do Excel foi habilitado e ativo.</span><span class="sxs-lookup"><span data-stu-id="65c6c-559">TRUE indicates that the Excel Flash Fill feature has been enabled and active.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Font Font { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Font Font" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Font" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Font As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Font ^ Font { Microsoft::Office::Interop::Excel::Font ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(146)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(146)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65c6c-560">Retorna um <see cref="T:Microsoft.Office.Interop.Excel.Font" /> objeto que representa a fonte do objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="65c6c-560">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Font" /> object that represents the font of the specified object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatConditions">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.FormatConditions FormatConditions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.FormatConditions FormatConditions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.FormatConditions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FormatConditions As FormatConditions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::FormatConditions ^ FormatConditions { Microsoft::Office::Interop::Excel::FormatConditions ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1392)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1392)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.FormatConditions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65c6c-561">Retorna uma <see cref="T:Microsoft.Office.Interop.Excel.FormatConditions" /> coleção que representa todos os formatos condicionais para o intervalo especificado.</span><span class="sxs-lookup"><span data-stu-id="65c6c-561">Returns a <see cref="T:Microsoft.Office.Interop.Excel.FormatConditions" /> collection that represents all the conditional formats for the specified range.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Formula">
      <MemberSignature Language="C#" Value="public object Formula { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Formula" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Formula" />
      <MemberSignature Language="VB.NET" Value="Public Property Formula As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Formula { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(261)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(261)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(261)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65c6c-562">Retorna ou define a fórmula do objeto em notação de estilo A1 e no idioma da macro.</span><span class="sxs-lookup"><span data-stu-id="65c6c-562">Returns or sets the object's formula in A1-style notation and in the language of the macro.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="65c6c-563">Esta propriedade não está disponível para fontes de dados OLAP.</span><span class="sxs-lookup"><span data-stu-id="65c6c-563">This property is not available for OLAP data sources.</span></span></para>
          <para><span data-ttu-id="65c6c-564">Se a célula contiver uma constante, essa propriedade retornará essa constante.</span><span class="sxs-lookup"><span data-stu-id="65c6c-564">If the cell contains a constant, this property returns the constant.</span></span> <span data-ttu-id="65c6c-565">Se a célula estiver vazia, a propriedade <b>Formula</b> retornará uma sequência de caracteres vazia.</span><span class="sxs-lookup"><span data-stu-id="65c6c-565">If the cell is empty, this <b>Formula</b> property returns an empty string.</span></span> <span data-ttu-id="65c6c-566">Se a célula contiver uma fórmula, a propriedade <b>Formula</b> retornará a fórmula como uma sequência de caracteres no mesmo formato exibido na barra de fórmulas (inclusive o sinal de igual).</span><span class="sxs-lookup"><span data-stu-id="65c6c-566">If the cell contains a formula, the <b>Formula</b> property returns the formula as a string in the same format that would be displayed in the formula bar (including the equal sign).</span></span></para>
          <para><span data-ttu-id="65c6c-p209">Quando você define o valor ou a fórmula de uma célula como uma data, o Microsoft Excel verifica se a célula já está formatada com um dos formatos numéricos de data ou hora. Se não estiver, o Microsoft Excel altera o formato numérico para o formato padrão de data abreviada.</span><span class="sxs-lookup"><span data-stu-id="65c6c-p209">If you set the value or formula of a cell to a date, Microsoft Excel checks to see whether that cell is already formatted with one of the date or time number formats. If not, Microsoft Excel changes the number format to the default short date number format.</span></span></para>
          <para><span data-ttu-id="65c6c-569">Se o intervalo for uni ou bidimensional, você poderá definir a fórmula como uma matriz com as mesmas dimensões.</span><span class="sxs-lookup"><span data-stu-id="65c6c-569">If the range is a one- or two-dimensional range, you can set the formula to an array of the same dimensions.</span></span> <span data-ttu-id="65c6c-570">Da mesma forma, você pode colocar a fórmula em uma matriz Básica.</span><span class="sxs-lookup"><span data-stu-id="65c6c-570">Similarly, you can put the formula into a Basic array.</span></span></para>
          <para><span data-ttu-id="65c6c-571">A configuração da fórmula para um intervalo de várias células preenche todas as células do intervalo com a fórmula.</span><span class="sxs-lookup"><span data-stu-id="65c6c-571">Setting the formula for a multiple-cell range fills all cells in the range with the formula.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FormulaArray">
      <MemberSignature Language="C#" Value="public object FormulaArray { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object FormulaArray" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.FormulaArray" />
      <MemberSignature Language="VB.NET" Value="Public Property FormulaArray As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ FormulaArray { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(586)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(586)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(586)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65c6c-572">Retorna ou define a fórmula de matriz de um intervalo.</span><span class="sxs-lookup"><span data-stu-id="65c6c-572">Returns or sets the array formula of a range.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="65c6c-573">Essa propriedade retorna (ou pode ser definida como) uma única fórmula ou uma matriz.</span><span class="sxs-lookup"><span data-stu-id="65c6c-573">This property returns (or can be set to) a single formula or an array.</span></span></para>
          <para><span data-ttu-id="65c6c-574">Se o intervalo especificado não contém uma fórmula de matriz, essa propriedade retorna <b>Null</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-574">If the specified range doesn't contain an array formula, this property returns <b>Null</b>.</span></span></para>
          <para><span data-ttu-id="65c6c-575">Se você usar essa propriedade para inserir uma fórmula de matriz, a fórmula precisará usar o estilo de referência L1C1, e não o estilo de referência A1 (veja o segundo exemplo).</span><span class="sxs-lookup"><span data-stu-id="65c6c-575">If you use this property to enter an array formula, the formula must use the R1C1 reference style, not the A1 reference style (see the second example).</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FormulaHidden">
      <MemberSignature Language="C#" Value="public object FormulaHidden { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object FormulaHidden" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.FormulaHidden" />
      <MemberSignature Language="VB.NET" Value="Public Property FormulaHidden As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ FormulaHidden { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(262)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(262)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(262)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65c6c-576">Determina se a fórmula ficará oculta quando a planilha estiver protegida.</span><span class="sxs-lookup"><span data-stu-id="65c6c-576">Determines if the formula will be hidden when the worksheet is protected.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="65c6c-577">Essa propriedade <b>retornará True</b> se a fórmula ficar oculta quando a planilha estiver protegida.</span><span class="sxs-lookup"><span data-stu-id="65c6c-577">This property returns <b>True</b> if the formula will be hidden when the worksheet is protected.</span></span> <span data-ttu-id="65c6c-578">Ele <b>retornará Null</b> se o intervalo especificado contiver algumas células com <b>FormulaHidden</b> igual a <b>True</b> e algumas células com <b>FormulaHidden</b> igual a <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-578">It returns <b>Null</b> if the specified range contains some cells with <b>FormulaHidden</b> equal to <b>True</b> and some cells with <b>FormulaHidden</b> equal to <b>False</b>.</span></span></para>
          <para><span data-ttu-id="65c6c-579">Não confunda essa propriedade com a <see cref="P:Microsoft.Office.Interop.Excel.Range.Hidden" /> propriedade.</span><span class="sxs-lookup"><span data-stu-id="65c6c-579">Don’t confuse this property with the <see cref="P:Microsoft.Office.Interop.Excel.Range.Hidden" /> property.</span></span> <span data-ttu-id="65c6c-580">A fórmula só ficará oculta se tanto a pasta de trabalho como a planilha estiverem protegidas.</span><span class="sxs-lookup"><span data-stu-id="65c6c-580">The formula will not be hidden if the workbook is protected and the worksheet is not, but only if the worksheet is protected.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FormulaLabel">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlFormulaLabel FormulaLabel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlFormulaLabel FormulaLabel" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.FormulaLabel" />
      <MemberSignature Language="VB.NET" Value="Public Property FormulaLabel As XlFormulaLabel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlFormulaLabel FormulaLabel { Microsoft::Office::Interop::Excel::XlFormulaLabel get(); void set(Microsoft::Office::Interop::Excel::XlFormulaLabel value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1380)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1380)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1380)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlFormulaLabel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65c6c-581">Retorna ou define o tipo de rótulo de fórmula para o intervalo especificado.</span><span class="sxs-lookup"><span data-stu-id="65c6c-581">Returns or sets the formula label type for the specified range.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="65c6c-582">O valor de retorno dessa propriedade pode ser <b>xlNone</b> se o intervalo não contiver rótulos ou uma das seguintes constantes <b>XlFormulaLabel:</b></span><span class="sxs-lookup"><span data-stu-id="65c6c-582">The return value of this property can be <b>xlNone</b> if the range contains no labels, or one of the following <b>XlFormulaLabel</b> constants:</span></span></para>
          <list type="bullet">
            <item>
              <description><span data-ttu-id="65c6c-583">
                <b>xlColumnLabels</b>
              </span><span class="sxs-lookup"><span data-stu-id="65c6c-583">
                <b>xlColumnLabels</b>
              </span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="65c6c-584">
                <b>xlMixedLabels</b>
              </span><span class="sxs-lookup"><span data-stu-id="65c6c-584">
                <b>xlMixedLabels</b>
              </span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="65c6c-585">
                <b>xlNoLabels</b>
              </span><span class="sxs-lookup"><span data-stu-id="65c6c-585">
                <b>xlNoLabels</b>
              </span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="65c6c-586">
                <b>xlRowLabels</b>
              </span><span class="sxs-lookup"><span data-stu-id="65c6c-586">
                <b>xlRowLabels</b>
              </span></span></description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FormulaLocal">
      <MemberSignature Language="C#" Value="public object FormulaLocal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object FormulaLocal" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.FormulaLocal" />
      <MemberSignature Language="VB.NET" Value="Public Property FormulaLocal As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ FormulaLocal { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(263)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(263)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(263)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65c6c-587">Retorna ou define a fórmula para o objeto, usando referências de estilo A1 no idioma do usuário.</span><span class="sxs-lookup"><span data-stu-id="65c6c-587">Returns or sets the formula for the object, using A1-style references in the language of the user.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="65c6c-p213">Se a célula contiver uma constante, esta propriedade retornará essa constante. Se a célula estiver vazia, a propriedade retornará uma sequência de caracteres vazia. Se a célula contiver uma fórmula, a propriedade retornará a fórmula como uma sequência de caracteres, no mesmo formato em que ela seria exibida na barra de fórmulas (inclusive o sinal de igual).</span><span class="sxs-lookup"><span data-stu-id="65c6c-p213">If the cell contains a constant, this property returns that constant. If the cell is empty, the property returns an empty string. If the cell contains a formula, the property returns the formula as a string, in the same format in which it would be displayed in the formula bar (including the equal sign).</span></span></para>
          <para><span data-ttu-id="65c6c-p214">Quando você define o valor ou a fórmula de uma célula como uma data, o Microsoft Excel verifica se essa célula já está formatada com um dos formatos de número de data ou hora. Se não estiver, o formato de número será alterado para o formato de número de data abreviada padrão.</span><span class="sxs-lookup"><span data-stu-id="65c6c-p214">If you set the value or formula of a cell to a date, Microsoft Excel checks to see whether that cell is already formatted with one of the date or time number formats. If not, the number format is changed to the default short date number format.</span></span></para>
          <para><span data-ttu-id="65c6c-593">Se o intervalo for uni ou bidimensional, você poderá definir a fórmula como uma matriz com as mesmas dimensões.</span><span class="sxs-lookup"><span data-stu-id="65c6c-593">If the range is a one- or two-dimensional range, you can set the formula to an array of the same dimensions.</span></span> <span data-ttu-id="65c6c-594">Da mesma forma, você pode colocar a fórmula em uma matriz.</span><span class="sxs-lookup"><span data-stu-id="65c6c-594">Similarly, you can put the formula into an array.</span></span></para>
          <para><span data-ttu-id="65c6c-595">A definição da fórmula de um intervalo de múltiplas células preenche todas as células do intervalo com a fórmula.</span><span class="sxs-lookup"><span data-stu-id="65c6c-595">Setting the formula of a multiple-cell range fills all cells in the range with the formula.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FormulaR1C1">
      <MemberSignature Language="C#" Value="public object FormulaR1C1 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object FormulaR1C1" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.FormulaR1C1" />
      <MemberSignature Language="VB.NET" Value="Public Property FormulaR1C1 As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ FormulaR1C1 { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(264)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(264)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(264)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65c6c-596">Retorna ou define a fórmula para o objeto, usando notação de estilo R1C1 no idioma da macro.</span><span class="sxs-lookup"><span data-stu-id="65c6c-596">Returns or sets the formula for the object, using R1C1-style notation in the language of the macro.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="65c6c-p216">Se a célula contiver uma constante, essa propriedade retornará essa constante. Se a célula estiver vazia, a propriedade retornará uma cadeia de caracteres vazia. Se a célula contiver uma fórmula, a propriedade retornará a fórmula como uma cadeia de caracteres, no mesmo formato em que ela seria exibida na barra de fórmulas (inclusive o sinal de igual).</span><span class="sxs-lookup"><span data-stu-id="65c6c-p216">If the cell contains a constant, this property returns the constant. If the cell is empty, the property returns an empty string. If the cell contains a formula, the property returns the formula as a string, in the same format in which it would be displayed in the formula bar (including the equal sign).</span></span></para>
          <para><span data-ttu-id="65c6c-p217">Quando você define o valor ou a fórmula de uma célula como uma data, o Microsoft Excel verifica se essa célula já está formatada com um dos formatos de número de data ou hora. Se não estiver, o formato de número será alterado para o formato de número de data abreviada padrão.</span><span class="sxs-lookup"><span data-stu-id="65c6c-p217">If you set the value or formula of a cell to a date, Microsoft Excel checks to see whether that cell is already formatted with one of the date or time number formats. If not, the number format is changed to the default short date number format.</span></span></para>
          <para><span data-ttu-id="65c6c-602">Se o intervalo for uni ou bidimensional, você poderá definir a fórmula como uma matriz com as mesmas dimensões.</span><span class="sxs-lookup"><span data-stu-id="65c6c-602">If the range is a one- or two-dimensional range, you can set the formula to an array of the same dimensions.</span></span> <span data-ttu-id="65c6c-603">Da mesma forma, você pode colocar a fórmula em uma matriz.</span><span class="sxs-lookup"><span data-stu-id="65c6c-603">Similarly, you can put the formula into an array.</span></span></para>
          <para><span data-ttu-id="65c6c-604">A definição da fórmula de um intervalo de múltiplas células preenche todas as células do intervalo com a fórmula.</span><span class="sxs-lookup"><span data-stu-id="65c6c-604">Setting the formula of a multiple-cell range fills all cells in the range with the formula.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FormulaR1C1Local">
      <MemberSignature Language="C#" Value="public object FormulaR1C1Local { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object FormulaR1C1Local" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.FormulaR1C1Local" />
      <MemberSignature Language="VB.NET" Value="Public Property FormulaR1C1Local As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ FormulaR1C1Local { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(265)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(265)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(265)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65c6c-605">Retorna ou define a fórmula para o objeto, usando a notação de estilo L1C1 no idioma do usuário.</span><span class="sxs-lookup"><span data-stu-id="65c6c-605">Returns or sets the formula for the object, using R1C1-style notation in the language of the user.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="65c6c-p219">Se a célula contiver uma constante, esta propriedade retornará essa constante. Se a célula estiver vazia, a propriedade retornará uma sequência de caracteres vazia. Se a célula contiver uma fórmula, a propriedade retornará a fórmula como uma sequência de caracteres, no mesmo formato em que ela seria exibida na barra de fórmulas (inclusive o sinal de igual).</span><span class="sxs-lookup"><span data-stu-id="65c6c-p219">If the cell contains a constant, this property returns that constant. If the cell is empty, the property returns an empty string. If the cell contains a formula, the property returns the formula as a string, in the same format in which it would be displayed in the formula bar (including the equal sign).</span></span></para>
          <para><span data-ttu-id="65c6c-p220">Quando você define o valor ou a fórmula de uma célula como uma data, o Microsoft Excel verifica se essa célula já está formatada com um dos formatos de número de data ou hora. Se não estiver, o formato de número será alterado para o formato de número de data abreviada padrão.</span><span class="sxs-lookup"><span data-stu-id="65c6c-p220">If you set the value or formula of a cell to a date, Microsoft Excel checks to see whether that cell is already formatted with one of the date or time number formats. If not, the number format is changed to the default short date number format.</span></span></para>
          <para><span data-ttu-id="65c6c-611">Se o intervalo for uni ou bidimensional, você poderá definir a fórmula como uma matriz com as mesmas dimensões.</span><span class="sxs-lookup"><span data-stu-id="65c6c-611">If the range is a one- or two-dimensional range, you can set the formula to an array of the same dimensions.</span></span> <span data-ttu-id="65c6c-612">Da mesma forma, você pode colocar a fórmula em uma matriz.</span><span class="sxs-lookup"><span data-stu-id="65c6c-612">Similarly, you can put the formula into an array.</span></span></para>
          <para><span data-ttu-id="65c6c-613">A definição da fórmula de um intervalo de múltiplas células preenche todas as células do intervalo com a fórmula.</span><span class="sxs-lookup"><span data-stu-id="65c6c-613">Setting the formula of a multiple-cell range fills all cells in the range with the formula.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FunctionWizard">
      <MemberSignature Language="C#" Value="public object FunctionWizard ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object FunctionWizard() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.FunctionWizard" />
      <MemberSignature Language="VB.NET" Value="Public Function FunctionWizard () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ FunctionWizard();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(571)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="65c6c-614">Inicia o Assistente de função para a célula superior esquerda do intervalo.</span><span class="sxs-lookup"><span data-stu-id="65c6c-614">Starts the Function Wizard for the upper-left cell of the range.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-4)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GoalSeek">
      <MemberSignature Language="C#" Value="public bool GoalSeek (object Goal, Microsoft.Office.Interop.Excel.Range ChangingCell);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GoalSeek([in]object Goal, [in]class Microsoft.Office.Interop.Excel.Range ChangingCell) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.GoalSeek(System.Object,Microsoft.Office.Interop.Excel.Range)" />
      <MemberSignature Language="VB.NET" Value="Public Function GoalSeek (Goal As Object, ChangingCell As Range) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GoalSeek(System::Object ^ Goal, Microsoft::Office::Interop::Excel::Range ^ ChangingCell);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(472)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Goal" Type="System.Object" />
        <Parameter Name="ChangingCell" Type="Microsoft.Office.Interop.Excel.Range" />
      </Parameters>
      <Docs>
        <param name="Goal"><span data-ttu-id="65c6c-615">Objeto <b>Required</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-615">Required <b>Object</b>.</span></span> <span data-ttu-id="65c6c-616">O valor de retorno desejado nessa célula.</span><span class="sxs-lookup"><span data-stu-id="65c6c-616">The value you want returned in this cell.</span></span></param>
        <param name="ChangingCell"><span data-ttu-id="65c6c-617">Obrigatório. <see cref="T:Microsoft.Office.Interop.Excel.Range" /></span><span class="sxs-lookup"><span data-stu-id="65c6c-617">Required <see cref="T:Microsoft.Office.Interop.Excel.Range" />.</span></span> <span data-ttu-id="65c6c-618">Especifica qual célula deve ser alterada para se obter o valor almejado.</span><span class="sxs-lookup"><span data-stu-id="65c6c-618">Specifies which cell should be changed to achieve the target value.</span></span></param>
        <summary><span data-ttu-id="65c6c-619">Calcula os valores necessários para se atingir uma determinada meta.</span><span class="sxs-lookup"><span data-stu-id="65c6c-619">Calculates the values necessary to achieve a specific goal.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="65c6c-620">Se a meta for uma quantidade retornada por uma fórmula, será calculado um valor que, quando fornecido à sua fórmula, a fará retornar o número desejado.</span><span class="sxs-lookup"><span data-stu-id="65c6c-620">If the goal is an amount returned by a formula, this calculates a value that, when supplied to your formula, causes the formula to return the number you want.</span></span></para>
          <para><span data-ttu-id="65c6c-621">Este método <b>retornará True</b> se a busca da meta for bem-sucedida.</span><span class="sxs-lookup"><span data-stu-id="65c6c-621">This method returns <b>True</b> if the goal seek is successful.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Group">
      <MemberSignature Language="C#" Value="public object Group (object Start, object End, object By, object Periods);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Group([in]object Start, [in]object End, [in]object By, [in]object Periods) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Group(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Group (Optional Start As Object, Optional End As Object, Optional By As Object, Optional Periods As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(46)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Start" Type="System.Object" />
        <Parameter Name="End" Type="System.Object" />
        <Parameter Name="By" Type="System.Object" />
        <Parameter Name="Periods" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Start"><span data-ttu-id="65c6c-622">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-622">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-623">O primeiro valor a ser agrupado.</span><span class="sxs-lookup"><span data-stu-id="65c6c-623">The first value to be grouped.</span></span> <span data-ttu-id="65c6c-624">Se este argumento for omitido ou for <b>True</b>, será usado o primeiro valor no campo.</span><span class="sxs-lookup"><span data-stu-id="65c6c-624">If this argument is omitted or <b>True</b>, the first value in the field is used.</span></span></param>
        <param name="End"><span data-ttu-id="65c6c-625">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-625">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-626">O último valor a ser agrupado.</span><span class="sxs-lookup"><span data-stu-id="65c6c-626">The last value to be grouped.</span></span> <span data-ttu-id="65c6c-627">Se este argumento for omitido ou for <b>True</b>, será usado o último valor no campo.</span><span class="sxs-lookup"><span data-stu-id="65c6c-627">If this argument is omitted or <b>True</b>, the last value in the field is used.</span></span></param>
        <param name="By"><span data-ttu-id="65c6c-628">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-628">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-629">Se o campo for numérico, este argumento especificará o tamanho de cada grupo.</span><span class="sxs-lookup"><span data-stu-id="65c6c-629">If the field is numeric, this argument specifies the size of each group.</span></span> <span data-ttu-id="65c6c-630">Se o campo for uma data, este argumento especificará o número de dias em cada grupo se o elemento 4 na matriz for True e todos os outros elementos <paramref name="Periods" /> são <b>False</b>. <b></b></span><span class="sxs-lookup"><span data-stu-id="65c6c-630">If the field is a date, this argument specifies the number of days in each group if element 4 in the <paramref name="Periods" /> array is <b>True</b> and all the other elements are <b>False</b>.</span></span> <span data-ttu-id="65c6c-631">Caso contrário, este argumento será ignorado.</span><span class="sxs-lookup"><span data-stu-id="65c6c-631">Otherwise, this argument is ignored.</span></span> <span data-ttu-id="65c6c-632">Se esse argumento for omitido, o Microsoft Excel escolherá automaticamente um tamanho de grupo padrão.</span><span class="sxs-lookup"><span data-stu-id="65c6c-632">If this argument is omitted, Microsoft Excel automatically chooses a default group size.</span></span></param>
        <param name="Periods"><span data-ttu-id="65c6c-633">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-633">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-634">Uma matriz de valores Boolean que especificam o período do grupo, conforme mostrado na tabela a seguir. Se um elemento na matriz for <b>True</b>, um grupo será criado para a hora correspondente; se o elemento for <b>False</b>, nenhum grupo será criado.</span><span class="sxs-lookup"><span data-stu-id="65c6c-634">An array of Boolean values that specify the period for the group, as shown in the following table.If an element in the array is <b>True</b>, a group is created for the corresponding time; if the element is <b>False</b>, no group is created.</span></span> <span data-ttu-id="65c6c-635">Se o campo não for um campo de data, este argumento será ignorado.</span><span class="sxs-lookup"><span data-stu-id="65c6c-635">If the field isn’t a date field, this argument is ignored.</span></span></param>
        <summary><span data-ttu-id="65c6c-636">Quando o objeto representa uma única célula no intervalo de dados de um campo de tabela dinâmica, o método Group executa um grupo numérico ou baseado em data <see cref="T:Microsoft.Office.Interop.Excel.Range" /> nesse campo. <b></b></span><span class="sxs-lookup"><span data-stu-id="65c6c-636">When the <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object represents a single cell in a PivotTable field’s data range, the <b>Group</b> method performs numeric or date-based grouping in that field.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="65c6c-637">O objeto <b>Range</b> deve ser uma única célula no intervalo de dados do campo de tabela dinâmica.</span><span class="sxs-lookup"><span data-stu-id="65c6c-637">The <b>Range</b> object must be a single cell in the PivotTable field’s data range.</span></span> <span data-ttu-id="65c6c-638">Se você tentar aplicar esse método a mais de uma célula, ele falhará, mas não exibirá uma mensagem de erro.</span><span class="sxs-lookup"><span data-stu-id="65c6c-638">If you attempt to apply this method to more than one cell, it will fail but will not display an error message.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="HasArray">
      <MemberSignature Language="C#" Value="public object HasArray { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object HasArray" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.HasArray" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasArray As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ HasArray { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(266)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(266)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65c6c-639">Determina se a célula especificada faz parte de uma fórmula de matriz.</span><span class="sxs-lookup"><span data-stu-id="65c6c-639">Determines if the specified cell is part of an array formula.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="65c6c-640">Essa propriedade <b>retornará True</b> se a célula especificada for parte de uma fórmula de matriz.</span><span class="sxs-lookup"><span data-stu-id="65c6c-640">This property returns <b>True</b> if the specified cell is part of an array formula.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="HasFormula">
      <MemberSignature Language="C#" Value="public object HasFormula { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object HasFormula" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.HasFormula" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasFormula As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ HasFormula { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(267)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(267)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65c6c-641">Determina se todas as células no intervalo contêm fórmulas.</span><span class="sxs-lookup"><span data-stu-id="65c6c-641">Determines if all cells in the range contain formulas.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="65c6c-642">Essa propriedade <b>retornará True</b> se todas as células no intervalo contiver fórmulas, <b>False</b> se nenhuma das células no intervalo contiver uma fórmula e <b>Null caso</b> contrário.</span><span class="sxs-lookup"><span data-stu-id="65c6c-642">This property returns <b>True</b> if all cells in the range contain formulas, <b>False</b> if none of the cells in the range contains a formula, and <b>Null</b> otherwise.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public object Height { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Height" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Height" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Height As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Height { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(123)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(123)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65c6c-643">A altura do intervalo.</span><span class="sxs-lookup"><span data-stu-id="65c6c-643">The height of the range.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Hidden">
      <MemberSignature Language="C#" Value="public object Hidden { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Hidden" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Hidden" />
      <MemberSignature Language="VB.NET" Value="Public Property Hidden As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Hidden { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(268)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(268)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(268)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65c6c-644">Determina se as linhas ou colunas estão ocultas.</span><span class="sxs-lookup"><span data-stu-id="65c6c-644">Determines if the rows or columns are hidden.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="65c6c-645">Essa propriedade retorna <b>True</b> se as linhas ou colunas estão ocultas.</span><span class="sxs-lookup"><span data-stu-id="65c6c-645">This property returns <b>True</b> if the rows or columns are hidden.</span></span> <span data-ttu-id="65c6c-646">O intervalo especificado precisa se estender por uma coluna ou linha inteira.</span><span class="sxs-lookup"><span data-stu-id="65c6c-646">The specified range must span an entire column or row.</span></span></para>
          <para><span data-ttu-id="65c6c-647">Não confunda essa propriedade com a <see cref="P:Microsoft.Office.Interop.Excel.Range.FormulaHidden" /> propriedade.</span><span class="sxs-lookup"><span data-stu-id="65c6c-647">Don't confuse this property with the <see cref="P:Microsoft.Office.Interop.Excel.Range.FormulaHidden" /> property.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalAlignment">
      <MemberSignature Language="C#" Value="public object HorizontalAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object HorizontalAlignment" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.HorizontalAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property HorizontalAlignment As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ HorizontalAlignment { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(136)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(136)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(136)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65c6c-648">Retorna ou define o alinhamento horizontal do objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="65c6c-648">Returns or sets the horizontal alignment for the specified object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Hyperlinks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Hyperlinks Hyperlinks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Hyperlinks Hyperlinks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Hyperlinks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Hyperlinks As Hyperlinks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Hyperlinks ^ Hyperlinks { Microsoft::Office::Interop::Excel::Hyperlinks ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1393)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1393)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Hyperlinks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65c6c-649">Retorna uma <see cref="T:Microsoft.Office.Interop.Excel.Hyperlinks" /> coleção que representa os hiperlinks do intervalo.</span><span class="sxs-lookup"><span data-stu-id="65c6c-649">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Hyperlinks" /> collection that represents the hyperlinks for the range.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ID">
      <MemberSignature Language="C#" Value="public string ID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ID" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.ID" />
      <MemberSignature Language="VB.NET" Value="Public Property ID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1813)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1813)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1813)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65c6c-650">Retorna ou define o rótulo de identificação da célula especificada quando a página é salva como uma página da Web.</span><span class="sxs-lookup"><span data-stu-id="65c6c-650">Returns or sets the identifying label for the specified cell when the page is saved as a Web page.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="65c6c-651">Você pode usar um rótulo de identificação como uma referência de hiperlink em outros documentos HTML ou na mesma página da Web.</span><span class="sxs-lookup"><span data-stu-id="65c6c-651">You can use an ID label as a hyperlink reference in other HTML documents or on the same Web page.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="IndentLevel">
      <MemberSignature Language="C#" Value="public object IndentLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object IndentLevel" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.IndentLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property IndentLevel As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ IndentLevel { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(201)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(201)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(201)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65c6c-652">Retorna ou define o nível de recuo para a célula ou intervalo.</span><span class="sxs-lookup"><span data-stu-id="65c6c-652">Returns or sets the indent level for the cell or range.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="65c6c-653">O nível de recuo pode ser um inteiro de 0 a 15.</span><span class="sxs-lookup"><span data-stu-id="65c6c-653">The indent level can be an integer from 0 to 15.</span></span></para>
          <para><span data-ttu-id="65c6c-654">O uso desta propriedade para definir o nível de recuo para um número menor do que 0 (zero) ou maior do que 15 causará um erro.</span><span class="sxs-lookup"><span data-stu-id="65c6c-654">Using this property to set the indent level to a number less than 0 (zero) or greater than 15 causes an error.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public object Insert (object Shift, object CopyOrigin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Insert([in]object Shift, [in]object CopyOrigin) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Insert(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (Optional Shift As Object, Optional CopyOrigin As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(252)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Shift" Type="System.Object" />
        <Parameter Name="CopyOrigin" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Shift"><span data-ttu-id="65c6c-655">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-655">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-656">Especifica como deslocar as células.</span><span class="sxs-lookup"><span data-stu-id="65c6c-656">Specifies which way to shift the cells.</span></span> <span data-ttu-id="65c6c-657">Pode ser uma das seguintes <see cref="T:Microsoft.Office.Interop.Excel.XlInsertShiftDirection" /> constantes: <b>xlShiftToRight</b> ou <b>xlShiftDown</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-657">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlInsertShiftDirection" /> constants: <b>xlShiftToRight</b> or <b>xlShiftDown</b>.</span></span> <span data-ttu-id="65c6c-658">Se este argumento for omitido, o Microsoft Excel decidirá com base na forma do intervalo.</span><span class="sxs-lookup"><span data-stu-id="65c6c-658">If this argument is omitted, Microsoft Excel decides based on the shape of the range.</span></span></param>
        <param name="CopyOrigin"><span data-ttu-id="65c6c-659">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-659">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-660">A origem da cópia.</span><span class="sxs-lookup"><span data-stu-id="65c6c-660">The copy origin.</span></span></param>
        <summary><span data-ttu-id="65c6c-661">Insere uma célula ou um intervalo de células na planilha ou folha de macro e desloca as outras células para liberar espaço.</span><span class="sxs-lookup"><span data-stu-id="65c6c-661">Inserts a cell or a range of cells into the worksheet or macro sheet and shifts other cells away to make space.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertIndent">
      <MemberSignature Language="C#" Value="public void InsertIndent (int InsertAmount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertIndent([in]int32 InsertAmount) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.InsertIndent(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertIndent (InsertAmount As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertIndent(int InsertAmount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1381)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="InsertAmount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="InsertAmount"><span data-ttu-id="65c6c-662">Obrigatório <b>Integer</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-662">Required <b>Integer</b>.</span></span> <span data-ttu-id="65c6c-663">A quantidade a ser adicionada ao recuo atual.</span><span class="sxs-lookup"><span data-stu-id="65c6c-663">The amount to be added to the current indent.</span></span></param>
        <summary><span data-ttu-id="65c6c-664">Adiciona um recuo ao intervalo especificado.</span><span class="sxs-lookup"><span data-stu-id="65c6c-664">Adds an indent to the specified range.</span></span></summary>
        <remarks><para><span data-ttu-id="65c6c-665">Usando este método para definir o nível de recuo para um número menor do que 0 (zero) ou maior do que 15 causará um erro.</span><span class="sxs-lookup"><span data-stu-id="65c6c-665">Using this method to set the indent level to a number less than 0 (zero) or greater than 15 causes an error.</span></span></para>
          <para><span data-ttu-id="65c6c-666">Use <b /> <see cref="P:Microsoft.Office.Interop.Excel.Range.IndentLevel" /> a propriedade para retornar o nível de recuo de um intervalo.</span><span class="sxs-lookup"><span data-stu-id="65c6c-666">Use the<b /><see cref="P:Microsoft.Office.Interop.Excel.Range.IndentLevel" /> property to return the indent level for a range.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Interior">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Interior Interior { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Interior Interior" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Interior" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Interior As Interior" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Interior ^ Interior { Microsoft::Office::Interop::Excel::Interior ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(129)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(129)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Interior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65c6c-667">Retorna um <see cref="T:Microsoft.Office.Interop.Excel.Interior" /> objeto que representa o interior do objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="65c6c-667">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Interior" /> object that represents the interior of the specified object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object Item[object RowIndex, object ColumnIndex] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Item(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Property Item(RowIndex As Object, Optional ColumnIndex As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Item[System::Object ^, System::Object ^] { System::Object ^ get(System::Object ^ RowIndex, System::Object ^ ColumnIndex); void set(System::Object ^ RowIndex, System::Object ^ ColumnIndex, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="RowIndex" Type="System.Object" />
        <Parameter Name="ColumnIndex" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="RowIndex"><span data-ttu-id="65c6c-668">Objeto <b>Required</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-668">Required <b>Object</b>.</span></span> <span data-ttu-id="65c6c-669">O número de índice da célula que você deseja acessar, primeiro da esquerda para a direita e depois para baixo.</span><span class="sxs-lookup"><span data-stu-id="65c6c-669">The index number of the cell you want to access, in order from left to right, then down.</span></span> <span data-ttu-id="65c6c-670">Range.Item(1) retorna a célula superior esquerda do intervalo; Range.Item(2) retorna a célula imediatamente à direita da célula superior esquerda.</span><span class="sxs-lookup"><span data-stu-id="65c6c-670">Range.Item(1) returns the upper-left cell in the range; Range.Item(2) returns the cell immediately to the right of the upper-left cell.</span></span></param>
        <param name="ColumnIndex"><span data-ttu-id="65c6c-671">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-671">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-672">Um número ou sequência de caracteres que indica o número de coluna da célula que você deseja acessar, começando com 1 ou "A" para a primeira coluna do intervalo.</span><span class="sxs-lookup"><span data-stu-id="65c6c-672">A number or string that indicates the column number of the cell you want to access, starting with either 1 or "A" for the first column in the range.</span></span></param>
        <summary><span data-ttu-id="65c6c-673">Retorna um <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objeto que representa um intervalo em um deslocamento para o intervalo especificado.</span><span class="sxs-lookup"><span data-stu-id="65c6c-673">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents a range at an offset to the specified range.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="65c6c-674">Os <paramref name="RowIndex" /> <paramref name="ColumnIndex" /> argumentos e os argumentos são deslocamentos relativos.</span><span class="sxs-lookup"><span data-stu-id="65c6c-674">The <paramref name="RowIndex" /> and <paramref name="ColumnIndex" /> arguments are relative offsets.</span></span> <span data-ttu-id="65c6c-675">Em outras palavras, especificar um de 1 retorna células na primeira linha do intervalo, não a primeira <paramref name="RowIndex" /> linha da planilha.</span><span class="sxs-lookup"><span data-stu-id="65c6c-675">In other words, specifying a <paramref name="RowIndex" /> of 1 returns cells in the first row of the range, not the first row of the worksheet.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Justify">
      <MemberSignature Language="C#" Value="public object Justify ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Justify() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Justify" />
      <MemberSignature Language="VB.NET" Value="Public Function Justify () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Justify();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(495)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="65c6c-676">Reorganiza o texto de um intervalo de modo que ele preencha o intervalo uniformemente.</span><span class="sxs-lookup"><span data-stu-id="65c6c-676">Rearranges the text in a range so that it fills the range evenly.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="65c6c-677">Se o intervalo não for grande o suficiente, o Microsoft Excel exibirá uma mensagem dizendo a você que o texto se estenderá abaixo do intervalo.</span><span class="sxs-lookup"><span data-stu-id="65c6c-677">If the range isn’t large enough, Microsoft Excel displays a message telling you that text will extend below the range.</span></span> <span data-ttu-id="65c6c-678">Se você clicar no botão OK, texto justificado substituirá o conteúdo das células que se estendem além do intervalo selecionado.</span><span class="sxs-lookup"><span data-stu-id="65c6c-678">If you click the OK button, justified text will replace the contents in cells that extend beyond the selected range.</span></span> <span data-ttu-id="65c6c-679">Para impedir que essa mensagem apareça, de definida a <see cref="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" /> propriedade como <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-679">To prevent this message from appearing, set the <see cref="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" /> property to <b>False</b>.</span></span> <span data-ttu-id="65c6c-680">Depois de você definir essa propriedade, o texto sempre substituirá o conteúdo das células abaixo do intervalo.</span><span class="sxs-lookup"><span data-stu-id="65c6c-680">After you set this property, text will always replace the contents in cells below the range.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="public object Left { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Left" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Left" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Left As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Left { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(127)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(127)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65c6c-681">A distância da borda esquerda da coluna A até a borda esquerda do intervalo.</span><span class="sxs-lookup"><span data-stu-id="65c6c-681">The distance from the left edge of column A to the left edge of the range.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="65c6c-p237">Se o intervalo for descontínuo, a primeira área será usada. Se o intervalo tiver mais de uma coluna de largura, a coluna mais à esquerda no intervalo será usada.</span><span class="sxs-lookup"><span data-stu-id="65c6c-p237">If the range is discontinuous, the first area is used. If the range is more than one column wide, the leftmost column in the range is used.</span></span></para>
          <para><span data-ttu-id="65c6c-684">Se a janela estiver maximizada, essa propriedade retornará um número negativo que varia com base na largura da borda da janela.</span><span class="sxs-lookup"><span data-stu-id="65c6c-684">If the window is maximized, this property returns a negative number that varies based on the width of the window border.</span></span> <span data-ttu-id="65c6c-685">Definir essa propriedade como 0 (zero) fará com que a janela um pouco menor do que seria se a janela do aplicativo fosse maximizada.</span><span class="sxs-lookup"><span data-stu-id="65c6c-685">Setting this property to 0 (zero) will make the window a tiny bit smaller than it would be if the application window were maximized.</span></span> <span data-ttu-id="65c6c-686">Em outras palavras, se essa propriedade for 0 (zero), a borda esquerda da janela principal do Microsoft Excel simplesmente ficará visível na tela.</span><span class="sxs-lookup"><span data-stu-id="65c6c-686">In other words, if this property is 0 (zero), the left border of the main Microsoft Excel window will just barely be visible on the screen.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ListHeaderRows">
      <MemberSignature Language="C#" Value="public int ListHeaderRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ListHeaderRows" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.ListHeaderRows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ListHeaderRows As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ListHeaderRows { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1187)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1187)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65c6c-687">Retorna o número de linhas de cabeçalho do intervalo especificado.</span><span class="sxs-lookup"><span data-stu-id="65c6c-687">Returns the number of header rows for the specified range.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="65c6c-688">Antes de usar essa propriedade, use a <see cref="P:Microsoft.Office.Interop.Excel.Range.CurrentRegion" /> propriedade para encontrar os limites do intervalo.</span><span class="sxs-lookup"><span data-stu-id="65c6c-688">Before you use this property, use the <see cref="P:Microsoft.Office.Interop.Excel.Range.CurrentRegion" /> property to find the boundaries of the range.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ListNames">
      <MemberSignature Language="C#" Value="public object ListNames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ListNames() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ListNames" />
      <MemberSignature Language="VB.NET" Value="Public Function ListNames () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ListNames();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(253)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="65c6c-689">Colar uma lista de todos os nomes exibidos na planilha, começando com a primeira célula do intervalo.</span><span class="sxs-lookup"><span data-stu-id="65c6c-689">Pastes a list of all displayed names onto the worksheet, beginning with the first cell in the range.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="65c6c-690">Use a <see cref="P:Microsoft.Office.Interop.Excel._Application.Names" /> propriedade para retornar uma coleção de todos os nomes em uma planilha.</span><span class="sxs-lookup"><span data-stu-id="65c6c-690">Use the <see cref="P:Microsoft.Office.Interop.Excel._Application.Names" /> property to return a collection of all the names on a worksheet.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ListObject">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ListObject ListObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ListObject ListObject" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.ListObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ListObject As ListObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ListObject ^ ListObject { Microsoft::Office::Interop::Excel::ListObject ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2257)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2257)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ListObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65c6c-691">Retorna um <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> objeto para o objeto ou <see cref="T:Microsoft.Office.Interop.Excel.Range" /> <see cref="T:Microsoft.Office.Interop.Excel.QueryTable" /> objeto.</span><span class="sxs-lookup"><span data-stu-id="65c6c-691">Returns a <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> object for the <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object or <see cref="T:Microsoft.Office.Interop.Excel.QueryTable" /> object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocationInTable">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlLocationInTable LocationInTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlLocationInTable LocationInTable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.LocationInTable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LocationInTable As XlLocationInTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlLocationInTable LocationInTable { Microsoft::Office::Interop::Excel::XlLocationInTable get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(691)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(691)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlLocationInTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65c6c-692">Retorna uma constante que descreve a parte do relatório que contém o canto superior <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> esquerdo do intervalo especificado.</span><span class="sxs-lookup"><span data-stu-id="65c6c-692">Returns a constant that describes the part of the <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> report that contains the upper-left corner of the specified range.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="65c6c-693">
            <b>XlLocationInTable</b> pode ser uma das seguintes <see cref="T:Microsoft.Office.Interop.Excel.XlLocationInTable" /> constantes:</span><span class="sxs-lookup"><span data-stu-id="65c6c-693">
            <b>XlLocationInTable</b> can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlLocationInTable" /> constants:</span></span></para>
          <list type="bullet">
            <item>
              <description><span data-ttu-id="65c6c-694">
                <b>xlRowHeader</b>
              </span><span class="sxs-lookup"><span data-stu-id="65c6c-694">
                <b>xlRowHeader</b>
              </span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="65c6c-695">
                <b>xlColumnHeader</b>
              </span><span class="sxs-lookup"><span data-stu-id="65c6c-695">
                <b>xlColumnHeader</b>
              </span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="65c6c-696">
                <b>xlPageHeader</b>
              </span><span class="sxs-lookup"><span data-stu-id="65c6c-696">
                <b>xlPageHeader</b>
              </span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="65c6c-697">
                <b>xlDataHeader</b>
              </span><span class="sxs-lookup"><span data-stu-id="65c6c-697">
                <b>xlDataHeader</b>
              </span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="65c6c-698">
                <b>xlRowItem</b>
              </span><span class="sxs-lookup"><span data-stu-id="65c6c-698">
                <b>xlRowItem</b>
              </span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="65c6c-699">
                <b>xlColumnItem</b>
              </span><span class="sxs-lookup"><span data-stu-id="65c6c-699">
                <b>xlColumnItem</b>
              </span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="65c6c-700">
                <b>xlPageItem</b>
              </span><span class="sxs-lookup"><span data-stu-id="65c6c-700">
                <b>xlPageItem</b>
              </span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="65c6c-701">
                <b>xlDataItem</b>
              </span><span class="sxs-lookup"><span data-stu-id="65c6c-701">
                <b>xlDataItem</b>
              </span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="65c6c-702">
                <b>xlTableBody</b>
              </span><span class="sxs-lookup"><span data-stu-id="65c6c-702">
                <b>xlTableBody</b>
              </span></span></description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Locked">
      <MemberSignature Language="C#" Value="public object Locked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Locked" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Locked" />
      <MemberSignature Language="VB.NET" Value="Public Property Locked As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Locked { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(269)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(269)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(269)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65c6c-703">Determina se o objeto está bloqueado.</span><span class="sxs-lookup"><span data-stu-id="65c6c-703">Determines if the object is locked.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="65c6c-704">Essa propriedade retornará <b>True</b> se o objeto estiver bloqueado, <b>False</b> se o objeto puder ser modificado quando a planilha estiver protegida e <b>Null</b> se o intervalo especificado contiver células bloqueadas e desbloqueadas.</span><span class="sxs-lookup"><span data-stu-id="65c6c-704">This property returns <b>True</b> if the object is locked, <b>False</b> if the object can be modified when the sheet is protected, and <b>Null</b> if the specified range contains both locked and unlocked cells.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MDX">
      <MemberSignature Language="C#" Value="public string MDX { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MDX" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.MDX" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MDX As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MDX { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2123)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2123)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65c6c-705">Retorna o nome MDX do objeto <see cref="T:Microsoft.Office.Interop.Excel.Range" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="65c6c-705">Returns the MDX name for the specified <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object.</span></span> <span data-ttu-id="65c6c-706">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="65c6c-706">Read-only.</span></span></summary>
        <value><span data-ttu-id="65c6c-707">Cadeia de caracteres</span><span class="sxs-lookup"><span data-stu-id="65c6c-707">String</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Merge">
      <MemberSignature Language="C#" Value="public void Merge (object Across);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Merge([in]object Across) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Merge(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Merge (Optional Across As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(564)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Across" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Across"><span data-ttu-id="65c6c-708">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-708">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-709"><b>True</b> para mesclar células em todas as linhas do intervalo especificado como células mescladas separadamente.</span><span class="sxs-lookup"><span data-stu-id="65c6c-709"><b>True</b> to merge cells in each row of the specified range as separate merged cells.</span></span> <span data-ttu-id="65c6c-710">O valor padrão é <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-710">The default value is <b>False</b>.</span></span></param>
        <summary><span data-ttu-id="65c6c-711">Cria uma célula mesclada a partir do objeto <see cref="T:Microsoft.Office.Interop.Excel.Range" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="65c6c-711">Creates a merged cell from the specified <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object.</span></span></summary>
        <remarks><para><span data-ttu-id="65c6c-712">O valor de um intervalo mesclado é especificado na célula do canto superior esquerdo do intervalo.</span><span class="sxs-lookup"><span data-stu-id="65c6c-712">The value of a merged range is specified in the cell of the range's upper-left corner.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MergeArea">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range MergeArea { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range MergeArea" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.MergeArea" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MergeArea As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ MergeArea { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1385)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1385)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65c6c-713">Retorna um <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objeto que representa o intervalo mesclado que contém a célula especificada.</span><span class="sxs-lookup"><span data-stu-id="65c6c-713">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the merged range containing the specified cell.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="65c6c-714">Se a célula especificada não estiver em um intervalo mesclado, essa propriedade retornará a célula especificada.</span><span class="sxs-lookup"><span data-stu-id="65c6c-714">If the specified cell isn’t in a merged range, this property returns the specified cell.</span></span></para>
          <para><span data-ttu-id="65c6c-715">A propriedade <b>MergeArea</b> funciona somente em um intervalo de célula única.</span><span class="sxs-lookup"><span data-stu-id="65c6c-715">The <b>MergeArea</b> property only works on a single-cell range.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MergeCells">
      <MemberSignature Language="C#" Value="public object MergeCells { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object MergeCells" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.MergeCells" />
      <MemberSignature Language="VB.NET" Value="Public Property MergeCells As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ MergeCells { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(208)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(208)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(208)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65c6c-716">Determina se o intervalo ou estilo contém células mescladas.</span><span class="sxs-lookup"><span data-stu-id="65c6c-716">Determines if the range or style contains merged cells.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="65c6c-717">Essa propriedade <b>retornará True</b> se o intervalo ou o estilo contiver células mescladas.</span><span class="sxs-lookup"><span data-stu-id="65c6c-717">This property returns <b>True</b> if the range or style contains merged cells.</span></span></para>
          <para><span data-ttu-id="65c6c-718">Quando você seleciona um intervalo que contém células mescladas, a seleção resultante pode ser diferente da seleção desejada.</span><span class="sxs-lookup"><span data-stu-id="65c6c-718">When you select a range that contains merged cells, the resulting selection may be different from the intended selection.</span></span> <span data-ttu-id="65c6c-719">Use a <see cref="P:Microsoft.Office.Interop.Excel.Range.Address(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlReferenceStyle,System.Object,System.Object)" /> propriedade para verificar o endereço do intervalo selecionado.</span><span class="sxs-lookup"><span data-stu-id="65c6c-719">Use the <see cref="P:Microsoft.Office.Interop.Excel.Range.Address(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlReferenceStyle,System.Object,System.Object)" /> property to check the address of the selected range.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public object Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Name { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65c6c-720">Retorna ou define o nome do objeto.</span><span class="sxs-lookup"><span data-stu-id="65c6c-720">Returns or sets the name of the object.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="65c6c-721">O nome de um <b>objeto Range</b> é um <see cref="T:Microsoft.Office.Interop.Excel.Name" /> objeto.</span><span class="sxs-lookup"><span data-stu-id="65c6c-721">The name of a <b>Range</b> object is a <see cref="T:Microsoft.Office.Interop.Excel.Name" /> object.</span></span> <span data-ttu-id="65c6c-722">Para qualquer outro tipo de objeto, o nome é uma cadeia de <b>caracteres</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-722">For every other type of object, the name is a <b>String</b>.</span></span></para>
          <para><span data-ttu-id="65c6c-723">A tabela a seguir mostra valores de exemplo da propriedade <b>Name</b> e propriedades relacionadas, pressupondo-se uma fonte de dados OLAP com o nome exclusivo "[Europe].[France].[Paris]" e uma fonte de dados não-OLAP com o nome de item "Paris".</span><span class="sxs-lookup"><span data-stu-id="65c6c-723">The following table shows example values of the <b>Name</b> property and related properties given an OLAP data source with the unique name "[Europe].[France].[Paris]" and a non-OLAP data source with the item name "Paris".</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="65c6c-724">Legenda</span><span class="sxs-lookup"><span data-stu-id="65c6c-724">Caption</span></span></term>
              <description><span data-ttu-id="65c6c-725">Paris</span><span class="sxs-lookup"><span data-stu-id="65c6c-725">Paris</span></span></description>
              <description><span data-ttu-id="65c6c-726">Paris</span><span class="sxs-lookup"><span data-stu-id="65c6c-726">Paris</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="65c6c-727">Nome</span><span class="sxs-lookup"><span data-stu-id="65c6c-727">Name</span></span></term>
              <description><span data-ttu-id="65c6c-728">[Europe].[France].[Paris] (somente leitura)</span><span class="sxs-lookup"><span data-stu-id="65c6c-728">[Europe].[France].[Paris] (read-only)</span></span></description>
              <description><span data-ttu-id="65c6c-729">Paris</span><span class="sxs-lookup"><span data-stu-id="65c6c-729">Paris</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="65c6c-730">SourceName</span><span class="sxs-lookup"><span data-stu-id="65c6c-730">SourceName</span></span></term>
              <description><span data-ttu-id="65c6c-731">[Europe].[France].[Paris] (somente leitura)</span><span class="sxs-lookup"><span data-stu-id="65c6c-731">[Europe].[France].[Paris] (read-only)</span></span></description>
              <description><span data-ttu-id="65c6c-732">(Igual ao da propriedade SQL, somente leitura)</span><span class="sxs-lookup"><span data-stu-id="65c6c-732">(Same as SQL property value, read-only)</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="65c6c-733">Valor</span><span class="sxs-lookup"><span data-stu-id="65c6c-733">Value</span></span></term>
              <description><span data-ttu-id="65c6c-734">[Europe].[France].[Paris] (somente leitura)</span><span class="sxs-lookup"><span data-stu-id="65c6c-734">[Europe].[France].[Paris] (read-only)</span></span></description>
              <description><span data-ttu-id="65c6c-735">Paris</span><span class="sxs-lookup"><span data-stu-id="65c6c-735">Paris</span></span></description>
            </item>
          </list>
          <para><span data-ttu-id="65c6c-736">Ao especificar um índice na <see cref="T:Microsoft.Office.Interop.Excel.PivotItems" /> coleção, você pode usar a sintaxe mostrada na tabela a seguir.</span><span class="sxs-lookup"><span data-stu-id="65c6c-736">When specifying an index into the <see cref="T:Microsoft.Office.Interop.Excel.PivotItems" /> collection, you can use the syntax shown in the following table.</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="65c6c-737">expressão. PivotItems("[Europe].[ França]. [Paris]")</span><span class="sxs-lookup"><span data-stu-id="65c6c-737">expression.PivotItems("[Europe].[France].[Paris]")</span></span></term>
              <description><span data-ttu-id="65c6c-738">expressão. PivotItems("Paris")</span><span class="sxs-lookup"><span data-stu-id="65c6c-738">expression.PivotItems("Paris")</span></span></description>
            </item>
          </list>
          <para><span data-ttu-id="65c6c-739">Ao usar a propriedade para fazer referência a um determinado membro de uma coleção, você pode usar o nome do índice <see cref="M:Microsoft.Office.Interop.Excel.PivotItems.Item(System.Object)" /> de texto, conforme mostrado na tabela a seguir.</span><span class="sxs-lookup"><span data-stu-id="65c6c-739">When using the <see cref="M:Microsoft.Office.Interop.Excel.PivotItems.Item(System.Object)" /> property to reference a specific member of a collection, you can use the text index name as shown in the following table.</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="65c6c-740">[Europa]. [França]. [Paris]</span><span class="sxs-lookup"><span data-stu-id="65c6c-740">[Europe].[France].[Paris]</span></span></term>
              <description><span data-ttu-id="65c6c-741">Paris</span><span class="sxs-lookup"><span data-stu-id="65c6c-741">Paris</span></span></description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigateArrow">
      <MemberSignature Language="C#" Value="public object NavigateArrow (object TowardPrecedent, object ArrowNumber, object LinkNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object NavigateArrow([in]object TowardPrecedent, [in]object ArrowNumber, [in]object LinkNumber) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.NavigateArrow(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function NavigateArrow (Optional TowardPrecedent As Object, Optional ArrowNumber As Object, Optional LinkNumber As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1032)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="TowardPrecedent" Type="System.Object" />
        <Parameter Name="ArrowNumber" Type="System.Object" />
        <Parameter Name="LinkNumber" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="TowardPrecedent"><span data-ttu-id="65c6c-742">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-742">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-743">Especifica a direção para navegar: <b>True para</b> navegar em direção a precedentes; <b>False</b> para navegar em direção aos dependentes.</span><span class="sxs-lookup"><span data-stu-id="65c6c-743">Specifies the direction to navigate: <b>True</b> to navigate toward precedents; <b>False</b> to navigate toward dependent.</span></span></param>
        <param name="ArrowNumber"><span data-ttu-id="65c6c-744">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-744">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-745">Especifica o número da seta a navegar; corresponde à referência numerada na fórmula da célula.</span><span class="sxs-lookup"><span data-stu-id="65c6c-745">Specifies the arrow number to navigate; corresponds to the numbered reference in the cell's formula.</span></span></param>
        <param name="LinkNumber"><span data-ttu-id="65c6c-746">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-746">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-747">Quando a seta é uma seta de referência externa, esse argumento indica qual referência externa seguir.</span><span class="sxs-lookup"><span data-stu-id="65c6c-747">If the arrow is an external reference arrow, this argument indicates which external reference to follow.</span></span> <span data-ttu-id="65c6c-748">Se esse argumento for omitido, a primeira referência externa será seguida.</span><span class="sxs-lookup"><span data-stu-id="65c6c-748">If this argument is omitted, the first external reference is followed.</span></span></param>
        <summary><span data-ttu-id="65c6c-749">Faz uma seta rastreadora navegar pelo intervalo especificado até a célula ou células precedentes, dependentes ou causadoras de erro.</span><span class="sxs-lookup"><span data-stu-id="65c6c-749">Navigates a tracer arrow for the specified range to the precedent, dependent, or error-causing cell or cells.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="65c6c-750">Seleciona as células precedentes, dependentes ou de erro e retorna <see cref="T:Microsoft.Office.Interop.Excel.Range" /> um objeto que representa a nova seleção.</span><span class="sxs-lookup"><span data-stu-id="65c6c-750">Selects the precedent, dependent, or error cells and returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the new selection.</span></span> <span data-ttu-id="65c6c-751">Este método causa um erro quando aplicado a uma célula sem setas rastreadoras visíveis.</span><span class="sxs-lookup"><span data-stu-id="65c6c-751">This method causes an error if it's applied to a cell without visible tracer arrows.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Next">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Next { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Next" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Next" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Next As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Next { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(502)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(502)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65c6c-752">Retorna um <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objeto que representa a próxima célula.</span><span class="sxs-lookup"><span data-stu-id="65c6c-752">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the next cell.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="65c6c-753">Essa propriedade emula a tecla TAB, embora a propriedade retorne a próxima célula sem selecioná-la.</span><span class="sxs-lookup"><span data-stu-id="65c6c-753">This property emulates the TAB key, although the property returns the next cell without selecting it.</span></span></para>
          <para><span data-ttu-id="65c6c-p247">Em uma planilha protegida, essa propriedade retorna a próxima célula desprotegida. Em uma planilha desprotegida, a propriedade sempre retorna a célula imediatamente à direita da célula especificada.</span><span class="sxs-lookup"><span data-stu-id="65c6c-p247">On a protected sheet, this property returns the next unlocked cell. On an unprotected sheet, this property always returns the cell immediately to the right of the specified cell.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="NoteText">
      <MemberSignature Language="C#" Value="public string NoteText (object Text, object Start, object Length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string NoteText([in]object Text, [in]object Start, [in]object Length) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.NoteText(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function NoteText (Optional Text As Object, Optional Start As Object, Optional Length As Object) As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1127)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Text" Type="System.Object" />
        <Parameter Name="Start" Type="System.Object" />
        <Parameter Name="Length" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Text"><span data-ttu-id="65c6c-756">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-756">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-757">O texto a ser adicionado à nota (de até 255 caracteres).</span><span class="sxs-lookup"><span data-stu-id="65c6c-757">The text to add to the note (up to 255 characters).</span></span> <span data-ttu-id="65c6c-758">O texto é inserido começando na <paramref name="Start" /> posição, substituindo <paramref name="Length" /> caracteres da nota existente.</span><span class="sxs-lookup"><span data-stu-id="65c6c-758">The text is inserted starting at position <paramref name="Start" />, replacing <paramref name="Length" /> characters of the existing note.</span></span> <span data-ttu-id="65c6c-759">Se esse argumento for omitido, esse método retornará o texto atual da nota começando na posição <paramref name="Start" /> , para <paramref name="Length" /> caracteres.</span><span class="sxs-lookup"><span data-stu-id="65c6c-759">If this argument is omitted, this method returns the current text of the note starting at position <paramref name="Start" />, for <paramref name="Length" /> characters.</span></span></param>
        <param name="Start"><span data-ttu-id="65c6c-760">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-760">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-761">A posição inicial do texto que é definido ou retornado.</span><span class="sxs-lookup"><span data-stu-id="65c6c-761">The starting position for the text that’s set or returned.</span></span> <span data-ttu-id="65c6c-762">Se este argumento for omitido, o método começará pelo primeiro caractere.</span><span class="sxs-lookup"><span data-stu-id="65c6c-762">If this argument is omitted, this method starts at the first character.</span></span> <span data-ttu-id="65c6c-763">Para acrescentar texto à nota, especifique um número maior do que o número de caracteres da nota existente.</span><span class="sxs-lookup"><span data-stu-id="65c6c-763">To append text to the note, specify a number larger than the number of characters in the existing note.</span></span></param>
        <param name="Length"><span data-ttu-id="65c6c-764">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-764">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-765">O número de caracteres a serem definidos ou retornados.</span><span class="sxs-lookup"><span data-stu-id="65c6c-765">The number of characters to be set or returned.</span></span> <span data-ttu-id="65c6c-766">Se este argumento for omitido, o Microsoft Excel definirá ou retornará caracteres a partir da posição inicial até a final da nota (até 255 caracteres).</span><span class="sxs-lookup"><span data-stu-id="65c6c-766">If this argument is omitted, Microsoft Excel sets or returns characters from the starting position to the end of the note (up to 255 characters).</span></span> <span data-ttu-id="65c6c-767">Se houver mais de 255 caracteres do final da nota, esse método retornará <paramref name="Start" /> apenas 255 caracteres.</span><span class="sxs-lookup"><span data-stu-id="65c6c-767">If there are more than 255 characters from <paramref name="Start" /> to the end of the note, this method returns only 255 characters.</span></span></param>
        <summary><span data-ttu-id="65c6c-768">Retorna ou define a nota de célula associada à célula do canto superior esquerdo do intervalo.</span><span class="sxs-lookup"><span data-stu-id="65c6c-768">Returns or sets the cell note associated with the cell in the upper-left corner of the range.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="65c6c-769">As notas de célula foram substituídas por comentários de intervalo.</span><span class="sxs-lookup"><span data-stu-id="65c6c-769">Cell notes have been replaced by range comments.</span></span> <span data-ttu-id="65c6c-770">Para obter mais informações, consulte o <see cref="T:Microsoft.Office.Interop.Excel.Comment" /> objeto.</span><span class="sxs-lookup"><span data-stu-id="65c6c-770">For more information, see the <see cref="T:Microsoft.Office.Interop.Excel.Comment" /> object.</span></span></para>
          <para><span data-ttu-id="65c6c-771">Para adicionar uma nota que contenha mais de 255 caracteres, use este método uma vez para especificar os primeiros 255 caracteres e, em seguida, use-o novamente para acrescentar o restante da nota (não mais de 255 caracteres por vez).</span><span class="sxs-lookup"><span data-stu-id="65c6c-771">To add a note that contains more than 255 characters, use this method once to specify the first 255 characters, and then use it again to append the remainder of the note (no more than 255 characters at a time).</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberFormat">
      <MemberSignature Language="C#" Value="public object NumberFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object NumberFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.NumberFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property NumberFormat As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ NumberFormat { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(193)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(193)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(193)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65c6c-772">Retorna ou define o código de formatação para o objeto.</span><span class="sxs-lookup"><span data-stu-id="65c6c-772">Returns or sets the format code for the object.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="65c6c-773">Esta propriedade retornará <b>Null</b> caso todas as células do intervalo especificado não tenham o mesmo formato de número.</span><span class="sxs-lookup"><span data-stu-id="65c6c-773">This property returns <b>Null</b> if all cells in the specified range don't have the same number format.</span></span></para>
          <para><span data-ttu-id="65c6c-774">O código de formatação é a mesma cadeia de caracteres da opção Códigos de formato da caixa de diálogo Formatar células.</span><span class="sxs-lookup"><span data-stu-id="65c6c-774">The format code is the same string as the Format Codes option in the Format Cells dialog box.</span></span> <span data-ttu-id="65c6c-775">A <b>função Format</b> usa cadeias de caracteres de código de formato diferentes das de <b>NumberFormat</b> e <see cref="P:Microsoft.Office.Interop.Excel.Range.NumberFormatLocal" /> propriedades.</span><span class="sxs-lookup"><span data-stu-id="65c6c-775">The <b>Format</b> function uses different format code strings than do the <b>NumberFormat</b> and <see cref="P:Microsoft.Office.Interop.Excel.Range.NumberFormatLocal" /> properties.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberFormatLocal">
      <MemberSignature Language="C#" Value="public object NumberFormatLocal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object NumberFormatLocal" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.NumberFormatLocal" />
      <MemberSignature Language="VB.NET" Value="Public Property NumberFormatLocal As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ NumberFormatLocal { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1097)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1097)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1097)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65c6c-776">Retorna ou define o código de formatação para o objeto como uma cadeia de caracteres no idioma do usuário.</span><span class="sxs-lookup"><span data-stu-id="65c6c-776">Returns or sets the format code for the object as a string in the language of the user.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="65c6c-777">A <b>função Format</b> usa cadeias de caracteres de código de formato diferentes das que as propriedades <see cref="P:Microsoft.Office.Interop.Excel.Range.NumberFormat" /> <b>NumberFormatLocal e NumberFormatLocal</b> fazem.</span><span class="sxs-lookup"><span data-stu-id="65c6c-777">The <b>Format</b> function uses different format code strings than do the <see cref="P:Microsoft.Office.Interop.Excel.Range.NumberFormat" /> and <b>NumberFormatLocal</b> properties.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Offset[object RowOffset, object ColumnOffset] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Offset(object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Offset(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Offset(Optional RowOffset As Object, Optional ColumnOffset As Object) As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Offset[System::Object ^, System::Object ^] { Microsoft::Office::Interop::Excel::Range ^ get(System::Object ^ RowOffset, System::Object ^ ColumnOffset); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(254)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(254)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="RowOffset" Type="System.Object" />
        <Parameter Name="ColumnOffset" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="RowOffset"><span data-ttu-id="65c6c-778">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-778">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-779">O número de linhas (positivas, negativas ou igual a 0 (zero)), pelo qual o intervalo deve ser deslocado.</span><span class="sxs-lookup"><span data-stu-id="65c6c-779">The number of rows (positive, negative, or 0 (zero)) by which the range is to be offset.</span></span> <span data-ttu-id="65c6c-780">Valores positivos estão deslocados para baixo, e os valores negativos para cima.</span><span class="sxs-lookup"><span data-stu-id="65c6c-780">Positive values are offset downward, and negative values are offset upward.</span></span> <span data-ttu-id="65c6c-781">O valor padrão é 0.</span><span class="sxs-lookup"><span data-stu-id="65c6c-781">The default value is 0.</span></span></param>
        <param name="ColumnOffset"><span data-ttu-id="65c6c-782">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-782">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-783">O número de colunas (positivas, negativas ou igual a 0 (zero)), pelo qual o intervalo deve ser deslocado.</span><span class="sxs-lookup"><span data-stu-id="65c6c-783">The number of columns (positive, negative, or 0 (zero)) by which the range is to be offset.</span></span> <span data-ttu-id="65c6c-784">Valores positivos estão deslocados para a direita, e os valores negativos para a esquerda.</span><span class="sxs-lookup"><span data-stu-id="65c6c-784">Positive values are offset to the right, and negative values are offset to the left.</span></span> <span data-ttu-id="65c6c-785">O valor padrão é 0.</span><span class="sxs-lookup"><span data-stu-id="65c6c-785">The default value is 0.</span></span></param>
        <summary><span data-ttu-id="65c6c-786">Retorna um <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objeto que representa um intervalo que é deslocada do intervalo especificado.</span><span class="sxs-lookup"><span data-stu-id="65c6c-786">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents a range that’s offset from the specified range.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Orientation">
      <MemberSignature Language="C#" Value="public object Orientation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Orientation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Orientation" />
      <MemberSignature Language="VB.NET" Value="Public Property Orientation As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Orientation { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(134)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(134)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(134)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65c6c-787">Retorna a orientação do texto.</span><span class="sxs-lookup"><span data-stu-id="65c6c-787">Returns the text orientation.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="65c6c-788">Esse valor de orientação retornado pode ser um valor inteiro de 90 a 90 graus.</span><span class="sxs-lookup"><span data-stu-id="65c6c-788">This returned orientation value can be an integer value from 90 to 90 degrees.</span></span></para>
          <para><span data-ttu-id="65c6c-789">Para fontes de dados OLAP, a definição desta propriedade para um campo em uma hierarquia define a orientação para os outros campos na mesma hierarquia.</span><span class="sxs-lookup"><span data-stu-id="65c6c-789">For OLAP data sources, setting this property for one field in a hierarchy sets the orientation for the other fields in the same hierarchy.</span></span> <span data-ttu-id="65c6c-790">Campos de dimensão só podem ser orientados nas áreas de campo de linha, de coluna e de página do relatório de tabela dinâmica.</span><span class="sxs-lookup"><span data-stu-id="65c6c-790">Dimension fields can only be oriented in the row, column, and page field areas of the PivotTable report.</span></span> <span data-ttu-id="65c6c-791">Campos de medida só podem ser orientados na área de dados.</span><span class="sxs-lookup"><span data-stu-id="65c6c-791">Measure fields can only be oriented in the data area.</span></span> <span data-ttu-id="65c6c-792">A definição de uma hierarquia ou de um campo de dados como <b>xlHidden</b> remove a hierarquia ou o campo do relatório de tabela dinâmica.</span><span class="sxs-lookup"><span data-stu-id="65c6c-792">Setting a hierarchy or data field to <b>xlHidden</b> removes the hierarchy or field from the PivotTable report.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="OutlineLevel">
      <MemberSignature Language="C#" Value="public object OutlineLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object OutlineLevel" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.OutlineLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property OutlineLevel As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ OutlineLevel { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(271)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(271)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(271)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65c6c-793">Retorna ou define o nível de tópico atual da linha ou coluna especificada.</span><span class="sxs-lookup"><span data-stu-id="65c6c-793">Returns or sets the current outline level of the specified row or column.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="65c6c-794">O nível um é o nível de resumo mais externo.</span><span class="sxs-lookup"><span data-stu-id="65c6c-794">Level one is the outermost summary level.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PageBreak">
      <MemberSignature Language="C#" Value="public int PageBreak { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PageBreak" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.PageBreak" />
      <MemberSignature Language="VB.NET" Value="Public Property PageBreak As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PageBreak { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(255)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(255)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(255)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65c6c-795">Retorna ou define a posição de uma quebra de página.</span><span class="sxs-lookup"><span data-stu-id="65c6c-795">Returns or sets the location of a page break.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="65c6c-796">O valor de retorno pode ser uma das seguintes <see cref="T:Microsoft.Office.Interop.Excel.XlPageBreak" /> <b /> constantes:</span><span class="sxs-lookup"><span data-stu-id="65c6c-796">The return value can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlPageBreak" /><b />constants:</span></span></para>
          <list type="bullet">
            <item>
              <description><span data-ttu-id="65c6c-797">
                <b>xlPageBreakAutomatic</b>
              </span><span class="sxs-lookup"><span data-stu-id="65c6c-797">
                <b>xlPageBreakAutomatic</b>
              </span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="65c6c-798">
                <b>xlPageBreakManual</b>
              </span><span class="sxs-lookup"><span data-stu-id="65c6c-798">
                <b>xlPageBreakManual</b>
              </span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="65c6c-799">
                <b>xlPageBreakNone</b>
              </span><span class="sxs-lookup"><span data-stu-id="65c6c-799">
                <b>xlPageBreakNone</b>
              </span></span></description>
            </item>
          </list>
          <para><span data-ttu-id="65c6c-800">Essa propriedade pode retornar posições de quebras de página automáticas ou manuais, mas só pode definir posições de quebras de página manuais (ela só pode ser definida como <b>xlPageBreakManual</b> ou <b>xlPageBreakNone</b>).</span><span class="sxs-lookup"><span data-stu-id="65c6c-800">This property can return the location of either automatic or manual page breaks, but it can only set the location of manual breaks (it can only be set to <b>xlPageBreakManual</b> or <b>xlPageBreakNone</b>).</span></span></para>
          <para><span data-ttu-id="65c6c-801">Para remover todas as quebras de página manuais de uma planilha, defina Cells.PageBreak como <b>xlPageBreakNone</b></span><span class="sxs-lookup"><span data-stu-id="65c6c-801">To remove all manual page breaks on a worksheet, set Cells.PageBreak to <b>xlPageBreakNone</b>.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65c6c-802">Retorna o objeto pai do objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="65c6c-802">Returns the parent object for the specified object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public object Parse (object ParseLine, object Destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Parse([in]object ParseLine, [in]object Destination) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Parse(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Parse (Optional ParseLine As Object, Optional Destination As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(477)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ParseLine" Type="System.Object" />
        <Parameter Name="Destination" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ParseLine"><span data-ttu-id="65c6c-803">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-803">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-804">Uma cadeia de caracteres que contém colchetes esquerdo e direito para indicar onde as células devem ser divididas. Por exemplo, "[xxx][xxx]" inseriria os três primeiros caracteres na primeira coluna do intervalo de destino e inseriria os próximos três caracteres na segunda coluna. Se esse argumento for omitido, o Microsoft Excel adivinhará onde dividir as colunas com base no espaçamento da célula superior esquerda do intervalo.</span><span class="sxs-lookup"><span data-stu-id="65c6c-804">A string that contains left and right brackets to indicate where the cells should be split.For example, "[xxx][xxx]" would insert the first three characters into the first column of the destination range, and it would insert the next three characters into the second column.If this argument is omitted, Microsoft Excel guesses where to split the columns based on the spacing of the top left cell in the range.</span></span> <span data-ttu-id="65c6c-805">Se você quiser usar um intervalo diferente para adivinhar a linha de análise, use um <b>objeto Range</b> como <paramref name="ParseLine" /> argumento.</span><span class="sxs-lookup"><span data-stu-id="65c6c-805">If you want to use a different range to guess the parse line, use a <b>Range</b> object as the <paramref name="ParseLine" /> argument.</span></span> <span data-ttu-id="65c6c-806">O intervalo precisa ser uma das células sendo analisada.</span><span class="sxs-lookup"><span data-stu-id="65c6c-806">That range must be one of the cells that's being parsed.</span></span> <span data-ttu-id="65c6c-807">O <paramref name="ParseLine" /> argumento não pode ter mais de 255 caracteres, incluindo colchetes e espaços.</span><span class="sxs-lookup"><span data-stu-id="65c6c-807">The <paramref name="ParseLine" /> argument cannot be longer than 255 characters, including the brackets and spaces.</span></span></param>
        <param name="Destination"><span data-ttu-id="65c6c-808">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-808">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-809">Um <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objeto que representa o canto superior esquerdo do intervalo de destino para os dados analisados.</span><span class="sxs-lookup"><span data-stu-id="65c6c-809">A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the upper-left corner of the destination range for the parsed data.</span></span> <span data-ttu-id="65c6c-810">Se esse argumento for omitido, o Microsoft Excel fará a análise no local.</span><span class="sxs-lookup"><span data-stu-id="65c6c-810">If this argument is omitted, Microsoft Excel parses in place.</span></span></param>
        <summary><span data-ttu-id="65c6c-811">Analisa um intervalo de dados e o divide em várias células.</span><span class="sxs-lookup"><span data-stu-id="65c6c-811">Parses a range of data and breaks it into multiple cells.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="65c6c-812">Distribui o conteúdo do intervalo para preencher várias colunas adjacentes.</span><span class="sxs-lookup"><span data-stu-id="65c6c-812">Distributes the contents of the range to fill several adjacent columns.</span></span> <span data-ttu-id="65c6c-813">O intervalo não pode ter mais de uma coluna de largura.</span><span class="sxs-lookup"><span data-stu-id="65c6c-813">The range can be no more than one column wide.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PasteSpecial">
      <MemberSignature Language="C#" Value="public object PasteSpecial (Microsoft.Office.Interop.Excel.XlPasteType Paste = Microsoft.Office.Interop.Excel.XlPasteType.xlPasteAll, Microsoft.Office.Interop.Excel.XlPasteSpecialOperation Operation = Microsoft.Office.Interop.Excel.XlPasteSpecialOperation.xlPasteSpecialOperationNone, object SkipBlanks, object Transpose);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object PasteSpecial([in]valuetype Microsoft.Office.Interop.Excel.XlPasteType Paste, [in]valuetype Microsoft.Office.Interop.Excel.XlPasteSpecialOperation Operation, [in]object SkipBlanks, [in]object Transpose) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.PasteSpecial(Microsoft.Office.Interop.Excel.XlPasteType,Microsoft.Office.Interop.Excel.XlPasteSpecialOperation,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function PasteSpecial (Optional Paste As XlPasteType = Microsoft.Office.Interop.Excel.XlPasteType.xlPasteAll, Optional Operation As XlPasteSpecialOperation = Microsoft.Office.Interop.Excel.XlPasteSpecialOperation.xlPasteSpecialOperationNone, Optional SkipBlanks As Object, Optional Transpose As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1928)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Paste" Type="Microsoft.Office.Interop.Excel.XlPasteType" />
        <Parameter Name="Operation" Type="Microsoft.Office.Interop.Excel.XlPasteSpecialOperation" />
        <Parameter Name="SkipBlanks" Type="System.Object" />
        <Parameter Name="Transpose" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Paste"><span data-ttu-id="65c6c-814">Opcional <see cref="T:Microsoft.Office.Interop.Excel.XlPasteType" /> .</span><span class="sxs-lookup"><span data-stu-id="65c6c-814">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlPasteType" />.</span></span> <span data-ttu-id="65c6c-815">A parte do intervalo a ser colada.</span><span class="sxs-lookup"><span data-stu-id="65c6c-815">The part of the range to be pasted.</span></span> <span data-ttu-id="65c6c-816">Pode ser uma das seguintes constantes <b>XlPasteType:</b> <b>xlPasteAll default</b><b>xlPasteAllExceptBorders</b><b>xlPasteColumnWidths</b><b>xlPasteComments</b><b>xlPasteFormats</b><b>xlPasteFormulas xlPasteFormulasAndNumberFormats</b><b></b><b>xlPasteValidation</b><b>xlPasteValues</b><b>xlPasteValuesAndNumberFormats</b></span><span class="sxs-lookup"><span data-stu-id="65c6c-816">Can be one of the following <b>XlPasteType</b> constants:<b>xlPasteAll default</b><b>xlPasteAllExceptBorders</b><b>xlPasteColumnWidths</b><b>xlPasteComments</b><b>xlPasteFormats</b><b>xlPasteFormulas</b><b>xlPasteFormulasAndNumberFormats</b><b>xlPasteValidation</b><b>xlPasteValues</b><b>xlPasteValuesAndNumberFormats</b></span></span></param>
        <param name="Operation"><span data-ttu-id="65c6c-817">Opcional <see cref="T:Microsoft.Office.Interop.Excel.XlPasteSpecialOperation" /> .</span><span class="sxs-lookup"><span data-stu-id="65c6c-817">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlPasteSpecialOperation" />.</span></span> <span data-ttu-id="65c6c-818">A operação de colagem.</span><span class="sxs-lookup"><span data-stu-id="65c6c-818">The paste operation.</span></span> <span data-ttu-id="65c6c-819">Pode ser uma das seguintes constantes <b>XlPasteSpecialOperation:</b> <b>xlPasteSpecialOperationAdd</b><b>xlPasteSpecialOperationDivide</b><b>xlPasteSpecialOperationMultiply</b><b>xlPasteSpecialOperationNone</b> <paramref name="default" /> <b>xlPasteSpecialOperationSubtract</b></span><span class="sxs-lookup"><span data-stu-id="65c6c-819">Can be one of the following <b>XlPasteSpecialOperation</b> constants:<b>xlPasteSpecialOperationAdd</b><b>xlPasteSpecialOperationDivide</b><b>xlPasteSpecialOperationMultiply</b><b>xlPasteSpecialOperationNone</b><paramref name="default" /><b>xlPasteSpecialOperationSubtract</b></span></span></param>
        <param name="SkipBlanks"><span data-ttu-id="65c6c-820">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-820">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-821"><b>True</b> para não ter células em branco no intervalo na Área de Transferência colaram no intervalo de destino.</span><span class="sxs-lookup"><span data-stu-id="65c6c-821"><b>True</b> to not have blank cells in the range on the Clipboard pasted into the destination range.</span></span> <span data-ttu-id="65c6c-822">O valor padrão é <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-822">The default value is <b>False</b>.</span></span></param>
        <param name="Transpose"><span data-ttu-id="65c6c-823">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-823">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-824"><b>True</b> para transpor linhas e colunas quando o intervalo é passado.</span><span class="sxs-lookup"><span data-stu-id="65c6c-824"><b>True</b> to transpose rows and columns when the range is pasted.</span></span> <span data-ttu-id="65c6c-825">O valor padrão é <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-825">The default value is <b>False</b>.</span></span></param>
        <summary><span data-ttu-id="65c6c-826">Colará um <see cref="T:Microsoft.Office.Interop.Excel.Range" /> a partir da Área de Transferência no intervalo especificado.</span><span class="sxs-lookup"><span data-stu-id="65c6c-826">Pastes a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> from the Clipboard into the specified range.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Phonetic">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Phonetic Phonetic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Phonetic Phonetic" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Phonetic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Phonetic As Phonetic" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Phonetic ^ Phonetic { Microsoft::Office::Interop::Excel::Phonetic ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1391)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1391)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Phonetic</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65c6c-827">Retorna o objeto que contém informações sobre uma cadeia de caracteres de <see cref="T:Microsoft.Office.Interop.Excel.Phonetic" /> texto phoneética específica em uma célula.</span><span class="sxs-lookup"><span data-stu-id="65c6c-827">Returns the <see cref="T:Microsoft.Office.Interop.Excel.Phonetic" /> object which contains information about a specific phonetic text string in a cell.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="65c6c-828">Esta propriedade é compatível com versões anteriores do Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="65c6c-828">This property provides compatibility with earlier versions of Microsoft Excel.</span></span> <span data-ttu-id="65c6c-829">Você deve usar <b>Phonetics</b>( ), onde index é o número de índice do texto <paramref name="index" /> phoneético, para retornar um único <see cref="T:Microsoft.Office.Interop.Excel.Phonetic" /> objeto.</span><span class="sxs-lookup"><span data-stu-id="65c6c-829">You should use <b>Phonetics</b>(<paramref name="index" />), where index is the index number of the phonetic text, to return a single <see cref="T:Microsoft.Office.Interop.Excel.Phonetic" /> object.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Phonetics">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Phonetics Phonetics { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Phonetics Phonetics" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Phonetics" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Phonetics As Phonetics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Phonetics ^ Phonetics { Microsoft::Office::Interop::Excel::Phonetics ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1811)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1811)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Phonetics</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65c6c-830">Retorna a <see cref="T:Microsoft.Office.Interop.Excel.Phonetics" /> coleção do intervalo.</span><span class="sxs-lookup"><span data-stu-id="65c6c-830">Returns the <see cref="T:Microsoft.Office.Interop.Excel.Phonetics" /> collection of the range.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotCell">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PivotCell PivotCell { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PivotCell PivotCell" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.PivotCell" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PivotCell As PivotCell" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::PivotCell ^ PivotCell { Microsoft::Office::Interop::Excel::PivotCell ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2013)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2013)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PivotCell</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65c6c-831">Retorna um <see cref="T:Microsoft.Office.Interop.Excel.PivotCell" /> objeto que representa uma célula em um relatório de tabela dinâmica.</span><span class="sxs-lookup"><span data-stu-id="65c6c-831">Returns a <see cref="T:Microsoft.Office.Interop.Excel.PivotCell" /> object that represents a cell in a PivotTable report.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotField">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PivotField PivotField { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PivotField PivotField" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.PivotField" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PivotField As PivotField" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::PivotField ^ PivotField { Microsoft::Office::Interop::Excel::PivotField ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(731)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(731)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PivotField</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65c6c-832">Retorna um objeto que representa o campo de tabela dinâmica que contém o canto <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> superior esquerdo do intervalo especificado.</span><span class="sxs-lookup"><span data-stu-id="65c6c-832">Returns a <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> object that represents the PivotTable field containing the upper-left corner of the specified range.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotItem">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PivotItem PivotItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PivotItem PivotItem" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.PivotItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PivotItem As PivotItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::PivotItem ^ PivotItem { Microsoft::Office::Interop::Excel::PivotItem ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(740)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(740)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PivotItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65c6c-833">Retorna um objeto que representa o item de tabela dinâmica que contém o canto <see cref="T:Microsoft.Office.Interop.Excel.PivotItem" /> superior esquerdo do intervalo especificado.</span><span class="sxs-lookup"><span data-stu-id="65c6c-833">Returns a <see cref="T:Microsoft.Office.Interop.Excel.PivotItem" /> object that represents the PivotTable item containing the upper-left corner of the specified range.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotTable">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PivotTable PivotTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PivotTable PivotTable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.PivotTable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PivotTable As PivotTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::PivotTable ^ PivotTable { Microsoft::Office::Interop::Excel::PivotTable ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(716)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(716)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PivotTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65c6c-834">Retorna um objeto que representa o relatório de tabela dinâmica que contém o canto superior esquerdo do intervalo especificado ou o relatório de tabela dinâmica associado ao relatório <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> de gráficos dinâmicas.</span><span class="sxs-lookup"><span data-stu-id="65c6c-834">Returns a <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> object that represents the PivotTable report containing the upper-left corner of the specified range, or the PivotTable report associated with the PivotChart report.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Precedents">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Precedents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Precedents" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Precedents" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Precedents As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Precedents { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(544)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(544)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65c6c-835">Retorna um <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objeto que representa todos os precedentes de uma célula.</span><span class="sxs-lookup"><span data-stu-id="65c6c-835">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents all the precedents of a cell.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="65c6c-836">Pode ser uma seleção múltipla (uma união de objetos <b>Range</b>) caso haja mais de um precedente.</span><span class="sxs-lookup"><span data-stu-id="65c6c-836">This can be a multiple selection (a union of <b>Range</b> objects) if there's more than one precedent.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PrefixCharacter">
      <MemberSignature Language="C#" Value="public object PrefixCharacter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object PrefixCharacter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.PrefixCharacter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PrefixCharacter As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ PrefixCharacter { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(504)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(504)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65c6c-837">Retorna o caractere de prefixo da célula.</span><span class="sxs-lookup"><span data-stu-id="65c6c-837">Returns the prefix character for the cell.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="65c6c-838">Se a <see cref="P:Microsoft.Office.Interop.Excel._Application.TransitionNavigKeys" /> propriedade for <b>False</b>, esse caractere de prefixo será ' para um rótulo de texto ou em branco.</span><span class="sxs-lookup"><span data-stu-id="65c6c-838">If the <see cref="P:Microsoft.Office.Interop.Excel._Application.TransitionNavigKeys" /> property is <b>False</b>, this prefix character will be ' for a text label or blank.</span></span> <span data-ttu-id="65c6c-839">Se a propriedade <b>TransitionNavigKeys</b> for <b>True</b>, esse caractere será ' para um rótulo justificado à esquerda, " para um rótulo justificado à direita, ^ para um rótulo centrado, \ para um rótulo repetido ou em branco.</span><span class="sxs-lookup"><span data-stu-id="65c6c-839">If the <b>TransitionNavigKeys</b> property is <b>True</b>, this character will be ' for a left-justified label, " for a right-justified label, ^ for a centered label, \ for a repeated label, or blank.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Previous">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Previous { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Previous" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Previous" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Previous As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Previous { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(503)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(503)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65c6c-840">Retorna um <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objeto que representa a célula anterior.</span><span class="sxs-lookup"><span data-stu-id="65c6c-840">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the previous cell.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="65c6c-841">Quando o objeto é um intervalo, esta propriedade emula o pressionamento de SHIFT+TAB. Entretanto, ao contrário da combinação de teclas, a propriedade retorna a célula anterior sem selecioná-la.</span><span class="sxs-lookup"><span data-stu-id="65c6c-841">If the object is a range, this property emulates pressing SHIFT+TAB; unlike the key combination, however, the property returns the previous cell without selecting it.</span></span></para>
          <para><span data-ttu-id="65c6c-p265">Em uma planilha protegida, esta propriedade retorna a célula desprotegida anterior. Em uma planilha desprotegida, ela sempre retorna a célula imediatamente à esquerda da célula especificada.</span><span class="sxs-lookup"><span data-stu-id="65c6c-p265">On a protected sheet, this property returns the previous unlocked cell. On an unprotected sheet, this property always returns the cell immediately to the left of the specified cell.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintOut">
      <MemberSignature Language="C#" Value="public object PrintOut (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate, object PrToFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object PrintOut([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate, [in]object PrToFileName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function PrintOut (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object, Optional PrToFileName As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1772)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
        <Parameter Name="PrToFileName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From"><span data-ttu-id="65c6c-844">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-844">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-845">O número da página na qual a impressão deve começar.</span><span class="sxs-lookup"><span data-stu-id="65c6c-845">The number of the page at which to start printing.</span></span> <span data-ttu-id="65c6c-846">Se esse argumento for omitido, a impressão começará do início.</span><span class="sxs-lookup"><span data-stu-id="65c6c-846">If this argument is omitted, printing starts at the beginning.</span></span></param>
        <param name="To"><span data-ttu-id="65c6c-847">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-847">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-848">O número da última página a ser impressa.</span><span class="sxs-lookup"><span data-stu-id="65c6c-848">The number of the last page to print.</span></span> <span data-ttu-id="65c6c-849">Se esse argumento for omitido, a impressão terminará na última página.</span><span class="sxs-lookup"><span data-stu-id="65c6c-849">If this argument is omitted, printing ends with the last page.</span></span></param>
        <param name="Copies"><span data-ttu-id="65c6c-850">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-850">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-851">O número de cópias a serem impressas.</span><span class="sxs-lookup"><span data-stu-id="65c6c-851">The number of copies to print.</span></span> <span data-ttu-id="65c6c-852">Se esse argumento for omitido, será impressa uma cópia.</span><span class="sxs-lookup"><span data-stu-id="65c6c-852">If this argument is omitted, one copy is printed.</span></span></param>
        <param name="Preview"><span data-ttu-id="65c6c-853">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-853">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-854"><b>True</b> para que o Microsoft Excel invoque a visualização de impressão antes de imprimir o objeto; <b>False</b> (ou omitido) para imprimir o objeto imediatamente.</span><span class="sxs-lookup"><span data-stu-id="65c6c-854"><b>True</b> to have Microsoft Excel invoke print preview before printing the object; <b>False</b> (or omitted) to print the object immediately.</span></span></param>
        <param name="ActivePrinter"><span data-ttu-id="65c6c-855">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-855">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-856">Define o nome da impressora ativa.</span><span class="sxs-lookup"><span data-stu-id="65c6c-856">Sets the name of the active printer.</span></span></param>
        <param name="PrintToFile"><span data-ttu-id="65c6c-857">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-857">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-858"><b>True</b> para imprimir em um arquivo.</span><span class="sxs-lookup"><span data-stu-id="65c6c-858"><b>True</b> to print to a file.</span></span> <span data-ttu-id="65c6c-859">Se <b>PrToFileName</b> não for especificado, o Microsoft Excel solicitará que o usuário insira o nome do arquivo de saída.</span><span class="sxs-lookup"><span data-stu-id="65c6c-859">If <b>PrToFileName</b> is not specified, Microsoft Excel prompts the user to enter the name of the output file.</span></span></param>
        <param name="Collate"><span data-ttu-id="65c6c-860">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-860">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-861"><b>True</b> para agrupar várias cópias.</span><span class="sxs-lookup"><span data-stu-id="65c6c-861"><b>True</b> to collate multiple copies.</span></span></param>
        <param name="PrToFileName"><span data-ttu-id="65c6c-862">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-862">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-863">Se <b>PrintToFile</b> for definido como <b>True</b>, esse argumento especificará o nome do arquivo que você deseja imprimir.</span><span class="sxs-lookup"><span data-stu-id="65c6c-863">If <b>PrintToFile</b> is set to <b>True</b>, this argument specifies the name of the file you want to print to.</span></span></param>
        <summary><span data-ttu-id="65c6c-864">Imprime o objeto.</span><span class="sxs-lookup"><span data-stu-id="65c6c-864">Prints the object.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="65c6c-865">"Páginas" nas descrições e refere-se a páginas impressas , não a páginas gerais <paramref name="From" /> na planilha ou pasta de <paramref name="To" /> trabalho.</span><span class="sxs-lookup"><span data-stu-id="65c6c-865">"Pages" in the descriptions of <paramref name="From" /> and <paramref name="To" /> refers to printed pages — not overall pages in the sheet or workbook.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintOutEx">
      <MemberSignature Language="C#" Value="public object PrintOutEx (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate, object PrToFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object PrintOutEx([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate, [in]object PrToFileName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.PrintOutEx(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function PrintOutEx (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object, Optional PrToFileName As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2361)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
        <Parameter Name="PrToFileName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">To be added.</param>
        <param name="To">To be added.</param>
        <param name="Copies">To be added.</param>
        <param name="Preview">To be added.</param>
        <param name="ActivePrinter">To be added.</param>
        <param name="PrintToFile">To be added.</param>
        <param name="Collate">To be added.</param>
        <param name="PrToFileName">To be added.</param>
        <summary><span data-ttu-id="65c6c-866">Reservado para uso interno.</span><span class="sxs-lookup"><span data-stu-id="65c6c-866">Reserved for internal use.</span></span></summary>
        <returns><span data-ttu-id="65c6c-867">Retorna <see cref="T:System.Object" /> .</span><span class="sxs-lookup"><span data-stu-id="65c6c-867">Returns <see cref="T:System.Object" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintPreview">
      <MemberSignature Language="C#" Value="public object PrintPreview (object EnableChanges);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object PrintPreview([in]object EnableChanges) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.PrintPreview(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function PrintPreview (Optional EnableChanges As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(281)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="EnableChanges" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="EnableChanges"><span data-ttu-id="65c6c-868"><b>True para</b> habilitar alterações.</span><span class="sxs-lookup"><span data-stu-id="65c6c-868"><b>True</b> to enable changes.</span></span></param>
        <summary><span data-ttu-id="65c6c-869">Mostra uma visualização de como o objeto aparecerá quando for impresso.</span><span class="sxs-lookup"><span data-stu-id="65c6c-869">Shows a preview of the object as it would look when printed.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryTable">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.QueryTable QueryTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.QueryTable QueryTable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.QueryTable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property QueryTable As QueryTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::QueryTable ^ QueryTable { Microsoft::Office::Interop::Excel::QueryTable ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1386)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1386)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.QueryTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65c6c-870">Retorna um <see cref="T:Microsoft.Office.Interop.Excel.QueryTable" /> objeto que representa a tabela de consulta que intercepta o objeto <see cref="T:Microsoft.Office.Interop.Excel.Range" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="65c6c-870">Returns a <see cref="T:Microsoft.Office.Interop.Excel.QueryTable" /> object that represents the query table that intersects the specified <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Range">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Range[object Cell1, object Cell2] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Range(object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Range(System.Object,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Range[System::Object ^, System::Object ^] { Microsoft::Office::Interop::Excel::Range ^ get(System::Object ^ Cell1, System::Object ^ Cell2); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(197)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(197)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Cell1" Type="System.Object" />
        <Parameter Name="Cell2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Cell1"><span data-ttu-id="65c6c-871">Objeto <b>Required</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-871">Required <b>Object</b>.</span></span> <span data-ttu-id="65c6c-872">O nome do intervalo.</span><span class="sxs-lookup"><span data-stu-id="65c6c-872">The name of the range.</span></span> <span data-ttu-id="65c6c-873">Deve ser uma referência ao estilo A1 na linguagem da macro.</span><span class="sxs-lookup"><span data-stu-id="65c6c-873">This must be an A1-style reference in the language of the macro.</span></span> <span data-ttu-id="65c6c-874">Pode incluir o operador do intervalo (dois pontos), o operador de interseção (um espaço) ou o operador de união (uma vírgula).</span><span class="sxs-lookup"><span data-stu-id="65c6c-874">It can include the range operator (a colon), the intersection operator (a space), or the union operator (a comma).</span></span> <span data-ttu-id="65c6c-875">Ele também pode incluir sinais de dólar, mas eles são ignorados.</span><span class="sxs-lookup"><span data-stu-id="65c6c-875">It can also include dollar signs, but they’re ignored.</span></span> <span data-ttu-id="65c6c-876">Você pode usar um nome definido no local em qualquer parte do intervalo.</span><span class="sxs-lookup"><span data-stu-id="65c6c-876">You can use a local defined name in any part of the range.</span></span> <span data-ttu-id="65c6c-877">Se você usar um nome, será considerado que o nome estará na linguagem da macro.</span><span class="sxs-lookup"><span data-stu-id="65c6c-877">If you use a name, the name is assumed to be in the language of the macro.</span></span></param>
        <param name="Cell2"><span data-ttu-id="65c6c-878">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-878">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-879">A célula no canto superior esquerdo ou no canto inferior direito do intervalo.</span><span class="sxs-lookup"><span data-stu-id="65c6c-879">The cell in the upper-left and lower-right corner of the range.</span></span> <span data-ttu-id="65c6c-880">Pode ser um objeto <b>Range</b> que contém uma única célula, uma coluna inteira ou uma linha inteira, ou pode ser uma cadeia de caracteres que nomeia uma única célula na linguagem da macro.</span><span class="sxs-lookup"><span data-stu-id="65c6c-880">Can be a <b>Range</b> object that contains a single cell, an entire column, or entire row, or it can be a string that names a single cell in the language of the macro.</span></span></param>
        <summary><span data-ttu-id="65c6c-881">Retorna um <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objeto que representa uma célula ou um intervalo de células.</span><span class="sxs-lookup"><span data-stu-id="65c6c-881">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents a cell or a range of cells.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="65c6c-882">Essa propriedade é relativa ao <b>objeto Range</b> .</span><span class="sxs-lookup"><span data-stu-id="65c6c-882">This property is relative to the <b>Range</b> object.</span></span> <span data-ttu-id="65c6c-883">Por exemplo, se a seleção for a célula C3, Selection.Range("B1") retornará a célula D3 porque ela é relativa ao objeto <b>Range</b> retornado pela <see cref="P:Microsoft.Office.Interop.Excel._Application.Selection" /> propriedade.</span><span class="sxs-lookup"><span data-stu-id="65c6c-883">For example, if the selection is cell C3, then Selection.Range("B1") returns cell D3 because it’s relative to the <b>Range</b> object returned by the <see cref="P:Microsoft.Office.Interop.Excel._Application.Selection" /> property.</span></span> <span data-ttu-id="65c6c-884">Por outro lado, ActiveSheet.Range("B1") sempre retorna a célula B1.</span><span class="sxs-lookup"><span data-stu-id="65c6c-884">On the other hand, ActiveSheet.Range("B1") always returns cell B1.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadingOrder">
      <MemberSignature Language="C#" Value="public int ReadingOrder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReadingOrder" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.ReadingOrder" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadingOrder As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReadingOrder { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(975)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(975)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(975)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65c6c-885">Retorna ou define o sentido de leitura do objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="65c6c-885">Returns or sets the reading order for the specified object.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="65c6c-886">O valor de retorno pode ser uma das seguintes constantes: <b>xlRTL</b> (direita para esquerda), <b>xlLTR</b> (esquerda para direita) ou <b>xlContext</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-886">The return value can be one of the following constants: <b>xlRTL</b> (right-to-left), <b>xlLTR</b> (left-to-right), or <b>xlContext</b>.</span></span></para>
          <para><span data-ttu-id="65c6c-887">[!OBSERVAçãO] Alguma dessas constantes podem não estar disponíveis para você, dependendo do suporte de idioma (inglês dos EUA, por exemplo) que você selecionou ou instalou.</span><span class="sxs-lookup"><span data-stu-id="65c6c-887">Some of these constants may not be available to you, depending on the language support (U.S. English, for example) that you've selected or installed.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveDuplicates">
      <MemberSignature Language="C#" Value="public void RemoveDuplicates (object Columns, Microsoft.Office.Interop.Excel.XlYesNoGuess Header = Microsoft.Office.Interop.Excel.XlYesNoGuess.xlNo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveDuplicates([in]object Columns, [in]valuetype Microsoft.Office.Interop.Excel.XlYesNoGuess Header) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.RemoveDuplicates(System.Object,Microsoft.Office.Interop.Excel.XlYesNoGuess)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveDuplicates (Optional Columns As Object, Optional Header As XlYesNoGuess = Microsoft.Office.Interop.Excel.XlYesNoGuess.xlNo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2492)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Columns" Type="System.Object" />
        <Parameter Name="Header" Type="Microsoft.Office.Interop.Excel.XlYesNoGuess" />
      </Parameters>
      <Docs>
        <param name="Columns"><span data-ttu-id="65c6c-888">Matriz <b>de</b> objetos opcional dos índices das colunas que contêm as informações duplicadas.</span><span class="sxs-lookup"><span data-stu-id="65c6c-888">Optional <b>Object</b> Array of indexes of the columns that contain the duplicate information.</span></span>  <span data-ttu-id="65c6c-889">Se nada for passado, ele supõe que todas as colunas contêm informações duplicadas.</span><span class="sxs-lookup"><span data-stu-id="65c6c-889">If nothing is passed then it assumes all columns contain duplicate information.</span></span></param>
        <param name="Header"><span data-ttu-id="65c6c-890">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlYesNoGuess" /> Specifies whether the first row contains header information.</span><span class="sxs-lookup"><span data-stu-id="65c6c-890">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlYesNoGuess" /> Specifies whether the first row contains header information.</span></span>  <span data-ttu-id="65c6c-891"><see cref="F:Microsoft.Office.Interop.Excel.XlYesNoGuess.xlNo" /> é o valor padrão; <see cref="F:Microsoft.Office.Interop.Excel.XlYesNoGuess.xlGuess" /> especifique se deseja que o Excel tente determinar o header.</span><span class="sxs-lookup"><span data-stu-id="65c6c-891"><see cref="F:Microsoft.Office.Interop.Excel.XlYesNoGuess.xlNo" /> is the default value; specify <see cref="F:Microsoft.Office.Interop.Excel.XlYesNoGuess.xlGuess" /> if you want Excel to attempt to determine the header.</span></span></param>
        <summary><span data-ttu-id="65c6c-892">Remove valores duplicados de um intervalo de valores.</span><span class="sxs-lookup"><span data-stu-id="65c6c-892">Removes duplicate values from a range of values.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveSubtotal">
      <MemberSignature Language="C#" Value="public object RemoveSubtotal ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object RemoveSubtotal() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.RemoveSubtotal" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveSubtotal () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ RemoveSubtotal();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(883)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="65c6c-893">Remove subtotais de uma lista.</span><span class="sxs-lookup"><span data-stu-id="65c6c-893">Removes subtotals from a list.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public bool Replace (object What, object Replacement, object LookAt, object SearchOrder, object MatchCase, object MatchByte, object SearchFormat, object ReplaceFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Replace([in]object What, [in]object Replacement, [in]object LookAt, [in]object SearchOrder, [in]object MatchCase, [in]object MatchByte, [in]object SearchFormat, [in]object ReplaceFormat) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Replace(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (What As Object, Replacement As Object, Optional LookAt As Object, Optional SearchOrder As Object, Optional MatchCase As Object, Optional MatchByte As Object, Optional SearchFormat As Object, Optional ReplaceFormat As Object) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(226)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="What" Type="System.Object" />
        <Parameter Name="Replacement" Type="System.Object" />
        <Parameter Name="LookAt" Type="System.Object" />
        <Parameter Name="SearchOrder" Type="System.Object" />
        <Parameter Name="MatchCase" Type="System.Object" />
        <Parameter Name="MatchByte" Type="System.Object" />
        <Parameter Name="SearchFormat" Type="System.Object" />
        <Parameter Name="ReplaceFormat" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="What"><span data-ttu-id="65c6c-894">Objeto <b>Required</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-894">Required <b>Object</b>.</span></span> <span data-ttu-id="65c6c-895">A cadeia de caracteres que você deseja que o Microsoft Excel procure.</span><span class="sxs-lookup"><span data-stu-id="65c6c-895">The string you want Microsoft Excel to search for.</span></span></param>
        <param name="Replacement"><span data-ttu-id="65c6c-896">Objeto <b>Required</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-896">Required <b>Object</b>.</span></span> <span data-ttu-id="65c6c-897">A cadeia de caracteres de substituição.</span><span class="sxs-lookup"><span data-stu-id="65c6c-897">The replacement string.</span></span></param>
        <param name="LookAt"><span data-ttu-id="65c6c-898">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-898">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-899">Pode ser uma das seguintes <see cref="T:Microsoft.Office.Interop.Excel.XlLookAt" /> constantes: <b>xlWhole</b> ou <b>xlPart</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-899">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlLookAt" /> constants: <b>xlWhole</b> or <b>xlPart</b>.</span></span></param>
        <param name="SearchOrder"><span data-ttu-id="65c6c-900">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-900">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-901">Pode ser uma das seguintes <see cref="T:Microsoft.Office.Interop.Excel.XlSearchOrder" /> constantes: <b>xlByRows</b> ou <b>xlByColumns</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-901">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlSearchOrder" /> constants: <b>xlByRows</b> or <b>xlByColumns</b>.</span></span></param>
        <param name="MatchCase"><span data-ttu-id="65c6c-902">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-902">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-903"><b>True</b> para fazer com que a pesquisa passe a diferenciar maiúsculas de minúsculas.</span><span class="sxs-lookup"><span data-stu-id="65c6c-903"><b>True</b> to make the search case sensitive.</span></span></param>
        <param name="MatchByte"><span data-ttu-id="65c6c-904">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-904">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-905">Você só poderá usar esse argumento se tiver selecionado ou instalado o suporte a idiomas de byte duplo no Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="65c6c-905">You can use this argument only if you’ve selected or installed double-byte language support in Microsoft Excel.</span></span> <span data-ttu-id="65c6c-906"><b>True</b> para fazer caracteres de byte duplo corresponderem apenas a caracteres de byte duplo; <b>False</b> para fazer caracteres de byte duplo corresponderem aos seus equivalentes de byte único.</span><span class="sxs-lookup"><span data-stu-id="65c6c-906"><b>True</b> to have double-byte characters match only double-byte characters; <b>False</b> to have double-byte characters match their single-byte equivalents.</span></span></param>
        <param name="SearchFormat"><span data-ttu-id="65c6c-907">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-907">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-908">O formato de pesquisa para o método.</span><span class="sxs-lookup"><span data-stu-id="65c6c-908">The search format for the method.</span></span></param>
        <param name="ReplaceFormat"><span data-ttu-id="65c6c-909">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-909">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-910">O formato de substituição para o método.</span><span class="sxs-lookup"><span data-stu-id="65c6c-910">The replace format for the method.</span></span></param>
        <summary><span data-ttu-id="65c6c-911">Retorna um <b>Boolean</b> que indica caracteres em células dentro do intervalo especificado.</span><span class="sxs-lookup"><span data-stu-id="65c6c-911">Returns a <b>Boolean</b> indicating characters in cells within the specified range.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="65c6c-912">O uso desse método não altera a seleção ou a célula ativa.</span><span class="sxs-lookup"><span data-stu-id="65c6c-912">Using this method doesn’t change either the selection or the active cell.</span></span></para>
          <para><span data-ttu-id="65c6c-913">As configurações <paramref name="LookAt" /> para , e são <paramref name="SearchOrder" /> <paramref name="MatchCase" /> <paramref name="MatchByte" /> salvas sempre que você usa esse método.</span><span class="sxs-lookup"><span data-stu-id="65c6c-913">The settings for <paramref name="LookAt" />, <paramref name="SearchOrder" />, <paramref name="MatchCase" />, and <paramref name="MatchByte" /> are saved each time you use this method.</span></span> <span data-ttu-id="65c6c-914">Se você não especificar valores para esses argumentos na próxima vez que chamar o método, os valores salvos serão usados.</span><span class="sxs-lookup"><span data-stu-id="65c6c-914">If you don’t specify values for these arguments the next time you call the method, the saved values are used.</span></span> <span data-ttu-id="65c6c-915">Definir esses argumentos alterará as configurações na caixa de diálogo Find e, ao alterar as configurações na caixa de diálogo Find, os valores salvos que são usados se você omitir os argumentos serão alterados.</span><span class="sxs-lookup"><span data-stu-id="65c6c-915">Setting these arguments changes the settings in the Find dialog box, and changing the settings in the Find dialog box changes the saved values that are used if you omit the arguments.</span></span> <span data-ttu-id="65c6c-916">Para evitar problemas, defina estes argumentos explicitamente sempre que usar este método.</span><span class="sxs-lookup"><span data-stu-id="65c6c-916">To avoid problems, set these arguments explicitly each time you use this method.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Resize">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Resize[object RowSize, object ColumnSize] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Resize(object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Resize(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Resize(Optional RowSize As Object, Optional ColumnSize As Object) As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Resize[System::Object ^, System::Object ^] { Microsoft::Office::Interop::Excel::Range ^ get(System::Object ^ RowSize, System::Object ^ ColumnSize); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(256)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(256)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="RowSize" Type="System.Object" />
        <Parameter Name="ColumnSize" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="RowSize"><span data-ttu-id="65c6c-917">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-917">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-918">O número de linhas no novo intervalo.</span><span class="sxs-lookup"><span data-stu-id="65c6c-918">The number of rows in the new range.</span></span> <span data-ttu-id="65c6c-919">Se esse argumento for omitido, o número de linhas no intervalo permanecerá igual.</span><span class="sxs-lookup"><span data-stu-id="65c6c-919">If this argument is omitted, the number of rows in the range remains the same.</span></span></param>
        <param name="ColumnSize"><span data-ttu-id="65c6c-920">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-920">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-921">O número de colunas no novo intervalo.</span><span class="sxs-lookup"><span data-stu-id="65c6c-921">The number of columns in the new range.</span></span> <span data-ttu-id="65c6c-922">Se esse argumento for omitido, o número de colunas no intervalo permanecerá igual.</span><span class="sxs-lookup"><span data-stu-id="65c6c-922">If this argument is omitted, the number of columns in the range remains the same.</span></span></param>
        <summary><span data-ttu-id="65c6c-923">Redimensiona o intervalo especificado.</span><span class="sxs-lookup"><span data-stu-id="65c6c-923">Resizes the specified range.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Row">
      <MemberSignature Language="C#" Value="public int Row { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Row" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Row" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Row As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Row { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(257)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(257)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65c6c-924">Retorna o número da primeira linha da primeira área do intervalo.</span><span class="sxs-lookup"><span data-stu-id="65c6c-924">Returns the number of the first row of the first area in the range.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowDifferences">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range RowDifferences (object Comparison);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Range RowDifferences([in]object Comparison) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.RowDifferences(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function RowDifferences (Comparison As Object) As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::Range ^ RowDifferences(System::Object ^ Comparison);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(511)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Comparison" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Comparison"><span data-ttu-id="65c6c-925">Objeto <b>Required</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-925">Required <b>Object</b>.</span></span> <span data-ttu-id="65c6c-926">Uma única célula a ser comparada ao intervalo especificado.</span><span class="sxs-lookup"><span data-stu-id="65c6c-926">A single cell to compare with the specified range.</span></span></param>
        <summary><span data-ttu-id="65c6c-927">Retorna um objeto que representa todas as células cujo conteúdo é diferente daqueles da <see cref="T:Microsoft.Office.Interop.Excel.Range" /> célula de comparação em cada linha.</span><span class="sxs-lookup"><span data-stu-id="65c6c-927">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents all the cells whose contents are different from those of the comparison cell in each row.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowHeight">
      <MemberSignature Language="C#" Value="public object RowHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object RowHeight" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.RowHeight" />
      <MemberSignature Language="VB.NET" Value="Public Property RowHeight As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ RowHeight { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(272)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(272)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(272)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65c6c-928">Retorna a altura de todas as linhas no intervalo especificado, medida em pontos.</span><span class="sxs-lookup"><span data-stu-id="65c6c-928">Returns the height of all the rows in the range specified, measured in points.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="65c6c-929">Essa propriedade retorna <b>Null</b> se as linhas no intervalo especificado não têm a mesma altura.</span><span class="sxs-lookup"><span data-stu-id="65c6c-929">This property returns <b>Null</b> if the rows in the specified range aren’t all the same height.</span></span></para>
          <para><span data-ttu-id="65c6c-930">Para uma única linha, o valor da <see cref="P:Microsoft.Office.Interop.Excel.Range.Height" /> propriedade é igual ao valor da propriedade <b>RowHeight.</b></span><span class="sxs-lookup"><span data-stu-id="65c6c-930">For a single row, the value of the <see cref="P:Microsoft.Office.Interop.Excel.Range.Height" /> property is equal to the value of the <b>RowHeight</b> property.</span></span> <span data-ttu-id="65c6c-931">No entanto, você também pode usar <b>a propriedade Height</b> para retornar a altura total de um intervalo de células.</span><span class="sxs-lookup"><span data-stu-id="65c6c-931">However, you can also use the <b>Height</b> property to return the total height of a range of cells.</span></span></para>
          <para><span data-ttu-id="65c6c-932">Outras diferenças entre <b>RowHeight</b> e <b>Height</b> incluem o seguinte:</span><span class="sxs-lookup"><span data-stu-id="65c6c-932">Other differences between <b>RowHeight</b> and <b>Height</b> include the following:</span></span></para>
          <list type="bullet">
            <item>
              <description><span data-ttu-id="65c6c-933">
                <b>Height</b> é somente leitura.</span><span class="sxs-lookup"><span data-stu-id="65c6c-933">
                <b>Height</b> is read-only.</span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="65c6c-934">Se você retornar a propriedade <b>RowHeight</b> de várias linhas, obterá a altura da linha de cada uma das linhas (se todas as linhas têm a mesma altura) ou <b>Null</b> (se elas são alturas diferentes).</span><span class="sxs-lookup"><span data-stu-id="65c6c-934">If you return the <b>RowHeight</b> property of several rows, you will either get the row height of each of the rows (if all the rows are the same height) or <b>Null</b> (if they’re different heights).</span></span> <span data-ttu-id="65c6c-935">Se você retornar a propriedade <b>Height</b> de várias linhas, obterá a altura total de todas as linhas.</span><span class="sxs-lookup"><span data-stu-id="65c6c-935">If you return the <b>Height</b> property of several rows, you will get the total height of all the rows.</span></span></description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Rows">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Rows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Rows" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Rows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Rows As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Rows { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(258)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(258)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65c6c-936">Retorna um <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objeto que representa as linhas no intervalo especificado.</span><span class="sxs-lookup"><span data-stu-id="65c6c-936">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the rows in the specified range.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="65c6c-937">Quando aplicado a um objeto <b>Range</b> que é uma seleção múltipla, essa propriedade retorna linhas somente da primeira área do intervalo.</span><span class="sxs-lookup"><span data-stu-id="65c6c-937">When applied to a <b>Range</b> object that’s a multiple selection, this property returns rows from only the first area of the range.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public object Run (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Run([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Run(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Run (Optional Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(259)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="65c6c-938">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-938">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-939">Os argumentos que devem ser passados para a função.</span><span class="sxs-lookup"><span data-stu-id="65c6c-939">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg2"><span data-ttu-id="65c6c-940">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-940">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-941">Os argumentos que devem ser passados para a função.</span><span class="sxs-lookup"><span data-stu-id="65c6c-941">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg3"><span data-ttu-id="65c6c-942">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-942">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-943">Os argumentos que devem ser passados para a função.</span><span class="sxs-lookup"><span data-stu-id="65c6c-943">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg4"><span data-ttu-id="65c6c-944">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-944">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-945">Os argumentos que devem ser passados para a função.</span><span class="sxs-lookup"><span data-stu-id="65c6c-945">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg5"><span data-ttu-id="65c6c-946">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-946">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-947">Os argumentos que devem ser passados para a função.</span><span class="sxs-lookup"><span data-stu-id="65c6c-947">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg6"><span data-ttu-id="65c6c-948">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-948">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-949">Os argumentos que devem ser passados para a função.</span><span class="sxs-lookup"><span data-stu-id="65c6c-949">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg7"><span data-ttu-id="65c6c-950">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-950">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-951">Os argumentos que devem ser passados para a função.</span><span class="sxs-lookup"><span data-stu-id="65c6c-951">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg8"><span data-ttu-id="65c6c-952">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-952">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-953">Os argumentos que devem ser passados para a função.</span><span class="sxs-lookup"><span data-stu-id="65c6c-953">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg9"><span data-ttu-id="65c6c-954">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-954">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-955">Os argumentos que devem ser passados para a função.</span><span class="sxs-lookup"><span data-stu-id="65c6c-955">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg10"><span data-ttu-id="65c6c-956">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-956">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-957">Os argumentos que devem ser passados para a função.</span><span class="sxs-lookup"><span data-stu-id="65c6c-957">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg11"><span data-ttu-id="65c6c-958">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-958">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-959">Os argumentos que devem ser passados para a função.</span><span class="sxs-lookup"><span data-stu-id="65c6c-959">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg12"><span data-ttu-id="65c6c-960">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-960">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-961">Os argumentos que devem ser passados para a função.</span><span class="sxs-lookup"><span data-stu-id="65c6c-961">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg13"><span data-ttu-id="65c6c-962">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-962">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-963">Os argumentos que devem ser passados para a função.</span><span class="sxs-lookup"><span data-stu-id="65c6c-963">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg14"><span data-ttu-id="65c6c-964">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-964">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-965">Os argumentos que devem ser passados para a função.</span><span class="sxs-lookup"><span data-stu-id="65c6c-965">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg15"><span data-ttu-id="65c6c-966">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-966">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-967">Os argumentos que devem ser passados para a função.</span><span class="sxs-lookup"><span data-stu-id="65c6c-967">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg16"><span data-ttu-id="65c6c-968">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-968">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-969">Os argumentos que devem ser passados para a função.</span><span class="sxs-lookup"><span data-stu-id="65c6c-969">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg17"><span data-ttu-id="65c6c-970">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-970">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-971">Os argumentos que devem ser passados para a função.</span><span class="sxs-lookup"><span data-stu-id="65c6c-971">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg18"><span data-ttu-id="65c6c-972">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-972">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-973">Os argumentos que devem ser passados para a função.</span><span class="sxs-lookup"><span data-stu-id="65c6c-973">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg19"><span data-ttu-id="65c6c-974">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-974">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-975">Os argumentos que devem ser passados para a função.</span><span class="sxs-lookup"><span data-stu-id="65c6c-975">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg20"><span data-ttu-id="65c6c-976">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-976">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-977">Os argumentos que devem ser passados para a função.</span><span class="sxs-lookup"><span data-stu-id="65c6c-977">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg21"><span data-ttu-id="65c6c-978">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-978">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-979">Os argumentos que devem ser passados para a função.</span><span class="sxs-lookup"><span data-stu-id="65c6c-979">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg22"><span data-ttu-id="65c6c-980">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-980">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-981">Os argumentos que devem ser passados para a função.</span><span class="sxs-lookup"><span data-stu-id="65c6c-981">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg23"><span data-ttu-id="65c6c-982">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-982">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-983">Os argumentos que devem ser passados para a função.</span><span class="sxs-lookup"><span data-stu-id="65c6c-983">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg24"><span data-ttu-id="65c6c-984">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-984">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-985">Os argumentos que devem ser passados para a função.</span><span class="sxs-lookup"><span data-stu-id="65c6c-985">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg25"><span data-ttu-id="65c6c-986">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-986">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-987">Os argumentos que devem ser passados para a função.</span><span class="sxs-lookup"><span data-stu-id="65c6c-987">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg26"><span data-ttu-id="65c6c-988">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-988">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-989">Os argumentos que devem ser passados para a função.</span><span class="sxs-lookup"><span data-stu-id="65c6c-989">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg27"><span data-ttu-id="65c6c-990">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-990">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-991">Os argumentos que devem ser passados para a função.</span><span class="sxs-lookup"><span data-stu-id="65c6c-991">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg28"><span data-ttu-id="65c6c-992">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-992">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-993">Os argumentos que devem ser passados para a função.</span><span class="sxs-lookup"><span data-stu-id="65c6c-993">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg29"><span data-ttu-id="65c6c-994">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-994">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-995">Os argumentos que devem ser passados para a função.</span><span class="sxs-lookup"><span data-stu-id="65c6c-995">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg30"><span data-ttu-id="65c6c-996">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-996">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-997">Os argumentos que devem ser passados para a função.</span><span class="sxs-lookup"><span data-stu-id="65c6c-997">The arguments that should be passed to the function.</span></span></param>
        <summary><span data-ttu-id="65c6c-998">Executa a macro do Microsoft Excel neste local.</span><span class="sxs-lookup"><span data-stu-id="65c6c-998">Runs the Microsoft Excel macro at this location.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="65c6c-999">O intervalo precisa estar em uma folha de macro.</span><span class="sxs-lookup"><span data-stu-id="65c6c-999">The range must be on a macro sheet.</span></span></para>
          <para><span data-ttu-id="65c6c-1000">Você não pode usar argumentos nomeados com este método.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1000">You cannot use named arguments with this method.</span></span> <span data-ttu-id="65c6c-1001">Os argumentos devem ser passados por posição.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1001">Arguments must be passed by position.</span></span></para>
          <para><span data-ttu-id="65c6c-1002">O método <b>Run</b> retorna o que a macro chamada retornar. </span><span class="sxs-lookup"><span data-stu-id="65c6c-1002">The <b>Run</b> method returns whatever the called macro returns.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public object Select ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Select() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Select" />
      <MemberSignature Language="VB.NET" Value="Public Function Select () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Select();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(235)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="65c6c-1003">Seleciona o objeto.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1003">Selects the object.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="65c6c-1004">Para selecionar uma célula ou um intervalo de células, use o método Select.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1004">To select a cell or a range of cells, use the Select method.</span></span> <span data-ttu-id="65c6c-1005">Para tornar uma única célula a célula ativa, use o <see cref="M:Microsoft.Office.Interop.Excel.Range.Activate" /> método.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1005">To make a single cell the active cell, use the <see cref="M:Microsoft.Office.Interop.Excel.Range.Activate" /> method.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ServerActions">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Actions ServerActions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Actions ServerActions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.ServerActions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServerActions As Actions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Actions ^ ServerActions { Microsoft::Office::Interop::Excel::Actions ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2491)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2491)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Actions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65c6c-1006">Especifica as ações que podem ser executadas no servidor do SharePoint para um <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objeto.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1006">Specifies the actions that can be performed on the SharePoint server for a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.Actions" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPhonetic">
      <MemberSignature Language="C#" Value="public void SetPhonetic ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPhonetic() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.SetPhonetic" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPhonetic ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPhonetic();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1812)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="65c6c-1007">Cria <see cref="T:Microsoft.Office.Interop.Excel.Phonetic" /> objetos para todas as células no intervalo especificado.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1007">Creates <see cref="T:Microsoft.Office.Interop.Excel.Phonetic" /> objects for all the cells in the specified range.</span></span></summary>
        <remarks><para><span data-ttu-id="65c6c-1008">Quaisquer objetos <b>Phonetic</b> existentes no intervalo especificado serão sobrescritos (excluídos) pelos novos objetos adicionados com o uso deste método.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1008">Any existing <b>Phonetic</b> objects in the specified range are automatically overwritten (deleted) by the new objects you add using this method.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public object Show ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Show() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Show" />
      <MemberSignature Language="VB.NET" Value="Public Function Show () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Show();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(496)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="65c6c-1009">Rola pelo conteúdo da janela ativa a fim de mover o intervalo para a parte visível.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1009">Scrolls through the contents of the active window to move the range into view.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="65c6c-1010">O intervalo deve compreender uma única célula do documento ativo.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1010">The range must consist of a single cell in the active document.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowDependents">
      <MemberSignature Language="C#" Value="public object ShowDependents (object Remove);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ShowDependents([in]object Remove) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ShowDependents(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShowDependents (Optional Remove As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(877)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Remove" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Remove"><span data-ttu-id="65c6c-1011">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1011">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-1012"><b>True</b> para remover um nível de setas rastreadoras para dependentes diretos; <b>False</b> para expandir um nível de setas rastreadoras.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1012"><b>True</b> to remove one level of tracer arrows to direct dependents; <b>False</b> to expand one level of tracer arrows.</span></span> <span data-ttu-id="65c6c-1013">O valor padrão é <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1013">The default value is <b>False</b>.</span></span></param>
        <summary><span data-ttu-id="65c6c-1014">Desenha setas rastreadoras para os dependentes diretos do intervalo.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1014">Draws tracer arrows to the direct dependents of the range.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowDetail">
      <MemberSignature Language="C#" Value="public object ShowDetail { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ShowDetail" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.ShowDetail" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowDetail As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ShowDetail { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(585)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(585)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(585)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65c6c-1015">Retorna <b>True</b> se o contorno estiver expandido para o intervalo especificado (para que os detalhes da coluna ou linha sejam visíveis).</span><span class="sxs-lookup"><span data-stu-id="65c6c-1015">Returns <b>True</b> if the outline is expanded for the specified range (so that the detail of the column or row is visible).</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="65c6c-1016">O intervalo especificado precisa ser uma única linha ou coluna de resumo na estrutura de tópicos.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1016">The specified range must be a single summary column or row in an outline.</span></span></para>
          <para><span data-ttu-id="65c6c-1017">Se o intervalo estiver em um relatório de tabela dinâmica, essa propriedade será definida como <b>True</b> se o item estiver exibindo detalhes.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1017">If the range is in a PivotTable report, this property is set to <b>True</b> if the item is showing detail.</span></span></para>
          <para><span data-ttu-id="65c6c-1018">Quando o intervalo especificado não está em um relatório de tabela dinâmica, estas instruções são verdadeiras:</span><span class="sxs-lookup"><span data-stu-id="65c6c-1018">If the specified range isn’t in a PivotTable report, the following statements are true:</span></span></para>
          <list type="bullet">
            <item>
              <description><span data-ttu-id="65c6c-1019">O intervalo deve estar em uma única coluna ou linha de resumo.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1019">The range must be in a single summary row or column.</span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="65c6c-1020">Essa propriedade <b>retornará False</b> se qualquer um dos filhos da linha ou coluna estiver oculto.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1020">This property returns <b>False</b> if any of the children of the row or column are hidden.</span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="65c6c-1021">Definir essa propriedade como <b>True</b> equivale a mostrar todos os filhos da linha ou coluna de resumo.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1021">Setting this property to <b>True</b> is equivalent to showing all the children of the summary row or column.</span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="65c6c-1022">A definição dessa propriedade como <b>False</b> é equivalente a ocultar todos os filhos da coluna ou linha de resumo.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1022">Setting this property to <b>False</b> is equivalent to hiding all the children of the summary row or column.</span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="65c6c-p326">Quando o intervalo especificado está em um relatório de tabela dinâmica, é possível definir essa propriedade para mais de uma célula ao mesmo tempo se o intervalo for contíguo. A propriedade só poderá ser retornada se o intervalo for uma única célula.</span><span class="sxs-lookup"><span data-stu-id="65c6c-p326">If the specified range is in a PivotTable report, it’s possible to set this property for more than one cell at a time if the range is contiguous. This property can be returned only if the range is a single cell.</span></span></description>
            </item>
          </list>
          <para><span data-ttu-id="65c6c-1025">Esta propriedade não está disponível para fontes de dados OLAP.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1025">This property isn’t available for OLAP data sources.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowErrors">
      <MemberSignature Language="C#" Value="public object ShowErrors ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ShowErrors() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ShowErrors" />
      <MemberSignature Language="VB.NET" Value="Public Function ShowErrors () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ShowErrors();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(878)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="65c6c-1026">Desenha setas rastreadoras através da árvore precedentes para a célula que é a origem do erro e retorna o intervalo que contém essa célula.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1026">Draws tracer arrows through the precedents tree to the cell that’s the source of the error and returns the range that contains that cell.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowPrecedents">
      <MemberSignature Language="C#" Value="public object ShowPrecedents (object Remove);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ShowPrecedents([in]object Remove) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ShowPrecedents(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShowPrecedents (Optional Remove As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(879)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Remove" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Remove"><span data-ttu-id="65c6c-1027">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1027">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-1028"><b>True</b> para remover um nível de setas rastreadoras para precedentes diretos; <b>False</b> para expandir um nível de setas rastreadoras.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1028"><b>True</b> to remove one level of tracer arrows to direct precedents; <b>False</b> to expand one level of tracer arrows.</span></span> <span data-ttu-id="65c6c-1029">O valor padrão é <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1029">The default value is <b>False</b>.</span></span></param>
        <summary><span data-ttu-id="65c6c-1030">Desenha setas rastreadoras para os precedentes diretos do intervalo.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1030">Draws tracer arrows to the direct precedents of the range.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShrinkToFit">
      <MemberSignature Language="C#" Value="public object ShrinkToFit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ShrinkToFit" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.ShrinkToFit" />
      <MemberSignature Language="VB.NET" Value="Public Property ShrinkToFit As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ShrinkToFit { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(209)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(209)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(209)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65c6c-1031">Determina se o texto será automaticamente diminuído para se ajustar à largura da coluna disponível.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1031">Determines if text automatically shrinks to fit in the available column width.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="65c6c-1032">Essa propriedade retornará <b>True</b> se o texto for automaticamente diminuído para caber na largura da coluna disponível e <b>Null</b> se essa propriedade não estiver definida com o mesmo valor para todas as células no intervalo especificado.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1032">This property returns <b>True</b> if text automatically shrinks to fit in the available column width and <b>Null</b> if this property isn’t set to the same value for all cells in the specified range.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartTags">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.SmartTags SmartTags { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.SmartTags SmartTags" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.SmartTags" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SmartTags As SmartTags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::SmartTags ^ SmartTags { Microsoft::Office::Interop::Excel::SmartTags ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2016)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2016)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.SmartTags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65c6c-1033">Retorna um <see cref="T:Microsoft.Office.Interop.Excel.SmartTags" /> objeto que representa o identificador da célula especificada.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1033">Returns a <see cref="T:Microsoft.Office.Interop.Excel.SmartTags" /> object representing the identifier for the specified cell.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public object Sort (object Key1, Microsoft.Office.Interop.Excel.XlSortOrder Order1 = Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending, object Key2, object Type, Microsoft.Office.Interop.Excel.XlSortOrder Order2 = Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending, object Key3, Microsoft.Office.Interop.Excel.XlSortOrder Order3 = Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending, Microsoft.Office.Interop.Excel.XlYesNoGuess Header = Microsoft.Office.Interop.Excel.XlYesNoGuess.xlNo, object OrderCustom, object MatchCase, Microsoft.Office.Interop.Excel.XlSortOrientation Orientation = Microsoft.Office.Interop.Excel.XlSortOrientation.xlSortRows, Microsoft.Office.Interop.Excel.XlSortMethod SortMethod = Microsoft.Office.Interop.Excel.XlSortMethod.xlPinYin, Microsoft.Office.Interop.Excel.XlSortDataOption DataOption1 = Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortNormal, Microsoft.Office.Interop.Excel.XlSortDataOption DataOption2 = Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortNormal, Microsoft.Office.Interop.Excel.XlSortDataOption DataOption3 = Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortNormal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Sort([in]object Key1, [in]valuetype Microsoft.Office.Interop.Excel.XlSortOrder Order1, [in]object Key2, [in]object Type, [in]valuetype Microsoft.Office.Interop.Excel.XlSortOrder Order2, [in]object Key3, [in]valuetype Microsoft.Office.Interop.Excel.XlSortOrder Order3, [in]valuetype Microsoft.Office.Interop.Excel.XlYesNoGuess Header, [in]object OrderCustom, [in]object MatchCase, [in]valuetype Microsoft.Office.Interop.Excel.XlSortOrientation Orientation, [in]valuetype Microsoft.Office.Interop.Excel.XlSortMethod SortMethod, [in]valuetype Microsoft.Office.Interop.Excel.XlSortDataOption DataOption1, [in]valuetype Microsoft.Office.Interop.Excel.XlSortDataOption DataOption2, [in]valuetype Microsoft.Office.Interop.Excel.XlSortDataOption DataOption3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Sort(System.Object,Microsoft.Office.Interop.Excel.XlSortOrder,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSortOrder,System.Object,Microsoft.Office.Interop.Excel.XlSortOrder,Microsoft.Office.Interop.Excel.XlYesNoGuess,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSortOrientation,Microsoft.Office.Interop.Excel.XlSortMethod,Microsoft.Office.Interop.Excel.XlSortDataOption,Microsoft.Office.Interop.Excel.XlSortDataOption,Microsoft.Office.Interop.Excel.XlSortDataOption)" />
      <MemberSignature Language="VB.NET" Value="Public Function Sort (Optional Key1 As Object, Optional Order1 As XlSortOrder = Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending, Optional Key2 As Object, Optional Type As Object, Optional Order2 As XlSortOrder = Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending, Optional Key3 As Object, Optional Order3 As XlSortOrder = Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending, Optional Header As XlYesNoGuess = Microsoft.Office.Interop.Excel.XlYesNoGuess.xlNo, Optional OrderCustom As Object, Optional MatchCase As Object, Optional Orientation As XlSortOrientation = Microsoft.Office.Interop.Excel.XlSortOrientation.xlSortRows, Optional SortMethod As XlSortMethod = Microsoft.Office.Interop.Excel.XlSortMethod.xlPinYin, Optional DataOption1 As XlSortDataOption = Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortNormal, Optional DataOption2 As XlSortDataOption = Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortNormal, Optional DataOption3 As XlSortDataOption = Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortNormal) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(880)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Key1" Type="System.Object" />
        <Parameter Name="Order1" Type="Microsoft.Office.Interop.Excel.XlSortOrder" />
        <Parameter Name="Key2" Type="System.Object" />
        <Parameter Name="Type" Type="System.Object" />
        <Parameter Name="Order2" Type="Microsoft.Office.Interop.Excel.XlSortOrder" />
        <Parameter Name="Key3" Type="System.Object" />
        <Parameter Name="Order3" Type="Microsoft.Office.Interop.Excel.XlSortOrder" />
        <Parameter Name="Header" Type="Microsoft.Office.Interop.Excel.XlYesNoGuess" />
        <Parameter Name="OrderCustom" Type="System.Object" />
        <Parameter Name="MatchCase" Type="System.Object" />
        <Parameter Name="Orientation" Type="Microsoft.Office.Interop.Excel.XlSortOrientation" />
        <Parameter Name="SortMethod" Type="Microsoft.Office.Interop.Excel.XlSortMethod" />
        <Parameter Name="DataOption1" Type="Microsoft.Office.Interop.Excel.XlSortDataOption" />
        <Parameter Name="DataOption2" Type="Microsoft.Office.Interop.Excel.XlSortDataOption" />
        <Parameter Name="DataOption3" Type="Microsoft.Office.Interop.Excel.XlSortDataOption" />
      </Parameters>
      <Docs>
        <param name="Key1"><span data-ttu-id="65c6c-1034">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1034">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-1035">O primeiro campo de classificação, como texto (um campo de tabela dinâmica ou nome de intervalo) ou um objeto <see cref="T:Microsoft.Office.Interop.Excel.Range" /> ("Dept" ou Cells(1, 1), por exemplo).</span><span class="sxs-lookup"><span data-stu-id="65c6c-1035">The first sort field, as either text (a PivotTable field or range name) or a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object ("Dept" or Cells(1, 1), for example).</span></span></param>
        <param name="Order1"><span data-ttu-id="65c6c-1036">Opcional <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder" /> .</span><span class="sxs-lookup"><span data-stu-id="65c6c-1036">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder" />.</span></span> <span data-ttu-id="65c6c-1037">A ordem de classificação para o campo ou intervalo especificado em <paramref name="Key1" /> .</span><span class="sxs-lookup"><span data-stu-id="65c6c-1037">The sort order for the field or range specified in <paramref name="Key1" />.</span></span> <span data-ttu-id="65c6c-1038">Pode ser uma das seguintes constantes <b>XlSortOrder:</b> <b>xlDescending</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1038">Can be one of the following <b>XlSortOrder</b> constants:<b>xlDescending</b>.</span></span> <span data-ttu-id="65c6c-1039">Classifica <paramref name="Key1" /> em ordem decrescente.<b> xlAscending</b> <paramref name="default" /> .</span><span class="sxs-lookup"><span data-stu-id="65c6c-1039">Sorts <paramref name="Key1" /> in descending order.<b>xlAscending</b><paramref name="default" />.</span></span> <span data-ttu-id="65c6c-1040">Classifica <paramref name="Key1" /> em ordem crescente.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1040">Sorts <paramref name="Key1" /> in ascending order.</span></span></param>
        <param name="Key2"><span data-ttu-id="65c6c-1041">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1041">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-1042">O segundo campo de classificação, como texto (um campo de tabela dinâmica ou nome de intervalo) ou um objeto <b>Range</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1042">The second sort field, as either text (a PivotTable field or range name) or a <b>Range</b> object.</span></span> <span data-ttu-id="65c6c-1043">Se você omitir este argumento, não haverá um segundo campo de classificação.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1043">If you omit this argument, there’s no second sort field.</span></span> <span data-ttu-id="65c6c-1044">Não pode ser usado ao classificar relatórios de Tabela Dinâmica.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1044">Cannot be used when sorting Pivot Table reports.</span></span></param>
        <param name="Type"><span data-ttu-id="65c6c-1045">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1045">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-1046">Especifica os elementos que devem ser classificados.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1046">Specifies which elements are to be sorted.</span></span> <span data-ttu-id="65c6c-1047">Use este argumento somente ao classificar relatórios de tabela dinâmica.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1047">Use this argument only when sorting PivotTable reports.</span></span> <span data-ttu-id="65c6c-1048">Pode ser uma das seguintes constantes <b>XlSortType:</b> <b>xlSortLabels</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1048">Can be one of the following <b>XlSortType</b> constants:<b>xlSortLabels</b>.</span></span> <span data-ttu-id="65c6c-1049">Classifica o relatório de tabela dinâmica por rótulos. <b>xlSortValues</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1049">Sorts the PivotTable report by labels.<b>xlSortValues</b>.</span></span> <span data-ttu-id="65c6c-1050">Classifica o relatório de tabela dinâmica por valores.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1050">Sorts the PivotTable report by values.</span></span></param>
        <param name="Order2"><span data-ttu-id="65c6c-1051">Opcional <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder" /> .</span><span class="sxs-lookup"><span data-stu-id="65c6c-1051">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder" />.</span></span> <span data-ttu-id="65c6c-1052">A ordem de classificação para o campo ou intervalo especificado em <paramref name="Key2" /> .</span><span class="sxs-lookup"><span data-stu-id="65c6c-1052">The sort order for the field or range specified in <paramref name="Key2" />.</span></span> <span data-ttu-id="65c6c-1053">Não pode ser usado ao classificar relatórios de tabela dinâmica.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1053">Cannot be used when sorting PivotTable reports.</span></span> <span data-ttu-id="65c6c-1054">Pode ser uma das seguintes constantes <b>XlSortOrder:</b> <b>xlDescending</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1054">Can be one of the following <b>XlSortOrder</b> constants:<b>xlDescending</b>.</span></span> <span data-ttu-id="65c6c-1055">Classifica <paramref name="Key2" /> em ordem decrescente.<b> xlAscending</b> <paramref name="default" /> .</span><span class="sxs-lookup"><span data-stu-id="65c6c-1055">Sorts <paramref name="Key2" /> in descending order.<b>xlAscending</b><paramref name="default" />.</span></span> <span data-ttu-id="65c6c-1056">Classifica <paramref name="Key2" /> em ordem crescente.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1056">Sorts <paramref name="Key2" /> in ascending order.</span></span></param>
        <param name="Key3"><span data-ttu-id="65c6c-1057">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1057">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-1058">O terceiro campo de classificação, como texto (um nome de intervalo) ou um objeto <b>Range</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1058">The third sort field, as either text (a range name) or a <b>Range</b> object.</span></span> <span data-ttu-id="65c6c-1059">Se você omitir este argumento, não haverá um terceiro campo de classificação.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1059">If you omit this argument, there’s no third sort field.</span></span> <span data-ttu-id="65c6c-1060">Não pode ser usado ao classificar relatórios de tabela dinâmica.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1060">Cannot be used when sorting PivotTable reports.</span></span></param>
        <param name="Order3"><span data-ttu-id="65c6c-1061">Opcional <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder" /> .</span><span class="sxs-lookup"><span data-stu-id="65c6c-1061">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder" />.</span></span> <span data-ttu-id="65c6c-1062">A ordem de classificação para o campo ou intervalo especificado em <paramref name="Key3" /> .</span><span class="sxs-lookup"><span data-stu-id="65c6c-1062">The sort order for the field or range specified in <paramref name="Key3" />.</span></span> <span data-ttu-id="65c6c-1063">Não pode ser usado ao classificar relatórios de tabela dinâmica.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1063">Cannot be used when sorting PivotTable reports.</span></span> <span data-ttu-id="65c6c-1064">Pode ser uma das seguintes constantes <b>XlSortOrder:</b> <b>xlDescending</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1064">Can be one of the following <b>XlSortOrder</b> constants:<b>xlDescending</b>.</span></span> <span data-ttu-id="65c6c-1065">Classifica <paramref name="Key3" /> em ordem decrescente.<b> xlAscending</b> <paramref name="default" /> .</span><span class="sxs-lookup"><span data-stu-id="65c6c-1065">Sorts <paramref name="Key3" /> in descending order.<b>xlAscending</b><paramref name="default" />.</span></span> <span data-ttu-id="65c6c-1066">Classifica <paramref name="Key3" /> em ordem crescente.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1066">Sorts <paramref name="Key3" /> in ascending order.</span></span></param>
        <param name="Header"><span data-ttu-id="65c6c-1067">Opcional <see cref="T:Microsoft.Office.Interop.Excel.XlYesNoGuess" /> .</span><span class="sxs-lookup"><span data-stu-id="65c6c-1067">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlYesNoGuess" />.</span></span> <span data-ttu-id="65c6c-1068">Especifica se a primeira linha contém ou não cabeçalhos.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1068">Specifies whether or not the first row contains headers.</span></span> <span data-ttu-id="65c6c-1069">Não pode ser usado ao classificar relatórios de tabela dinâmica.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1069">Cannot be used when sorting PivotTable reports.</span></span> <span data-ttu-id="65c6c-1070">Pode ser uma das seguintes constantes <b>XlYesNoGuess:</b> <b>xlGuess</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1070">Can be one of the following <b>XlYesNoGuess</b> constants:<b>xlGuess</b>.</span></span> <span data-ttu-id="65c6c-1071">Deixe que o Microsoft Excel determine se há um header e determine onde ele está se houver um. <b>xlNo</b> <paramref name="default" /> .</span><span class="sxs-lookup"><span data-stu-id="65c6c-1071">Let Microsoft Excel determine whether there’s a header, and determine where it is if there is one.<b>xlNo</b><paramref name="default" />.</span></span> <span data-ttu-id="65c6c-1072">(Todo o intervalo deve ser organizado). <b>xlYes</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1072">(The entire range should be sorted).<b>xlYes</b>.</span></span> <span data-ttu-id="65c6c-1073">(O intervalo inteiro não deve ser organizado).</span><span class="sxs-lookup"><span data-stu-id="65c6c-1073">(The entire range should not be sorted).</span></span></param>
        <param name="OrderCustom"><span data-ttu-id="65c6c-1074">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1074">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-1075">Este argumento é um deslocamento de inteiro baseado em um para a lista de ordens de classificação personalizadas.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1075">This argument is a one-based integer offset to the list of custom sort orders.</span></span> <span data-ttu-id="65c6c-1076">Se você <paramref name="OrderCustom" /> omitir, uma classificação normal será usada.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1076">If you omit <paramref name="OrderCustom" />, a normal sort is used.</span></span></param>
        <param name="MatchCase"><span data-ttu-id="65c6c-1077">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1077">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-1078"><b>True</b> para fazer uma classificação que diferencia maiúsculas de minúsculas; <b>False</b> para fazer uma classificação que não diferencia maiúsculas de minúsculas.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1078"><b>True</b> to do a case-sensitive sort; <b>False</b> to do a sort that’s not case sensitive.</span></span> <span data-ttu-id="65c6c-1079">Não pode ser usado ao classificar relatórios de tabela dinâmica.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1079">Cannot be used when sorting PivotTable reports.</span></span></param>
        <param name="Orientation"><span data-ttu-id="65c6c-1080">Opcional <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrientation" /> .</span><span class="sxs-lookup"><span data-stu-id="65c6c-1080">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrientation" />.</span></span> <span data-ttu-id="65c6c-1081">A orientação da classificação.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1081">The sort orientation.</span></span> <span data-ttu-id="65c6c-1082">Pode ser uma das seguintes <b>constantes XlSortOrientation:</b> <b>xlSortRows</b> <paramref name="default" /> .</span><span class="sxs-lookup"><span data-stu-id="65c6c-1082">Can be one of the following <b>XlSortOrientation</b> constants:<b>xlSortRows</b><paramref name="default" />.</span></span> <span data-ttu-id="65c6c-1083">Classifica por linha. <b>xlSortColumns</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1083">Sorts by row.<b>xlSortColumns</b>.</span></span> <span data-ttu-id="65c6c-1084">Classifica por coluna.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1084">Sorts by column.</span></span></param>
        <param name="SortMethod"><span data-ttu-id="65c6c-1085">Opcional <see cref="T:Microsoft.Office.Interop.Excel.XlSortMethod" /> .</span><span class="sxs-lookup"><span data-stu-id="65c6c-1085">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortMethod" />.</span></span> <span data-ttu-id="65c6c-1086">O tipo de classificação.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1086">The type of sort.</span></span> <span data-ttu-id="65c6c-1087">Algumas dessas constantes podem não estar disponíveis, dependendo do suporte a idioma (português do Brasil, por exemplo) que você selecionou ou instalou.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1087">Some of these constants may not be available to you, depending on the language support (U.S. English, for example) that you’ve selected or installed.</span></span> <span data-ttu-id="65c6c-1088">Pode ser uma das seguintes constantes <b>XlSortMethod:</b> <b>classificação xlStroke</b> pela quantidade de traços em cada caractere. <b>xlPinYin</b> <paramref name="default" /> .</span><span class="sxs-lookup"><span data-stu-id="65c6c-1088">Can be one of the following <b>XlSortMethod</b> constants:<b>xlStroke</b> Sorting by the quantity of strokes in each character.<b>xlPinYin</b><paramref name="default" />.</span></span> <span data-ttu-id="65c6c-1089">Ordem de classificação do chinês fonético para caracteres.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1089">Phonetic Chinese sort order for characters.</span></span></param>
        <param name="DataOption1"><span data-ttu-id="65c6c-1090">Opcional <see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption" /> .</span><span class="sxs-lookup"><span data-stu-id="65c6c-1090">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption" />.</span></span> <span data-ttu-id="65c6c-1091">Especifica como classificar o texto em <paramref name="Key 1" /> .</span><span class="sxs-lookup"><span data-stu-id="65c6c-1091">Specifies how to sort text in <paramref name="Key 1" />.</span></span> <span data-ttu-id="65c6c-1092">Não pode ser usado ao classificar relatórios de tabela dinâmica.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1092">Cannot be used when sorting PivotTable reports.</span></span> <span data-ttu-id="65c6c-1093">Pode ser uma das seguintes constantes <b>XlSortDataOption:</b> <b>xlSortTextAsNumbers</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1093">Can be one of the following <b>XlSortDataOption</b> constants:<b>xlSortTextAsNumbers</b>.</span></span> <span data-ttu-id="65c6c-1094">Trate o texto como dados numéricos para a classificação. <b>xlSortNormal</b> <paramref name="default" /> .</span><span class="sxs-lookup"><span data-stu-id="65c6c-1094">Treat text as numeric data for the sort.<b>xlSortNormal</b><paramref name="default" />.</span></span> <span data-ttu-id="65c6c-1095">Classifica dados numéricos e de texto separadamente.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1095">Sorts numeric and text data separately.</span></span></param>
        <param name="DataOption2"><span data-ttu-id="65c6c-1096">Opcional <see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption" /> .</span><span class="sxs-lookup"><span data-stu-id="65c6c-1096">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption" />.</span></span> <span data-ttu-id="65c6c-1097">Especifica como classificar o texto em <paramref name="Key 2" /> .</span><span class="sxs-lookup"><span data-stu-id="65c6c-1097">Specifies how to sort text in <paramref name="Key 2" />.</span></span> <span data-ttu-id="65c6c-1098">Não pode ser usado ao classificar relatórios de tabela dinâmica.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1098">Cannot be used when sorting PivotTable reports.</span></span> <span data-ttu-id="65c6c-1099">Pode ser uma das seguintes constantes <b>XlSortDataOption:</b> <b>xlSortTextAsNumbers</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1099">Can be one of the following <b>XlSortDataOption</b> constants:<b>xlSortTextAsNumbers</b>.</span></span> <span data-ttu-id="65c6c-1100">Trata o texto como dados numéricos para a classificação. <b>xlSortNormal</b> <paramref name="default" /> .</span><span class="sxs-lookup"><span data-stu-id="65c6c-1100">Treats text as numeric data for the sort.<b>xlSortNormal</b><paramref name="default" />.</span></span> <span data-ttu-id="65c6c-1101">Classifica dados numéricos e de texto separadamente.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1101">Sorts numeric and text data separately.</span></span></param>
        <param name="DataOption3"><span data-ttu-id="65c6c-1102">Opcional <see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption" /> .</span><span class="sxs-lookup"><span data-stu-id="65c6c-1102">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption" />.</span></span> <span data-ttu-id="65c6c-1103">Especifica como classificar o texto na tecla 3.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1103">Specifies how to sort text in key 3.</span></span> <span data-ttu-id="65c6c-1104">Não pode ser usado ao classificar relatórios de tabela dinâmica.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1104">Cannot be used when sorting PivotTable reports.</span></span> <span data-ttu-id="65c6c-1105">Pode ser uma das seguintes constantes <b>XlSortDataOption:</b> <b>xlSortTextAsNumbers</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1105">Can be one of the following <b>XlSortDataOption</b> constants:<b>xlSortTextAsNumbers</b>.</span></span> <span data-ttu-id="65c6c-1106">Trata o texto como dados numéricos para a classificação. <b>xlSortNormal</b> <paramref name="default" /> .</span><span class="sxs-lookup"><span data-stu-id="65c6c-1106">Treats text as numeric data for the sort.<b>xlSortNormal</b><paramref name="default" />.</span></span> <span data-ttu-id="65c6c-1107">Classifica dados numéricos e de texto separadamente.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1107">Sorts numeric and text data separately.</span></span></param>
        <summary><span data-ttu-id="65c6c-1108">Classifica um relatório de tabela dinâmica, um intervalo ou a região ativa se o intervalo especificado contiver apenas uma célula.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1108">Sorts a PivotTable report, a range, or the active region if the specified range contains only one cell.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="65c6c-1109">As configurações para , , , , e são salvas, para a planilha <paramref name="Header" /> <paramref name="Order1" /> <paramref name="Order2" /> <paramref name="Order3" /> <paramref name="OrderCustom" /> <paramref name="Orientation" /> específica, cada vez que você usa esse método.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1109">The settings for <paramref name="Header" />, <paramref name="Order1" />, <paramref name="Order2" />, <paramref name="Order3" />, <paramref name="OrderCustom" />, and <paramref name="Orientation" /> are saved, for the particular worksheet, each time you use this method.</span></span> <span data-ttu-id="65c6c-1110">Se você não especificar valores para esses argumentos na próxima vez que chamar o método, os valores salvos serão usados.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1110">If you don’t specify values for these arguments the next time you call the method, the saved values are used.</span></span> <span data-ttu-id="65c6c-1111">De definir esses argumentos explicitamente sempre que usar <b>o método Sort,</b> se você optar por não usar os valores salvos.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1111">Set these arguments explicitly each time you use <b>Sort</b> method if you choose not to use the saved values.</span></span></para>
          <para><span data-ttu-id="65c6c-1112">Cadeias de caracteres de texto que não são conversíveis para dados numéricos são ordenadas normalmente.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1112">Text strings which are not convertible to numeric data are sorted normally.</span></span></para>
          <para><span data-ttu-id="65c6c-1113">Se não houver argumentos definidos com o método <b>Sort</b>, o Microsoft Excel classificará a seleção, escolhida para classificação, na ordem crescente.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1113">If no arguments are defined with the <b>Sort</b> method, Microsoft Excel will sort the selection, chosen to be sorted, in ascending order.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SortSpecial">
      <MemberSignature Language="C#" Value="public object SortSpecial (Microsoft.Office.Interop.Excel.XlSortMethod SortMethod = Microsoft.Office.Interop.Excel.XlSortMethod.xlPinYin, object Key1, Microsoft.Office.Interop.Excel.XlSortOrder Order1 = Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending, object Type, object Key2, Microsoft.Office.Interop.Excel.XlSortOrder Order2 = Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending, object Key3, Microsoft.Office.Interop.Excel.XlSortOrder Order3 = Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending, Microsoft.Office.Interop.Excel.XlYesNoGuess Header = Microsoft.Office.Interop.Excel.XlYesNoGuess.xlNo, object OrderCustom, object MatchCase, Microsoft.Office.Interop.Excel.XlSortOrientation Orientation = Microsoft.Office.Interop.Excel.XlSortOrientation.xlSortRows, Microsoft.Office.Interop.Excel.XlSortDataOption DataOption1 = Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortNormal, Microsoft.Office.Interop.Excel.XlSortDataOption DataOption2 = Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortNormal, Microsoft.Office.Interop.Excel.XlSortDataOption DataOption3 = Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortNormal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object SortSpecial([in]valuetype Microsoft.Office.Interop.Excel.XlSortMethod SortMethod, [in]object Key1, [in]valuetype Microsoft.Office.Interop.Excel.XlSortOrder Order1, [in]object Type, [in]object Key2, [in]valuetype Microsoft.Office.Interop.Excel.XlSortOrder Order2, [in]object Key3, [in]valuetype Microsoft.Office.Interop.Excel.XlSortOrder Order3, [in]valuetype Microsoft.Office.Interop.Excel.XlYesNoGuess Header, [in]object OrderCustom, [in]object MatchCase, [in]valuetype Microsoft.Office.Interop.Excel.XlSortOrientation Orientation, [in]valuetype Microsoft.Office.Interop.Excel.XlSortDataOption DataOption1, [in]valuetype Microsoft.Office.Interop.Excel.XlSortDataOption DataOption2, [in]valuetype Microsoft.Office.Interop.Excel.XlSortDataOption DataOption3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.SortSpecial(Microsoft.Office.Interop.Excel.XlSortMethod,System.Object,Microsoft.Office.Interop.Excel.XlSortOrder,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSortOrder,System.Object,Microsoft.Office.Interop.Excel.XlSortOrder,Microsoft.Office.Interop.Excel.XlYesNoGuess,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSortOrientation,Microsoft.Office.Interop.Excel.XlSortDataOption,Microsoft.Office.Interop.Excel.XlSortDataOption,Microsoft.Office.Interop.Excel.XlSortDataOption)" />
      <MemberSignature Language="VB.NET" Value="Public Function SortSpecial (Optional SortMethod As XlSortMethod = Microsoft.Office.Interop.Excel.XlSortMethod.xlPinYin, Optional Key1 As Object, Optional Order1 As XlSortOrder = Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending, Optional Type As Object, Optional Key2 As Object, Optional Order2 As XlSortOrder = Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending, Optional Key3 As Object, Optional Order3 As XlSortOrder = Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending, Optional Header As XlYesNoGuess = Microsoft.Office.Interop.Excel.XlYesNoGuess.xlNo, Optional OrderCustom As Object, Optional MatchCase As Object, Optional Orientation As XlSortOrientation = Microsoft.Office.Interop.Excel.XlSortOrientation.xlSortRows, Optional DataOption1 As XlSortDataOption = Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortNormal, Optional DataOption2 As XlSortDataOption = Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortNormal, Optional DataOption3 As XlSortDataOption = Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortNormal) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(881)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SortMethod" Type="Microsoft.Office.Interop.Excel.XlSortMethod" />
        <Parameter Name="Key1" Type="System.Object" />
        <Parameter Name="Order1" Type="Microsoft.Office.Interop.Excel.XlSortOrder" />
        <Parameter Name="Type" Type="System.Object" />
        <Parameter Name="Key2" Type="System.Object" />
        <Parameter Name="Order2" Type="Microsoft.Office.Interop.Excel.XlSortOrder" />
        <Parameter Name="Key3" Type="System.Object" />
        <Parameter Name="Order3" Type="Microsoft.Office.Interop.Excel.XlSortOrder" />
        <Parameter Name="Header" Type="Microsoft.Office.Interop.Excel.XlYesNoGuess" />
        <Parameter Name="OrderCustom" Type="System.Object" />
        <Parameter Name="MatchCase" Type="System.Object" />
        <Parameter Name="Orientation" Type="Microsoft.Office.Interop.Excel.XlSortOrientation" />
        <Parameter Name="DataOption1" Type="Microsoft.Office.Interop.Excel.XlSortDataOption" />
        <Parameter Name="DataOption2" Type="Microsoft.Office.Interop.Excel.XlSortDataOption" />
        <Parameter Name="DataOption3" Type="Microsoft.Office.Interop.Excel.XlSortDataOption" />
      </Parameters>
      <Docs>
        <param name="SortMethod"><span data-ttu-id="65c6c-1114">Opcional <see cref="T:Microsoft.Office.Interop.Excel.XlSortMethod" /> .</span><span class="sxs-lookup"><span data-stu-id="65c6c-1114">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortMethod" />.</span></span> <span data-ttu-id="65c6c-1115">O tipo de classificação.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1115">The type of sort.</span></span> <span data-ttu-id="65c6c-1116">Algumas dessas constantes podem não estar disponíveis, dependendo do suporte a idioma (português do Brasil, por exemplo) que você selecionou ou instalou.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1116">Some of these constants may not be available to you, depending on the language support (U.S. English, for example) that you’ve selected or installed.</span></span> <span data-ttu-id="65c6c-1117">Pode ser uma das seguintes constantes <b>XlSortMethod:</b> <b>xlStroke</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1117">Can be one of the following <b>XlSortMethod</b> constants:<b>xlStroke</b>.</span></span> <span data-ttu-id="65c6c-1118">Classificação pela quantidade de traços em cada caractere. <b>xlPinYin</b> <paramref name="default" /> .</span><span class="sxs-lookup"><span data-stu-id="65c6c-1118">Sorting by the quantity of strokes in each character.<b>xlPinYin</b><paramref name="default" />.</span></span> <span data-ttu-id="65c6c-1119">Ordem de classificação do chinês fonético para caracteres.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1119">Phonetic Chinese sort order for characters.</span></span></param>
        <param name="Key1"><span data-ttu-id="65c6c-1120">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1120">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-1121">O primeiro campo de classificação, como texto (um campo de tabela dinâmica ou nome de intervalo) ou um objeto <b>Range</b> ("Dept" ou Cells(1, 1), por exemplo).</span><span class="sxs-lookup"><span data-stu-id="65c6c-1121">The first sort field, as either text (a PivotTable field or range name) or a <b>Range</b> object ("Dept" or Cells(1, 1), for example).</span></span></param>
        <param name="Order1"><span data-ttu-id="65c6c-1122">Opcional <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder" /> .</span><span class="sxs-lookup"><span data-stu-id="65c6c-1122">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder" />.</span></span> <span data-ttu-id="65c6c-1123">A ordem de classificação para o campo ou intervalo especificado no <paramref name="Key1" /> argumento.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1123">The sort order for the field or range specified in the <paramref name="Key1" /> argument.</span></span> <span data-ttu-id="65c6c-1124">Pode ser uma das seguintes constantes <b>XlSortOrder:</b> <b>xlDescending</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1124">Can be one of the following <b>XlSortOrder</b> constants:<b>xlDescending</b>.</span></span> <span data-ttu-id="65c6c-1125">Classifica <paramref name="Key1" /> em ordem decrescente.<b> xlAscending</b> <paramref name="default" /> .</span><span class="sxs-lookup"><span data-stu-id="65c6c-1125">Sorts <paramref name="Key1" /> in descending order.<b>xlAscending</b><paramref name="default" />.</span></span> <span data-ttu-id="65c6c-1126">Classifica <paramref name="Key1" /> em ordem crescente.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1126">Sorts <paramref name="Key1" /> in ascending order.</span></span></param>
        <param name="Type"><span data-ttu-id="65c6c-1127">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1127">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-1128">Especifica os elementos que devem ser classificados.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1128">Specifies which elements are to be sorted.</span></span> <span data-ttu-id="65c6c-1129">Use este argumento somente ao classificar relatórios de tabela dinâmica.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1129">Use this argument only when sorting PivotTable reports.</span></span></param>
        <param name="Key2"><span data-ttu-id="65c6c-1130">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1130">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-1131">O segundo campo de classificação, como texto (um campo de tabela dinâmica ou nome de intervalo) ou um objeto <b>Range</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1131">The second sort field, as either text (a PivotTable field or range name) or a <b>Range</b> object.</span></span> <span data-ttu-id="65c6c-1132">Se você omitir este argumento, não haverá um segundo campo de classificação.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1132">If you omit this argument, there’s no second sort field.</span></span> <span data-ttu-id="65c6c-1133">Não pode ser usado ao classificar relatórios de tabela dinâmica.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1133">Cannot be used when sorting PivotTable reports.</span></span> <span data-ttu-id="65c6c-1134">Pode ser uma das seguintes constantes <b>XlSortType:</b> <b>xlSortLabels</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1134">Can be one of the following <b>XlSortType</b> constants:<b>xlSortLabels</b>.</span></span> <span data-ttu-id="65c6c-1135">Classifica o relatório de tabela dinâmica por rótulos. <b>xlSortValues</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1135">Sorts the PivotTable report by labels.<b>xlSortValues</b>.</span></span> <span data-ttu-id="65c6c-1136">Classifica o relatório de tabela dinâmica por valores.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1136">Sorts the PivotTable report by values.</span></span></param>
        <param name="Order2"><span data-ttu-id="65c6c-1137">Opcional <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder" /> .</span><span class="sxs-lookup"><span data-stu-id="65c6c-1137">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder" />.</span></span> <span data-ttu-id="65c6c-1138">A ordem de classificação para o campo ou intervalo especificado no <paramref name="Key2" /> argumento.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1138">The sort order for the field or range specified in the <paramref name="Key2" /> argument.</span></span> <span data-ttu-id="65c6c-1139">Não pode ser usado ao classificar relatórios de tabela dinâmica.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1139">Cannot be used when sorting PivotTable reports.</span></span> <span data-ttu-id="65c6c-1140">Pode ser uma das seguintes constantes <b>XlSortOrder:</b> <b>xlDescending</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1140">Can be one of the following <b>XlSortOrder</b> constants:<b>xlDescending</b>.</span></span> <span data-ttu-id="65c6c-1141">Classifica <paramref name="Key2" /> em ordem decrescente o padrão <b>xlAscending.</b></span><span class="sxs-lookup"><span data-stu-id="65c6c-1141">Sorts <paramref name="Key2" /> in descending order <b>xlAscending</b> default.</span></span> <span data-ttu-id="65c6c-1142">Classifica <paramref name="Key2" /> em ordem crescente.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1142">Sorts <paramref name="Key2" /> in ascending order.</span></span></param>
        <param name="Key3"><span data-ttu-id="65c6c-1143">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1143">Optional <b>object</b>.</span></span> <span data-ttu-id="65c6c-1144">O terceiro campo de classificação, como texto (um nome de intervalo) ou um objeto <b>Range</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1144">The third sort field, as either text (a range name) or a <b>Range</b> object.</span></span> <span data-ttu-id="65c6c-1145">Se você omitir este argumento, não haverá um terceiro campo de classificação.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1145">If you omit this argument, there’s no third sort field.</span></span> <span data-ttu-id="65c6c-1146">Não pode ser usado ao classificar relatórios de tabela dinâmica.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1146">Cannot be used when sorting PivotTable reports.</span></span></param>
        <param name="Order3"><span data-ttu-id="65c6c-1147">Opcional <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder" /> .</span><span class="sxs-lookup"><span data-stu-id="65c6c-1147">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder" />.</span></span> <span data-ttu-id="65c6c-1148">A ordem de classificação para o campo ou intervalo especificado no <paramref name="Key3" /> argumento.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1148">The sort order for the field or range specified in the <paramref name="Key3" /> argument.</span></span> <span data-ttu-id="65c6c-1149">Não pode ser usado ao classificar relatórios de tabela dinâmica.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1149">Cannot be used when sorting PivotTable reports.</span></span> <span data-ttu-id="65c6c-1150">Pode ser uma das seguintes constantes <b>XlSortOrder:</b> <b>xlDescending</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1150">Can be one of the following <b>XlSortOrder</b> constants: <b>xlDescending</b>.</span></span> <span data-ttu-id="65c6c-1151">Classifica <paramref name="Key3" /> em ordem decrescente.<b> xlAscending</b> <paramref name="default" /> .</span><span class="sxs-lookup"><span data-stu-id="65c6c-1151">Sorts <paramref name="Key3" /> in descending order.<b>xlAscending</b><paramref name="default" />.</span></span> <span data-ttu-id="65c6c-1152">Classifica <paramref name="Key3" /> em ordem crescente.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1152">Sorts <paramref name="Key3" /> in ascending order.</span></span></param>
        <param name="Header"><span data-ttu-id="65c6c-1153">Opcional <see cref="T:Microsoft.Office.Interop.Excel.XlYesNoGuess" /> .</span><span class="sxs-lookup"><span data-stu-id="65c6c-1153">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlYesNoGuess" />.</span></span> <span data-ttu-id="65c6c-1154">Especifica se a primeira linha contém ou não cabeçalhos.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1154">Specifies whether or not the first row contains headers.</span></span> <span data-ttu-id="65c6c-1155">Não pode ser usado ao classificar relatórios de tabela dinâmica.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1155">Cannot be used when sorting PivotTable reports.</span></span> <span data-ttu-id="65c6c-1156">Pode ser uma das seguintes constantes <b>XlYesNoGuess:</b> <b>xlGuess</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1156">Can be one of the following <b>XlYesNoGuess</b> constants:<b>xlGuess</b>.</span></span> <span data-ttu-id="65c6c-1157">Permite que o Microsoft Excel determine se há um header e determine onde ele está se houver um. <b>xlNo</b> <paramref name="default" /> .</span><span class="sxs-lookup"><span data-stu-id="65c6c-1157">Lets Microsoft Excel determine whether there’s a header, and determine where it is if there is one.<b>xlNo</b><paramref name="default" />.</span></span> <span data-ttu-id="65c6c-1158">Todo o intervalo deve ser organizado. <b>xlYes</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1158">The entire range should be sorted.<b>xlYes</b>.</span></span> <span data-ttu-id="65c6c-1159">O intervalo inteiro não deve ser classificado.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1159">The entire range should not be sorted.</span></span></param>
        <param name="OrderCustom"><span data-ttu-id="65c6c-1160">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1160">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-1161">Este argumento é um deslocamento de inteiro baseado em um para a lista de ordens de classificação personalizadas.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1161">This argument is a one-based integer offset to the list of custom sort orders.</span></span> <span data-ttu-id="65c6c-1162">Se você <paramref name="OrderCustom" /> omitir , (ordem de classificação normal) será usado.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1162">If you omit <paramref name="OrderCustom" />, (normal sort order) is used.</span></span></param>
        <param name="MatchCase"><span data-ttu-id="65c6c-1163">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1163">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-1164"><b>True</b> para fazer uma classificação que diferencia maiúsculas de minúsculas; <b>False</b> para fazer uma classificação que não diferencia maiúsculas de minúsculas.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1164"><b>True</b> to do a case-sensitive sort; <b>False</b> to do a sort that’s not case sensitive.</span></span> <span data-ttu-id="65c6c-1165">Não pode ser usado ao classificar relatórios de tabela dinâmica.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1165">Cannot be used when sorting PivotTable reports.</span></span></param>
        <param name="Orientation"><span data-ttu-id="65c6c-1166">Opcional <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrientation" /> .</span><span class="sxs-lookup"><span data-stu-id="65c6c-1166">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrientation" />.</span></span> <span data-ttu-id="65c6c-1167">A orientação da classificação.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1167">The sort orientation.</span></span> <span data-ttu-id="65c6c-1168">Pode ser uma das seguintes <b>constantes XlSortOrientation:</b> <b>xlSortRows</b> <paramref name="default" /> .</span><span class="sxs-lookup"><span data-stu-id="65c6c-1168">Can be one of the following <b>XlSortOrientation</b> constants:<b>xlSortRows</b><paramref name="default" />.</span></span> <span data-ttu-id="65c6c-1169">A classificação é feita por linha. <b>xlSortColumns</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1169">The sort is done by row.<b>xlSortColumns</b>.</span></span> <span data-ttu-id="65c6c-1170">A classificação é feita por coluna.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1170">The sort is done by column.</span></span></param>
        <param name="DataOption1"><span data-ttu-id="65c6c-1171">Opcional <see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption" /> .</span><span class="sxs-lookup"><span data-stu-id="65c6c-1171">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption" />.</span></span> <span data-ttu-id="65c6c-1172">Especifica como classificar o texto em <paramref name="Key1" /> .</span><span class="sxs-lookup"><span data-stu-id="65c6c-1172">Specifies how to sort text in <paramref name="Key1" />.</span></span> <span data-ttu-id="65c6c-1173">Não pode ser usado ao classificar relatórios de tabela dinâmica.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1173">Cannot be used when sorting PivotTable reports.</span></span> <span data-ttu-id="65c6c-1174">Pode ser uma das seguintes constantes <b>XlSortDataOption:</b> <b>xlSortTextAsNumbers</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1174">Can be one of the following <b>XlSortDataOption</b> constants:<b>xlSortTextAsNumbers</b>.</span></span> <span data-ttu-id="65c6c-1175">Trata o texto como dados numéricos para a classificação. <b>xlSortNormal</b> <paramref name="default" /> .</span><span class="sxs-lookup"><span data-stu-id="65c6c-1175">Treats text as numeric data for the sort.<b>xlSortNormal</b><paramref name="default" />.</span></span> <span data-ttu-id="65c6c-1176">Classifica dados numéricos e de texto separadamente.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1176">Sorts numeric and text data separately.</span></span></param>
        <param name="DataOption2"><span data-ttu-id="65c6c-1177">Opcional <see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption" /> .</span><span class="sxs-lookup"><span data-stu-id="65c6c-1177">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption" />.</span></span> <span data-ttu-id="65c6c-1178">Especifica como classificar o texto em <paramref name="Key 2" /> .</span><span class="sxs-lookup"><span data-stu-id="65c6c-1178">Specifies how to sort text in <paramref name="Key 2" />.</span></span> <span data-ttu-id="65c6c-1179">Não pode ser usado ao classificar relatórios de tabela dinâmica.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1179">Cannot be used when sorting PivotTable reports.</span></span> <span data-ttu-id="65c6c-1180">Pode ser uma das seguintes constantes <b>XlSortDataOption:</b> <b>xlSortTextAsNumbers</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1180">Can be one of the following <b>XlSortDataOption</b> constants:<b>xlSortTextAsNumbers</b>.</span></span> <span data-ttu-id="65c6c-1181">Trata o texto como dados numéricos para a classificação. <b>xlSortNormal</b> <paramref name="default" /> .</span><span class="sxs-lookup"><span data-stu-id="65c6c-1181">Treats text as numeric data for the sort.<b>xlSortNormal</b><paramref name="default" />.</span></span> <span data-ttu-id="65c6c-1182">Classifica dados numéricos e de texto separadamente.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1182">Sorts numeric and text data separately.</span></span></param>
        <param name="DataOption3"><span data-ttu-id="65c6c-1183">Opcional <see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption" /> .</span><span class="sxs-lookup"><span data-stu-id="65c6c-1183">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption" />.</span></span> <span data-ttu-id="65c6c-1184">Especifica como classificar o texto em <paramref name="Key 3" /> .</span><span class="sxs-lookup"><span data-stu-id="65c6c-1184">Specifies how to sort text in <paramref name="Key 3" />.</span></span> <span data-ttu-id="65c6c-1185">Não pode ser usado ao classificar relatórios de tabela dinâmica.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1185">Cannot be used when sorting PivotTable reports.</span></span> <span data-ttu-id="65c6c-1186">Pode ser uma das seguintes constantes <b>XlSortDataOption:</b> <b>xlSortTextAsNumbers</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1186">Can be one of the following <b>XlSortDataOption</b> constants:<b>xlSortTextAsNumbers</b>.</span></span> <span data-ttu-id="65c6c-1187">Trata dados numéricos de texto para a classificação. <b>xlSortNormal</b> <paramref name="default" /> .</span><span class="sxs-lookup"><span data-stu-id="65c6c-1187">Treats text numeric data for the sort.<b>xlSortNormal</b><paramref name="default" />.</span></span> <span data-ttu-id="65c6c-1188">Classifica dados numéricos e de texto separadamente.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1188">Sorts numeric and text data separately.</span></span></param>
        <summary><span data-ttu-id="65c6c-1189">Usa métodos de classificação do Leste Asiático para classificar o intervalo ou um relatório de tabela dinâmica ou usa o método para a região ativa se o intervalo contiver apenas uma célula.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1189">Uses East Asian sorting methods to sort the range or a PivotTable report, or uses the method for the active region if the range contains only one cell.</span></span> <span data-ttu-id="65c6c-1190">Por exemplo, Japonês classifica na ordem de silabação Kana.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1190">For example, Japanese sorts in the order of the Kana syllabary.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="65c6c-1191">Se nenhum argumento for definido com o método <b>SortSpecial,</b> o Microsoft Excel classificará a seleção, escolhida para ser ordenada, em ordem crescente.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1191">If no arguments are defined with the <b>SortSpecial</b> method, Microsoft Excel will sort the selection, chosen to be sorted, in ascending order.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SoundNote">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.SoundNote SoundNote { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.SoundNote SoundNote" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.SoundNote" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SoundNote As SoundNote" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::SoundNote ^ SoundNote { Microsoft::Office::Interop::Excel::SoundNote ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(916)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(916)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.SoundNote</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65c6c-1192">Essa propriedade não deve ser usada.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1192">This property should not be used.</span></span> <span data-ttu-id="65c6c-1193">As notas sonoras foram removidas do Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1193">Sound notes have been removed from Microsoft Excel.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SparklineGroups">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.SparklineGroups SparklineGroups { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.SparklineGroups SparklineGroups" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.SparklineGroups" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SparklineGroups As SparklineGroups" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::SparklineGroups ^ SparklineGroups { Microsoft::Office::Interop::Excel::SparklineGroups ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2853)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2853)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.SparklineGroups</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65c6c-1194">Obtém <see cref="T:Microsoft.Office.Interop.Excel.SparklineGroups" /> um objeto que representa um grupo existente de sparklines do intervalo especificado.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1194">Gets a <see cref="T:Microsoft.Office.Interop.Excel.SparklineGroups" /> object that represents an existing group of sparklines from the specified range.</span></span></summary>
        <value><span data-ttu-id="65c6c-1195">Um <see cref="T:Microsoft.Office.Interop.Excel.SparklineGroups" /> objeto que representa um grupo existente de sparklines do intervalo especificado.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1195">A <see cref="T:Microsoft.Office.Interop.Excel.SparklineGroups" /> object that represents an existing group of sparklines from the specified range.</span></span></value>
        <remarks><para><span data-ttu-id="65c6c-1196">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1196">Read-only.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Speak">
      <MemberSignature Language="C#" Value="public void Speak (object SpeakDirection, object SpeakFormulas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Speak([in]object SpeakDirection, [in]object SpeakFormulas) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Speak(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Speak (Optional SpeakDirection As Object, Optional SpeakFormulas As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2017)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SpeakDirection" Type="System.Object" />
        <Parameter Name="SpeakFormulas" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="SpeakDirection"><span data-ttu-id="65c6c-1197">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1197">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-1198">A direção da fala, por linhas ou colunas.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1198">The speak direction, by rows or columns.</span></span></param>
        <param name="SpeakFormulas"><span data-ttu-id="65c6c-1199">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1199">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-1200"><b>True</b> fará com que as fórmulas sejam enviadas ao mecanismo de conversão de texto em fala (TTS) para células com fórmulas.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1200"><b>True</b> will cause formulas to be sent to the Text-To-Speech (TTS) engine for cells that have formulas.</span></span> <span data-ttu-id="65c6c-1201">O valor é enviado se as células não têm fórmulas; <b>False</b> (padrão) fará com que os valores sempre sejam enviados para o mecanismo TTS.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1201">The value is sent if the cells do not have formulas; <b>False</b> (default) will cause values to always be sent to the TTS engine.</span></span></param>
        <summary><span data-ttu-id="65c6c-1202">Faz com que as células do intervalo sejam faladas na ordem da linha ou da coluna.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1202">Causes the cells of the range to be spoken in row order or column order.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SpecialCells">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range SpecialCells (Microsoft.Office.Interop.Excel.XlCellType Type, object Value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Range SpecialCells([in]valuetype Microsoft.Office.Interop.Excel.XlCellType Type, [in]object Value) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.SpecialCells(Microsoft.Office.Interop.Excel.XlCellType,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function SpecialCells (Type As XlCellType, Optional Value As Object) As Range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(410)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlCellType" />
        <Parameter Name="Value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type"><span data-ttu-id="65c6c-1203">Obrigatório. <see cref="T:Microsoft.Office.Interop.Excel.XlCellType" /></span><span class="sxs-lookup"><span data-stu-id="65c6c-1203">Required <see cref="T:Microsoft.Office.Interop.Excel.XlCellType" />.</span></span> <span data-ttu-id="65c6c-1204">As células a serem incluídas.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1204">The cells to include.</span></span> <span data-ttu-id="65c6c-1205">Pode ser uma das seguintes constantes <b>XlCellType:</b> <b>xlCellTypeAllFormatConditions</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1205">Can be one of the following <b>XlCellType</b> constants:<b>xlCellTypeAllFormatConditions</b>.</span></span> <span data-ttu-id="65c6c-1206">Células de qualquer formato. <b>xlCellTypeAllValidation</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1206">Cells of any format.<b>xlCellTypeAllValidation</b>.</span></span> <span data-ttu-id="65c6c-1207">Células com critérios de validação. <b>xlCellTypeBlanks</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1207">Cells having validation criteria.<b>xlCellTypeBlanks</b>.</span></span> <span data-ttu-id="65c6c-1208">Células vazias. <b>xlCellTypeComments</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1208">Empty cells.<b>xlCellTypeComments</b>.</span></span> <span data-ttu-id="65c6c-1209">Células que contêm anotações. <b>xlCellTypeConstants</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1209">Cells containing notes.<b>xlCellTypeConstants</b>.</span></span> <span data-ttu-id="65c6c-1210">Células que contêm constantes. <b>xlCellTypeFormulas</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1210">Cells containing constants.<b>xlCellTypeFormulas</b>.</span></span> <span data-ttu-id="65c6c-1211">Células que contêm fórmulas. <b>xlCellTypeLastCell</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1211">Cells containing formulas.<b>xlCellTypeLastCell</b>.</span></span> <span data-ttu-id="65c6c-1212">A última célula no intervalo usado. <b>xlCellTypeSameFormatConditions</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1212">The last cell in the used range.<b>xlCellTypeSameFormatConditions</b>.</span></span> <span data-ttu-id="65c6c-1213">Células com o mesmo formato. <b>xlCellTypeSameValidation</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1213">Cells having the same format.<b>xlCellTypeSameValidation</b>.</span></span> <span data-ttu-id="65c6c-1214">Células com os mesmos critérios de validação. <b>xlCellTypeVisible</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1214">Cells having the same validation criteria.<b>xlCellTypeVisible</b>.</span></span> <span data-ttu-id="65c6c-1215">Todas as células visíveis.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1215">All visible cells.</span></span></param>
        <param name="Value"><span data-ttu-id="65c6c-1216">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1216">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-1217">Se <paramref name="Type" /> for <b>xlCellTypeConstants</b> ou <b>xlCellTypeFormulas</b>, esse argumento será usado para determinar quais tipos de células serão incluídos no resultado.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1217">If <paramref name="Type" /> is either <b>xlCellTypeConstants</b> or <b>xlCellTypeFormulas</b>, this argument is used to determine which types of cells to include in the result.</span></span> <span data-ttu-id="65c6c-1218">Esses valores podem ser adicionados juntos para retornar mais de um tipo.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1218">These values can be added together to return more than one type.</span></span> <span data-ttu-id="65c6c-1219">O padrão é selecionar todas as constantes ou as fórmulas, independente do tipo.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1219">The default is to select all constants or formulas, no matter what the type.</span></span> <span data-ttu-id="65c6c-1220">Pode ser uma das seguintes <see cref="T:Microsoft.Office.Interop.Excel.XlSpecialCellsValue" /> constantes:<b>xlErrors</b><b>xlLogical</b><b>xlNumbers</b><b>xlTextValues</b></span><span class="sxs-lookup"><span data-stu-id="65c6c-1220">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlSpecialCellsValue" /> constants:<b>xlErrors</b><b>xlLogical</b><b>xlNumbers</b><b>xlTextValues</b></span></span></param>
        <summary><span data-ttu-id="65c6c-1221">Retorna um <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objeto que representa todas as células que corresponderem ao tipo e ao valor especificados.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1221">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents all the cells that match the specified type and value.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Style">
      <MemberSignature Language="C#" Value="public object Style { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Style" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Style" />
      <MemberSignature Language="VB.NET" Value="Public Property Style As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Style { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(260)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(260)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(260)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65c6c-1222">Retorna um <see cref="T:Microsoft.Office.Interop.Excel.Style" /> objeto que representa o estilo do intervalo especificado.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1222">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Style" /> object that represents the style of the specified range.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubscribeTo">
      <MemberSignature Language="C#" Value="public object SubscribeTo (string Edition, Microsoft.Office.Interop.Excel.XlSubscribeToFormat Format = Microsoft.Office.Interop.Excel.XlSubscribeToFormat.xlSubscribeToText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object SubscribeTo([in]string Edition, [in]valuetype Microsoft.Office.Interop.Excel.XlSubscribeToFormat Format) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.SubscribeTo(System.String,Microsoft.Office.Interop.Excel.XlSubscribeToFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Function SubscribeTo (Edition As String, Optional Format As XlSubscribeToFormat = Microsoft.Office.Interop.Excel.XlSubscribeToFormat.xlSubscribeToText) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(481)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Edition" Type="System.String" />
        <Parameter Name="Format" Type="Microsoft.Office.Interop.Excel.XlSubscribeToFormat" />
      </Parameters>
      <Docs>
        <param name="Edition"><span data-ttu-id="65c6c-1223">This parameter is for Macintosh only and should not be used.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1223">This parameter is for Macintosh only and should not be used.</span></span></param>
        <param name="Format"><span data-ttu-id="65c6c-1224">This parameter is for Macintosh only and should not be used.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1224">This parameter is for Macintosh only and should not be used.</span></span></param>
        <summary><span data-ttu-id="65c6c-1225">Você solicitou ajuda sobre uma palavra-chave usada somente no Macintosh.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1225">You have requested Help for a keyword used only on the Macintosh.</span></span> <span data-ttu-id="65c6c-1226">Para obter informações sobre essa palavra-chave, consulte a Ajuda de referência de idioma fornecida no Microsoft Office Macintosh Edition.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1226">For information about this keyword, consult the language reference Help included with Microsoft Office Macintosh Edition.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Subtotal">
      <MemberSignature Language="C#" Value="public object Subtotal (int GroupBy, Microsoft.Office.Interop.Excel.XlConsolidationFunction Function, object TotalList, object Replace, object PageBreaks, Microsoft.Office.Interop.Excel.XlSummaryRow SummaryBelowData = Microsoft.Office.Interop.Excel.XlSummaryRow.xlSummaryBelow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Subtotal([in]int32 GroupBy, [in]valuetype Microsoft.Office.Interop.Excel.XlConsolidationFunction Function, [in]object TotalList, [in]object Replace, [in]object PageBreaks, [in]valuetype Microsoft.Office.Interop.Excel.XlSummaryRow SummaryBelowData) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Subtotal(System.Int32,Microsoft.Office.Interop.Excel.XlConsolidationFunction,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSummaryRow)" />
      <MemberSignature Language="VB.NET" Value="Public Function Subtotal (GroupBy As Integer, Function As XlConsolidationFunction, TotalList As Object, Optional Replace As Object, Optional PageBreaks As Object, Optional SummaryBelowData As XlSummaryRow = Microsoft.Office.Interop.Excel.XlSummaryRow.xlSummaryBelow) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(882)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="GroupBy" Type="System.Int32" />
        <Parameter Name="Function" Type="Microsoft.Office.Interop.Excel.XlConsolidationFunction" />
        <Parameter Name="TotalList" Type="System.Object" />
        <Parameter Name="Replace" Type="System.Object" />
        <Parameter Name="PageBreaks" Type="System.Object" />
        <Parameter Name="SummaryBelowData" Type="Microsoft.Office.Interop.Excel.XlSummaryRow" />
      </Parameters>
      <Docs>
        <param name="GroupBy"><span data-ttu-id="65c6c-1227">Obrigatório <b>Integer</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1227">Required <b>Integer</b>.</span></span> <span data-ttu-id="65c6c-1228">O campo pelo qual agrupar, como um deslocamento inteiro baseado em 1.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1228">The field to group by, as a one-based integer offset.</span></span> <span data-ttu-id="65c6c-1229">Para obter mais informações, consulte o exemplo.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1229">For more information, see the example.</span></span></param>
        <param name="Function"><span data-ttu-id="65c6c-1230">Obrigatório. <see cref="T:Microsoft.Office.Interop.Excel.XlConsolidationFunction" /></span><span class="sxs-lookup"><span data-stu-id="65c6c-1230">Required <see cref="T:Microsoft.Office.Interop.Excel.XlConsolidationFunction" />.</span></span> <span data-ttu-id="65c6c-1231">A função de subtotal.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1231">The subtotal function.</span></span> <span data-ttu-id="65c6c-1232">Pode ser uma das seguintes constantes <b>XlConsolidationFunction:</b> <b>xlAverage</b><b>xlCount</b><b>xlCountNums</b><b>xlMax</b><b>xlMin</b><b>xlProduct</b><b>xlStDev</b><b>xlStDevP</b><b>xlSum</b><b>xlUnknown</b><b>xlVar</b><b>xlVarP</b></span><span class="sxs-lookup"><span data-stu-id="65c6c-1232">Can be one of the following <b>XlConsolidationFunction</b> constants:<b>xlAverage</b><b>xlCount</b><b>xlCountNums</b><b>xlMax</b><b>xlMin</b><b>xlProduct</b><b>xlStDev</b><b>xlStDevP</b><b>xlSum</b><b>xlUnknown</b><b>xlVar</b><b>xlVarP</b></span></span></param>
        <param name="TotalList"><span data-ttu-id="65c6c-1233">Objeto <b>Required</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1233">Required <b>Object</b>.</span></span> <span data-ttu-id="65c6c-1234">Uma matriz de deslocamentos de campo baseados em 1, indicando os campos aos quais os subtotais são adicionados.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1234">An array of 1-based field offsets, indicating the fields to which the subtotals are added.</span></span> <span data-ttu-id="65c6c-1235">Para obter mais informações, consulte o exemplo.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1235">For more information, see the example.</span></span></param>
        <param name="Replace"><span data-ttu-id="65c6c-1236">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1236">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-1237"><b>True</b> para substituir os subtotais existentes.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1237"><b>True</b> to replace existing subtotals.</span></span> <span data-ttu-id="65c6c-1238">O valor padrão é <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1238">The default value is <b>False</b>.</span></span></param>
        <param name="PageBreaks"><span data-ttu-id="65c6c-1239">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1239">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-1240"><b>True</b> para adicionar quebras de página após cada grupo.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1240"><b>True</b> to add page breaks after each group.</span></span> <span data-ttu-id="65c6c-1241">O valor padrão é <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1241">The default value is <b>False</b>.</span></span></param>
        <param name="SummaryBelowData"><span data-ttu-id="65c6c-1242">Opcional <see cref="T:Microsoft.Office.Interop.Excel.XlSummaryRow" /> .</span><span class="sxs-lookup"><span data-stu-id="65c6c-1242">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSummaryRow" />.</span></span> <span data-ttu-id="65c6c-1243">Insere dados de resumo relativos ao subtotal.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1243">Places the summary data relative to the subtotal.</span></span> <span data-ttu-id="65c6c-1244">Pode ser uma das seguintes constantes <b>XlSummaryRow:</b> <b>xlSummaryAbove</b><b>xlSummaryBelow</b><paramref name="default" /></span><span class="sxs-lookup"><span data-stu-id="65c6c-1244">Can be one of the following <b>XlSummaryRow</b> constants:<b>xlSummaryAbove</b><b>xlSummaryBelow</b><paramref name="default" /></span></span></param>
        <summary><span data-ttu-id="65c6c-1245">Cria subtotais para o intervalo (ou para a região atual, se o intervalo for uma única célula).</span><span class="sxs-lookup"><span data-stu-id="65c6c-1245">Creates subtotals for the range (or the current region, if the range is a single cell).</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Summary">
      <MemberSignature Language="C#" Value="public object Summary { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Summary" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Summary" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Summary As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Summary { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(273)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(273)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65c6c-1246">Determina se o intervalo é uma linha ou coluna de resumo delineado.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1246">Determines if the range is an outlining summary row or column.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="65c6c-1247">Essa propriedade <b>retornará True</b> se o intervalo for uma linha ou coluna de resumo delineado.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1247">This property returns <b>True</b> if the range is an outlining summary row or column.</span></span></para>
          <para><span data-ttu-id="65c6c-1248">O intervalo deve ser uma linha ou uma coluna.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1248">The range should be a row or a column.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Table">
      <MemberSignature Language="C#" Value="public object Table (object RowInput, object ColumnInput);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Table([in]object RowInput, [in]object ColumnInput) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Table(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Table (Optional RowInput As Object, Optional ColumnInput As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(497)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="RowInput" Type="System.Object" />
        <Parameter Name="ColumnInput" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="RowInput"><span data-ttu-id="65c6c-1249">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1249">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-1250">Uma única célula a ser usada como entrada de linha para sua tabela.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1250">A single cell to use as the row input for your table.</span></span></param>
        <param name="ColumnInput"><span data-ttu-id="65c6c-1251">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1251">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-1252">Uma única célula a ser usada como entrada de coluna para sua tabela.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1252">A single cell to use as the column input for your table.</span></span></param>
        <summary><span data-ttu-id="65c6c-1253">Cria uma tabela de dados com base nas fórmulas e valores de entrada e definidos por você em uma planilha.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1253">Creates a data table based on input values and formulas that you define on a worksheet.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="65c6c-1254">Use tabelas de dados para efetuar uma análise hipotética alterando certos valores constantes em sua planilha para ver como os valores das outras células são afetados.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1254">Use data tables to perform a what-if analysis by changing certain constant values on your worksheet to see how values in other cells are affected.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public object Text { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Text" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Text" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Text As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Text { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(138)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(138)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65c6c-1255">Retorna ou define o texto do objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1255">Returns or sets the text for the specified object.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="65c6c-1256">Para o <see cref="T:Microsoft.Office.Interop.Excel.Phonetic" /> objeto, essa propriedade retorna ou define seu texto phoneético.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1256">For the <see cref="T:Microsoft.Office.Interop.Excel.Phonetic" /> object, this property returns or sets its phonetic text.</span></span> <span data-ttu-id="65c6c-1257">Não é possível definir essa propriedade como <b>Null</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1257">You cannot set this property to <b>Null</b>.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="TextToColumns">
      <MemberSignature Language="C#" Value="public object TextToColumns (object Destination, Microsoft.Office.Interop.Excel.XlTextParsingType DataType = Microsoft.Office.Interop.Excel.XlTextParsingType.xlDelimited, Microsoft.Office.Interop.Excel.XlTextQualifier TextQualifier = Microsoft.Office.Interop.Excel.XlTextQualifier.xlTextQualifierDoubleQuote, object ConsecutiveDelimiter, object Tab, object Semicolon, object Comma, object Space, object Other, object OtherChar, object FieldInfo, object DecimalSeparator, object ThousandsSeparator, object TrailingMinusNumbers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object TextToColumns([in]object Destination, [in]valuetype Microsoft.Office.Interop.Excel.XlTextParsingType DataType, [in]valuetype Microsoft.Office.Interop.Excel.XlTextQualifier TextQualifier, [in]object ConsecutiveDelimiter, [in]object Tab, [in]object Semicolon, [in]object Comma, [in]object Space, [in]object Other, [in]object OtherChar, [in]object FieldInfo, [in]object DecimalSeparator, [in]object ThousandsSeparator, [in]object TrailingMinusNumbers) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.TextToColumns(System.Object,Microsoft.Office.Interop.Excel.XlTextParsingType,Microsoft.Office.Interop.Excel.XlTextQualifier,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function TextToColumns (Optional Destination As Object, Optional DataType As XlTextParsingType = Microsoft.Office.Interop.Excel.XlTextParsingType.xlDelimited, Optional TextQualifier As XlTextQualifier = Microsoft.Office.Interop.Excel.XlTextQualifier.xlTextQualifierDoubleQuote, Optional ConsecutiveDelimiter As Object, Optional Tab As Object, Optional Semicolon As Object, Optional Comma As Object, Optional Space As Object, Optional Other As Object, Optional OtherChar As Object, Optional FieldInfo As Object, Optional DecimalSeparator As Object, Optional ThousandsSeparator As Object, Optional TrailingMinusNumbers As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1040)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Destination" Type="System.Object" />
        <Parameter Name="DataType" Type="Microsoft.Office.Interop.Excel.XlTextParsingType" />
        <Parameter Name="TextQualifier" Type="Microsoft.Office.Interop.Excel.XlTextQualifier" />
        <Parameter Name="ConsecutiveDelimiter" Type="System.Object" />
        <Parameter Name="Tab" Type="System.Object" />
        <Parameter Name="Semicolon" Type="System.Object" />
        <Parameter Name="Comma" Type="System.Object" />
        <Parameter Name="Space" Type="System.Object" />
        <Parameter Name="Other" Type="System.Object" />
        <Parameter Name="OtherChar" Type="System.Object" />
        <Parameter Name="FieldInfo" Type="System.Object" />
        <Parameter Name="DecimalSeparator" Type="System.Object" />
        <Parameter Name="ThousandsSeparator" Type="System.Object" />
        <Parameter Name="TrailingMinusNumbers" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Destination"><span data-ttu-id="65c6c-1258">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1258">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-1259">Um <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objeto que especifica onde o Microsoft Excel colocará os resultados.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1259">A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that specifies where Microsoft Excel will place the results.</span></span> <span data-ttu-id="65c6c-1260">Se o intervalo for maior do que uma única célula, a célula superior esquerda será usada.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1260">If the range is larger than a single cell, the top left cell is used.</span></span></param>
        <param name="DataType"><span data-ttu-id="65c6c-1261">Opcional <see cref="T:Microsoft.Office.Interop.Excel.XlTextParsingType" /> .</span><span class="sxs-lookup"><span data-stu-id="65c6c-1261">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlTextParsingType" />.</span></span> <span data-ttu-id="65c6c-1262">O formato do texto a ser dividido em colunas.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1262">The format of the text to be split into columns.</span></span> <span data-ttu-id="65c6c-1263">Pode ser uma das seguintes <b>constantes XlTextParsingType:</b> <b>xlDelimited </b> <paramref name="default" /> <b>xlFixedWidth</b></span><span class="sxs-lookup"><span data-stu-id="65c6c-1263">Can be one of the following <b>XlTextParsingType</b> constants:<b>xlDelimited </b><paramref name="default" /><b>xlFixedWidth</b></span></span></param>
        <param name="TextQualifier"><span data-ttu-id="65c6c-1264">Opcional <see cref="T:Microsoft.Office.Interop.Excel.XlTextQualifier" /> .</span><span class="sxs-lookup"><span data-stu-id="65c6c-1264">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlTextQualifier" />.</span></span> <span data-ttu-id="65c6c-1265">Pode ser uma das seguintes constantes <b>XlTextQualifier:</b> <b>xlTextQualifierDoubleQuote</b> <paramref name="default" /> <b>xlTextQualifierNone</b><b>xlTextQualifierSingleQuote</b></span><span class="sxs-lookup"><span data-stu-id="65c6c-1265">Can be one of the following <b>XlTextQualifier</b> constants:<b>xlTextQualifierDoubleQuote</b><paramref name="default" /><b>xlTextQualifierNone</b><b>xlTextQualifierSingleQuote</b></span></span></param>
        <param name="ConsecutiveDelimiter"><span data-ttu-id="65c6c-1266">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1266">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-1267"><b>True</b> para que o Microsoft Excel considere delimitadores consecutivos como um delimitador.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1267"><b>True</b> to have Microsoft Excel consider consecutive delimiters as one delimiter.</span></span> <span data-ttu-id="65c6c-1268">O valor padrão é <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1268">The default value is <b>False</b>.</span></span></param>
        <param name="Tab"><span data-ttu-id="65c6c-1269">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1269">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-1270"><b>True</b> para ter <paramref name="DataType" /> <b>xlDelimited</b> e ter o caractere de tabulação como um delimiter.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1270"><b>True</b> to have <paramref name="DataType" /> be <b>xlDelimited</b> and to have the tab character be a delimiter.</span></span> <span data-ttu-id="65c6c-1271">O valor padrão é <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1271">The default value is <b>False</b>.</span></span></param>
        <param name="Semicolon"><span data-ttu-id="65c6c-1272">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1272">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-1273"><b>True</b> para <paramref name="DataType" /> ser <b>xlDelimited</b> e ter o ponto-e-vírgula como um delimiter.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1273"><b>True</b> to have <paramref name="DataType" /> be <b>xlDelimited</b> and to have the semicolon be a delimiter.</span></span> <span data-ttu-id="65c6c-1274">O valor padrão é <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1274">The default value is <b>False</b>.</span></span></param>
        <param name="Comma"><span data-ttu-id="65c6c-1275">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1275">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-1276"><b>True</b> para <paramref name="DataType" /> ter <b>xlDelimited</b> e ter a vírgula como um delimiter.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1276"><b>True</b> to have <paramref name="DataType" /> be <b>xlDelimited</b> and to have the comma be a delimiter.</span></span> <span data-ttu-id="65c6c-1277">O valor padrão é <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1277">The default value is <b>False</b>.</span></span></param>
        <param name="Space"><span data-ttu-id="65c6c-1278">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1278">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-1279"><b>True</b> para ter <paramref name="DataType" /> <b>xlDelimited</b> e ter o caractere de espaço como um delimiter.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1279"><b>True</b> to have <paramref name="DataType" /> be <b>xlDelimited</b> and to have the space character be a delimiter.</span></span> <span data-ttu-id="65c6c-1280">O valor padrão é <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1280">The default value is <b>False</b>.</span></span></param>
        <param name="Other"><span data-ttu-id="65c6c-1281">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1281">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-1282"><b>True</b> para <paramref name="DataType" /> ter <b>xlDelimited</b> e ter o caractere especificado pelo <paramref name="OtherChar" /> argumento como um delimiter.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1282"><b>True</b> to have <paramref name="DataType" /> be <b>xlDelimited</b> and to have the character specified by the <paramref name="OtherChar" /> argument be a delimiter.</span></span> <span data-ttu-id="65c6c-1283">O valor padrão é <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1283">The default value is <b>False</b>.</span></span></param>
        <param name="OtherChar"><span data-ttu-id="65c6c-1284">Objeto <b>opcional</b> (obrigatório se <paramref name="Other" /> for <b>True</b>).</span><span class="sxs-lookup"><span data-stu-id="65c6c-1284">Optional <b>Object</b> (required if <paramref name="Other" /> is <b>True</b>).</span></span> <span data-ttu-id="65c6c-1285">O caractere do delimiter quando <paramref name="Other" /> é <b>True</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1285">The delimiter character when <paramref name="Other" /> is <b>True</b>.</span></span> <span data-ttu-id="65c6c-1286">Se mais de um caractere for especificado, somente o primeiro caractere da cadeia de caracteres será usado; os caracteres restantes será ignorado.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1286">If more than one character is specified, only the first character of the string is used; the remaining characters are ignored.</span></span></param>
        <param name="FieldInfo"><span data-ttu-id="65c6c-1287">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1287">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-1288">Uma matriz com informações de análise para colunas de dados individuais.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1288">An array containing parse information for the individual columns of data.</span></span> <span data-ttu-id="65c6c-1289">A interpretação depende do valor de <paramref name="DataType" /> .</span><span class="sxs-lookup"><span data-stu-id="65c6c-1289">The interpretation depends on the value of <paramref name="DataType" />.</span></span> <span data-ttu-id="65c6c-1290">Quando os dados forem delimitados, esse argumento será uma matriz de matrizes de dois elementos, com cada matriz de dois elementos especificando as opções de conversão para uma coluna em particular.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1290">When the data is delimited, this argument is an array of two-element arrays, with each two-element array specifying the conversion options for a particular column.</span></span> <span data-ttu-id="65c6c-1291">O primeiro elemento é o número da coluna (baseado em 1) e o segundo elemento é uma das constantes que especificam como a coluna <see cref="T:Microsoft.Office.Interop.Excel.XlColumnDataType" /> é analisado.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1291">The first element is the column number (1-based), and the second element is one of the <see cref="T:Microsoft.Office.Interop.Excel.XlColumnDataType" /> constants specifying how the column is parsed.</span></span> <span data-ttu-id="65c6c-1292">Pode ser uma das seguintes constantes <b>XlColumnDataType:</b> <b>xlGeneralFormat</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1292">Can be one of the following <b>XlColumnDataType</b> constants:<b>xlGeneralFormat</b>.</span></span> <span data-ttu-id="65c6c-1293">Genera.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1293">Genera.</span></span> <span data-ttu-id="65c6c-1294"><b>xlTextFormat</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1294"><b>xlTextFormat</b>.</span></span> <span data-ttu-id="65c6c-1295">Texto. <b>xlMDYFormat</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1295">Text.<b>xlMDYFormat</b>.</span></span> <span data-ttu-id="65c6c-1296">Data MDY. <b>xlDMYFormat</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1296">MDY Date.<b>xlDMYFormat</b>.</span></span> <span data-ttu-id="65c6c-1297">Data DMY. <b>xlYMDFormat</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1297">DMY Date.<b>xlYMDFormat</b>.</span></span> <span data-ttu-id="65c6c-1298">Data YMD. <b>xlMYDFormat</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1298">YMD Date.<b>xlMYDFormat</b>.</span></span> <span data-ttu-id="65c6c-1299">Data MYD. <b>xlDYMFormat</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1299">MYD Date.<b>xlDYMFormat</b>.</span></span> <span data-ttu-id="65c6c-1300">Data DYM. <b>xlYDMFormat</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1300">DYM Date.<b>xlYDMFormat</b>.</span></span> <span data-ttu-id="65c6c-1301">Data YDM. <b>xlEMDFormat</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1301">YDM Date.<b>xlEMDFormat</b>.</span></span> <span data-ttu-id="65c6c-1302">Data EMD. <b>xlSkipColumn</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1302">EMD Date.<b>xlSkipColumn</b>.</span></span> <span data-ttu-id="65c6c-1303">Ignorar Coluna.Você só poderá usar <b>xlEMDFormat</b> se o suporte ao idioma taiwanês estiver instalado e selecionado.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1303">Skip Column.You can use <b>xlEMDFormat</b> only if Taiwanese language support is installed and selected.</span></span> <span data-ttu-id="65c6c-1304">A <b>constante xlEMDFormat</b> especifica que as datas da era taiwanesa estão sendo usadas. Os especificadores de coluna podem estar em qualquer ordem.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1304">The <b>xlEMDFormat</b> constant specifies that Taiwanese era dates are being used.The column specifiers can be in any order.</span></span> <span data-ttu-id="65c6c-1305">Se um determinado especificador de coluna não estiver presente para uma coluna específica nos dados de entrada, a coluna será analisado com a <b>configuração</b> Geral. Se os dados de origem têm colunas de largura fixa, o primeiro elemento de cada matriz de dois elementos especifica a posição de caractere inicial na coluna (como um inteiro; 0 (zero) é o primeiro caractere).</span><span class="sxs-lookup"><span data-stu-id="65c6c-1305">If a given column specifier is not present for a particular column in the input data, the column is parsed with the <b>General</b> setting.If the source data has fixed-width columns, the first element of each two-element array specifies the starting character position in the column (as an integer; 0 (zero) is the first character).</span></span> <span data-ttu-id="65c6c-1306">O segundo elemento da matriz de dois elementos especifica a opção de análise para a coluna como um número de 1 a 9, como listado acima.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1306">The second element of the two-element array specifies the parse option for the column as a number from 1 through 9, as listed above.</span></span></param>
        <param name="DecimalSeparator"><span data-ttu-id="65c6c-1307">Cadeia de <b>caracteres opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1307">Optional <b>String</b>.</span></span> <span data-ttu-id="65c6c-1308">O separador decimal que o Microsoft Excel usa ao reconhecer números.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1308">The decimal separator that Microsoft Excel uses when recognizing numbers.</span></span> <span data-ttu-id="65c6c-1309">A configuração padrão é a configuração do sistema.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1309">The default setting is the system setting.</span></span></param>
        <param name="ThousandsSeparator"><span data-ttu-id="65c6c-1310">Cadeia de <b>caracteres opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1310">Optional <b>String</b>.</span></span> <span data-ttu-id="65c6c-1311">O separador de milhares que o Excel usa ao reconhecer números.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1311">The thousands separator that Excel uses when recognizing numbers.</span></span> <span data-ttu-id="65c6c-1312">A configuração padrão é a configuração do sistema.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1312">The default setting is the system setting.</span></span></param>
        <param name="TrailingMinusNumbers"><span data-ttu-id="65c6c-1313">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1313">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-1314">Números que começam com um sinal de menos.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1314">Numbers that begin with a minus character.</span></span></param>
        <summary><span data-ttu-id="65c6c-1315">Analisa uma coluna de células que contêm texto em várias colunas.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1315">Parses a column of cells that contain text into several columns.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="65c6c-1316">A tabela a seguir mostra os resultados da importação de texto para o Excel para diversas configurações de importação.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1316">The following table shows the results of importing text into Excel for various import settings.</span></span> <span data-ttu-id="65c6c-1317">Os resultados numéricos são exibidos na coluna mais à direita.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1317">Numeric results are displayed in the rightmost column.</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="65c6c-1318">Ponto</span><span class="sxs-lookup"><span data-stu-id="65c6c-1318">Period</span></span></term>
              <description><span data-ttu-id="65c6c-1319">Ponto</span><span class="sxs-lookup"><span data-stu-id="65c6c-1319">Comma</span></span></description>
              <description><span data-ttu-id="65c6c-1320">Ponto</span><span class="sxs-lookup"><span data-stu-id="65c6c-1320">Comma</span></span></description>
              <description><span data-ttu-id="65c6c-1321">Ponto</span><span class="sxs-lookup"><span data-stu-id="65c6c-1321">Period</span></span></description>
              <description><span data-ttu-id="65c6c-1322">123,123.45</span><span class="sxs-lookup"><span data-stu-id="65c6c-1322">123.123,45</span></span></description>
              <description><span data-ttu-id="65c6c-1323">123.123,45 (numérico)</span><span class="sxs-lookup"><span data-stu-id="65c6c-1323">123,123.45 (numeric)</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="65c6c-1324">Ponto</span><span class="sxs-lookup"><span data-stu-id="65c6c-1324">Period</span></span></term>
              <description><span data-ttu-id="65c6c-1325">Ponto</span><span class="sxs-lookup"><span data-stu-id="65c6c-1325">Comma</span></span></description>
              <description><span data-ttu-id="65c6c-1326">Ponto</span><span class="sxs-lookup"><span data-stu-id="65c6c-1326">Comma</span></span></description>
              <description><span data-ttu-id="65c6c-1327">Ponto</span><span class="sxs-lookup"><span data-stu-id="65c6c-1327">Comma</span></span></description>
              <description><span data-ttu-id="65c6c-1328">123,123.45</span><span class="sxs-lookup"><span data-stu-id="65c6c-1328">123.123,45</span></span></description>
              <description><span data-ttu-id="65c6c-1329">123.123,45 (texto)</span><span class="sxs-lookup"><span data-stu-id="65c6c-1329">123.123,45 (text)</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="65c6c-1330">Ponto</span><span class="sxs-lookup"><span data-stu-id="65c6c-1330">Comma</span></span></term>
              <description><span data-ttu-id="65c6c-1331">Ponto</span><span class="sxs-lookup"><span data-stu-id="65c6c-1331">Period</span></span></description>
              <description><span data-ttu-id="65c6c-1332">Ponto</span><span class="sxs-lookup"><span data-stu-id="65c6c-1332">Comma</span></span></description>
              <description><span data-ttu-id="65c6c-1333">Ponto</span><span class="sxs-lookup"><span data-stu-id="65c6c-1333">Period</span></span></description>
              <description><span data-ttu-id="65c6c-1334">123,123.45</span><span class="sxs-lookup"><span data-stu-id="65c6c-1334">123,123.45</span></span></description>
              <description><span data-ttu-id="65c6c-1335">123.123,45 (numérico)</span><span class="sxs-lookup"><span data-stu-id="65c6c-1335">123,123.45 (numeric)</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="65c6c-1336">Ponto</span><span class="sxs-lookup"><span data-stu-id="65c6c-1336">Period</span></span></term>
              <description><span data-ttu-id="65c6c-1337">Ponto</span><span class="sxs-lookup"><span data-stu-id="65c6c-1337">Comma</span></span></description>
              <description><span data-ttu-id="65c6c-1338">Ponto</span><span class="sxs-lookup"><span data-stu-id="65c6c-1338">Period</span></span></description>
              <description><span data-ttu-id="65c6c-1339">Ponto</span><span class="sxs-lookup"><span data-stu-id="65c6c-1339">Comma</span></span></description>
              <description><span data-ttu-id="65c6c-1340">123 123,45</span><span class="sxs-lookup"><span data-stu-id="65c6c-1340">123 123.45</span></span></description>
              <description><span data-ttu-id="65c6c-1341">123 123,45 (texto)</span><span class="sxs-lookup"><span data-stu-id="65c6c-1341">123 123.45 (text)</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="65c6c-1342">Ponto</span><span class="sxs-lookup"><span data-stu-id="65c6c-1342">Period</span></span></term>
              <description><span data-ttu-id="65c6c-1343">Ponto</span><span class="sxs-lookup"><span data-stu-id="65c6c-1343">Comma</span></span></description>
              <description><span data-ttu-id="65c6c-1344">Ponto</span><span class="sxs-lookup"><span data-stu-id="65c6c-1344">Period</span></span></description>
              <description><span data-ttu-id="65c6c-1345">Espaço</span><span class="sxs-lookup"><span data-stu-id="65c6c-1345">Space</span></span></description>
              <description><span data-ttu-id="65c6c-1346">123 123,45</span><span class="sxs-lookup"><span data-stu-id="65c6c-1346">123 123.45</span></span></description>
              <description><span data-ttu-id="65c6c-1347">123.123,45 (numérico)</span><span class="sxs-lookup"><span data-stu-id="65c6c-1347">123,123.45 (numeric)</span></span></description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Top">
      <MemberSignature Language="C#" Value="public object Top { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Top" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Top" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Top As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Top { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(126)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(126)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65c6c-1348">Retorna a distância, em pontos, da borda superior da linha 1 até a borda superior do intervalo.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1348">Returns the distance, in points, from the top edge of row 1 to the top edge of the range.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="65c6c-1349">Se o intervalo não for contíguo, a primeira área será usada.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1349">If the range is noncontiguous, the first area is used.</span></span> <span data-ttu-id="65c6c-1350">Se o intervalo tiver mais de uma linha de altura, a linha de cima (de numeração mais baixa) do intervalo será usada.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1350">If the range is more than one row high, the top (lowest numbered) row in the range is used.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Ungroup">
      <MemberSignature Language="C#" Value="public object Ungroup ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Ungroup() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Ungroup" />
      <MemberSignature Language="VB.NET" Value="Public Function Ungroup () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Ungroup();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(244)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="65c6c-1351">Promove um intervalo em uma estrutura de tópicos (ou seja, diminui o seu nível na estrutura).</span><span class="sxs-lookup"><span data-stu-id="65c6c-1351">Promotes a range in an outline (that is, decreases its outline level).</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="65c6c-1352">O intervalo especificado precisa ser uma linha ou coluna ou um intervalo de linhas ou colunas.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1352">The specified range must be a row or column, or a range of rows or columns.</span></span> <span data-ttu-id="65c6c-1353">Se o intervalo estiver em um relatório de tabela dinâmica, este método desagrupará os itens contidos no intervalo.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1353">If the range is in a PivotTable report, this method ungroups the items contained in the range.</span></span></para>
          <para><span data-ttu-id="65c6c-p392">Se a célula ativa estiver em um cabeçalho de campo de um campo pai, todos os grupos nesse campo serão desagrupados e o campo será removido do relatório de tabela dinâmica. Quando o último grupo em um campo pai é desagrupado, o campo inteiro é removido do relatório de tabela dinâmica.</span><span class="sxs-lookup"><span data-stu-id="65c6c-p392">If the active cell is in a field header of a parent field, all the groups in that field are ungrouped and the field is removed from the PivotTable report. When the last group in a parent field is ungrouped, the entire field is removed from the report.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="UnMerge">
      <MemberSignature Language="C#" Value="public void UnMerge ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnMerge() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.UnMerge" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnMerge ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UnMerge();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1384)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="65c6c-1356">Separa uma área mesclada em células individuais.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1356">Separates a merged area into individual cells.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseStandardHeight">
      <MemberSignature Language="C#" Value="public object UseStandardHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object UseStandardHeight" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.UseStandardHeight" />
      <MemberSignature Language="VB.NET" Value="Public Property UseStandardHeight As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ UseStandardHeight { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(274)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(274)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(274)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65c6c-1357">Determina se a altura da linha do <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objeto é igual à altura padrão da planilha.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1357">Determines if the row height of the <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object equals the standard height of the sheet.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="65c6c-1358">Essa propriedade retornará <b>True</b> se a altura da linha do objeto <b>Range</b> for igual à altura padrão da planilha e <b>Null</b> se o intervalo contiver mais de uma linha e se as linhas não têm a mesma altura.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1358">This property returns <b>True</b> if the row height of the <b>Range</b> object equals the standard height of the sheet and <b>Null</b> if the range contains more than one row and the rows aren’t all the same height.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="UseStandardWidth">
      <MemberSignature Language="C#" Value="public object UseStandardWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object UseStandardWidth" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.UseStandardWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property UseStandardWidth As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ UseStandardWidth { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(275)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(275)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(275)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65c6c-1359">Determina se a largura da coluna do <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objeto é igual à largura padrão da planilha.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1359">Determines if the column width of the <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object equals the standard width of the sheet.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="65c6c-1360">Essa propriedade retornará <b>True</b> se a largura da coluna do objeto <b>Range</b> for igual à largura padrão da planilha e <b>Null</b> se o intervalo contiver mais de uma coluna e se as colunas não têm a mesma largura.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1360">This property returns <b>True</b> if the column width of the <b>Range</b> object equals the standard width of the sheet and <b>Null</b> if the range contains more than one column and the columns aren’t all the same width.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Validation">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Validation Validation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Validation Validation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Validation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Validation As Validation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Validation ^ Validation { Microsoft::Office::Interop::Excel::Validation ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1387)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1387)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Validation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65c6c-1361">Retorna o <see cref="T:Microsoft.Office.Interop.Excel.Validation" /> objeto que representa a validação de dados para o intervalo especificado.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1361">Returns the <see cref="T:Microsoft.Office.Interop.Excel.Validation" /> object that represents data validation for the specified range.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value[object RangeValueDataType] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Value(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Property Value(Optional RangeValueDataType As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value[System::Object ^] { System::Object ^ get(System::Object ^ RangeValueDataType); void set(System::Object ^ RangeValueDataType, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="RangeValueDataType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="RangeValueDataType"><span data-ttu-id="65c6c-1362">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1362">Optional <b>Object</b>.</span></span> <span data-ttu-id="65c6c-1363">O tipo de dados do valor do intervalo.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1363">The range value data type.</span></span> <span data-ttu-id="65c6c-1364">Pode ser uma das seguintes <see cref="T:Microsoft.Office.Interop.Excel.XlRangeValueDataType" /> constantes:<b>xlRangeValueDefault</b> Se o objeto especificado estiver vazio, retorna o valor Empty (use a função <paramref name="default" /> <see cref="T:Microsoft.Office.Interop.Excel.Range" /> <b>IsEmpty</b> <b></b> para testar esse caso).</span><span class="sxs-lookup"><span data-stu-id="65c6c-1364">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlRangeValueDataType" /> constants:<b>xlRangeValueDefault</b><paramref name="default" /> If the specified <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object is empty, returns the value <b>Empty</b> (use the <b>IsEmpty</b> function to test for this case).</span></span> <span data-ttu-id="65c6c-1365">Se o <b>objeto Range</b> contiver mais de uma célula, retornará uma matriz de valores (use a <b>função IsArray</b> para testar esse caso). <b>xlRangeValueMSPersistXML</b>    Retorna a representação do recordset do objeto <b>Range</b> especificado em um formato XML. <b>xlRangeValueXMLSpreadsheet</b>    Retorna os valores, a formatação, as fórmulas e os nomes do objeto <b>Range</b> especificado no formato de Planilha XML.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1365">If the <b>Range</b> object contains more than one cell, returns an array of values (use the <b>IsArray</b> function to test for this case).<b>xlRangeValueMSPersistXML</b>    Returns the recordset representation of the specified <b>Range</b> object in an XML format.<b>xlRangeValueXMLSpreadsheet</b>    Returns the values, formatting, formulas, and names of the specified <b>Range</b> object in the XML Spreadsheet format.</span></span></param>
        <summary><span data-ttu-id="65c6c-1366">Retorna ou define o valor do intervalo especificado.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1366">Returns or sets the value of the specified range.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="65c6c-1367">Quando você estiver definindo um intervalo de células com o conteúdo de um arquivo de planilha XML, somente os valores da primeira planilha da pasta de trabalho serão usados.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1367">When setting a range of cells with the contents of an XML spreadsheet file, only values of the first sheet in the workbook are used.</span></span> <span data-ttu-id="65c6c-1368">Você não pode definir ou obter um intervalo não contíguo de células no formato de planilha XML.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1368">You cannot set or get a noncontiguous range of cells in the XML spreadsheet format.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Value2">
      <MemberSignature Language="C#" Value="public object Value2 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value2" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Value2" />
      <MemberSignature Language="VB.NET" Value="Public Property Value2 As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value2 { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1388)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1388)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1388)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65c6c-1369">Retorna ou define o valor da célula.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1369">Returns or sets the cell value.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="65c6c-p395">A única diferença entre essa propriedade e a propriedade <b>Value</b> é que a propriedade <b>Value2</b> não usa os tipos de dados <b>Currency</b> e <b>Date</b>. É possível retornar valores formatados com esses tipos de dados como números de ponto flutuante usando o tipo de dados <b>Double</b>.</span><span class="sxs-lookup"><span data-stu-id="65c6c-p395">The only difference between this property and the <b>Value</b> property is that the <b>Value2</b> property doesn’t use the <b>Currency</b> and <b>Date</b> data types. You can return values formatted with these data types as floating-point numbers by using the <b>Double</b> data type.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="VerticalAlignment">
      <MemberSignature Language="C#" Value="public object VerticalAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object VerticalAlignment" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.VerticalAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property VerticalAlignment As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ VerticalAlignment { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(137)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(137)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(137)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65c6c-1372">Retorna ou define o alinhamento vertical do objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1372">Returns or sets the vertical alignment of the specified object.</span></span></summary>
        <value><span data-ttu-id="65c6c-1373">.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1373">.</span></span></value>
        <remarks><para><span data-ttu-id="65c6c-1374">O especificador de alinhamento vertical retornado pode <b></b> ser um dos seguintes valores de objeto de leitura/gravação:</span><span class="sxs-lookup"><span data-stu-id="65c6c-1374">The returned vertical alignment specifier can be one of the following read/write <b>Object</b> values:</span></span></para>
          <list type="bullet">
            <item>
              <description><span data-ttu-id="65c6c-1375">
                <b>xlBottom</b>
              </span><span class="sxs-lookup"><span data-stu-id="65c6c-1375">
                <b>xlBottom</b>
              </span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="65c6c-1376">
                <b>xlCenter</b>
              </span><span class="sxs-lookup"><span data-stu-id="65c6c-1376">
                <b>xlCenter</b>
              </span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="65c6c-1377">
                <b>xlDistributed</b>
              </span><span class="sxs-lookup"><span data-stu-id="65c6c-1377">
                <b>xlDistributed</b>
              </span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="65c6c-1378">
                <b>xlJustify</b>
              </span><span class="sxs-lookup"><span data-stu-id="65c6c-1378">
                <b>xlJustify</b>
              </span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="65c6c-1379">
                <b>xlTop</b>
              </span><span class="sxs-lookup"><span data-stu-id="65c6c-1379">
                <b>xlTop</b>
              </span></span></description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public object Width { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Width" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Width" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Width As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Width { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(122)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(122)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65c6c-1380">A largura, em pontos, do intervalo.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1380">The width, in points, of the range.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Worksheet">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Worksheet Worksheet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Worksheet Worksheet" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Worksheet" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Worksheet As Worksheet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Worksheet ^ Worksheet { Microsoft::Office::Interop::Excel::Worksheet ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(348)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(348)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Worksheet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65c6c-1381">Retorna um <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> objeto que representa a planilha que contém o intervalo especificado.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1381">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> object that represents the worksheet containing the specified range.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WrapText">
      <MemberSignature Language="C#" Value="public object WrapText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object WrapText" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.WrapText" />
      <MemberSignature Language="VB.NET" Value="Public Property WrapText As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ WrapText { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(276)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(276)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(276)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65c6c-1382">Determina se o Microsoft Excel quebra o texto no objeto.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1382">Determines if Microsoft Excel wraps the text in the object.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="65c6c-1383">Essa propriedade <b>retornará True</b> se o Microsoft Excel quebrar o texto no objeto e <b>Null</b> se o intervalo especificado contiver algumas células que quebram texto e outras células que não o contêm.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1383">This property returns <b>True</b> if Microsoft Excel wraps the text in the object and <b>Null</b> if the specified range contains some cells that wrap text and other cells that don’t.</span></span></para>
          <para><span data-ttu-id="65c6c-1384">O Microsoft Excel irá alterar a altura de linha do intervalo, se necessário, para acomodar o texto no intervalo.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1384">Microsoft Excel will change the row height of the range, if necessary, to accommodate the text in the range.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="XPath">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XPath XPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.XPath XPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.XPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XPath As XPath" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XPath ^ XPath { Microsoft::Office::Interop::Excel::XPath ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2258)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2258)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XPath</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65c6c-1385">Retorna um <see cref="T:Microsoft.Office.Interop.Excel.XPath" /> objeto que representa o Xpath do elemento mapeado para o objeto <see cref="T:Microsoft.Office.Interop.Excel.Range" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1385">Returns an <see cref="T:Microsoft.Office.Interop.Excel.XPath" /> object that represents the Xpath of the element mapped to the specified <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="65c6c-1386">Recursos XML, exceto para salvar arquivos no formato de Planilha XML, estão disponíveis somente no Microsoft Office Professional Edition 2003 e no Microsoft Office Excel 2003.</span><span class="sxs-lookup"><span data-stu-id="65c6c-1386">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
  </Members>
</Type>