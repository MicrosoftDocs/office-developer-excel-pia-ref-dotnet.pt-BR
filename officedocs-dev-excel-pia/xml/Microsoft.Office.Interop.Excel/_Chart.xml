<Type Name="_Chart" FullName="Microsoft.Office.Interop.Excel._Chart">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="57339bb20d25fcbe71c1c566971bde680079bc66" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="09/03/2018" />
    <Meta Name="ms.locfileid" Value="20580322" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface _Chart" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract _Chart" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel._Chart" />
  <TypeSignature Language="VB.NET" Value="Public Interface _Chart" />
  <TypeSignature Language="C++ CLI" Value="public interface class _Chart" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000208D6-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4288)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="9658f-101">Essa é uma interface principal em uma co-classe COM exigidos pelo código gerenciado para a interoperabilidade com o objeto COM correspondente.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9658f-101">This is a primary interface in a COM coclass that is required by managed code for interoperability with the corresponding COM object.</span>
      </span>
      <span data-ttu-id="9658f-102">Use esta interface principal somente quando o método que você deseja usar compartilha o mesmo nome de um evento do objeto COM; Nesse caso, é convertida nessa interface para chamar o método e convertido para a interface de eventos mais recente para se conectar ao evento.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9658f-102">Use this primary interface only when the method you want to use shares the same name as an event of the COM object; in this case, cast to this interface to call the method, and cast to the latest events interface to connect to the event.</span>
      </span>
      <span data-ttu-id="9658f-103">Caso contrário, use a interface do .NET que é derivada do co-classe COM para acessar os métodos, propriedades e eventos do objeto COM.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9658f-103">Otherwise, use the .NET interface that is derived from the COM coclass to access methods, properties, and events of the COM object.</span>
      </span>
      <span data-ttu-id="9658f-104">Para obter mais informações sobre o objeto COM, consulte <see cref="T:Microsoft.Office.Interop.Excel.Chart" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9658f-104">For more information about the COM object, see <see cref="T:Microsoft.Office.Interop.Excel.Chart" />.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="_ApplyDataLabels">
      <MemberSignature Language="C#" Value="public void _ApplyDataLabels (Microsoft.Office.Interop.Excel.XlDataLabelsType Type = Microsoft.Office.Interop.Excel.XlDataLabelsType.xlDataLabelsShowValue, object LegendKey, object AutoText, object HasLeaderLines);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _ApplyDataLabels([in]valuetype Microsoft.Office.Interop.Excel.XlDataLabelsType Type, [in]object LegendKey, [in]object AutoText, [in]object HasLeaderLines) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart._ApplyDataLabels(Microsoft.Office.Interop.Excel.XlDataLabelsType,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _ApplyDataLabels (Optional Type As XlDataLabelsType = Microsoft.Office.Interop.Excel.XlDataLabelsType.xlDataLabelsShowValue, Optional LegendKey As Object, Optional AutoText As Object, Optional HasLeaderLines As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(151)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(4)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlDataLabelsType" />
        <Parameter Name="LegendKey" Type="System.Object" />
        <Parameter Name="AutoText" Type="System.Object" />
        <Parameter Name="HasLeaderLines" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type">To be added.</param>
        <param name="LegendKey">To be added.</param>
        <param name="AutoText">To be added.</param>
        <param name="HasLeaderLines">To be added.</param>
        <summary>
          <span data-ttu-id="9658f-105">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-105">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_CodeName">
      <MemberSignature Language="C#" Value="public string _CodeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string _CodeName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart._CodeName" />
      <MemberSignature Language="VB.NET" Value="Public Property _CodeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ _CodeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147418112)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-2147418112)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(-2147418112)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9658f-106">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-106">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Dummy23">
      <MemberSignature Language="C#" Value="public void _Dummy23 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _Dummy23() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart._Dummy23" />
      <MemberSignature Language="VB.NET" Value="Public Sub _Dummy23 ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void _Dummy23();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(65559)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1089)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9658f-107">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-107">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Evaluate">
      <MemberSignature Language="C#" Value="public object _Evaluate (object Name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object _Evaluate([in]object Name) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart._Evaluate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _Evaluate (Name As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ _Evaluate(System::Object ^ Name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-5)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name">To be added.</param>
        <summary>
          <span data-ttu-id="9658f-108">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-108">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_PrintOut">
      <MemberSignature Language="C#" Value="public void _PrintOut (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _PrintOut([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart._PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _PrintOut (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(905)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(7)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">To be added.</param>
        <param name="To">To be added.</param>
        <param name="Copies">To be added.</param>
        <param name="Preview">To be added.</param>
        <param name="ActivePrinter">To be added.</param>
        <param name="PrintToFile">To be added.</param>
        <param name="Collate">To be added.</param>
        <summary>
          <span data-ttu-id="9658f-109">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-109">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Protect">
      <MemberSignature Language="C#" Value="public void _Protect (object Password, object DrawingObjects, object Contents, object Scenarios, object UserInterfaceOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _Protect([in]object Password, [in]object DrawingObjects, [in]object Contents, [in]object Scenarios, [in]object UserInterfaceOnly) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart._Protect(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _Protect (Optional Password As Object, Optional DrawingObjects As Object, Optional Contents As Object, Optional Scenarios As Object, Optional UserInterfaceOnly As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(282)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(5)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="DrawingObjects" Type="System.Object" />
        <Parameter Name="Contents" Type="System.Object" />
        <Parameter Name="Scenarios" Type="System.Object" />
        <Parameter Name="UserInterfaceOnly" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Password">To be added.</param>
        <param name="DrawingObjects">To be added.</param>
        <param name="Contents">To be added.</param>
        <param name="Scenarios">To be added.</param>
        <param name="UserInterfaceOnly">To be added.</param>
        <summary>
          <span data-ttu-id="9658f-110">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-110">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_SaveAs">
      <MemberSignature Language="C#" Value="public void _SaveAs (string Filename, object FileFormat, object Password, object WriteResPassword, object ReadOnlyRecommended, object CreateBackup, object AddToMru, object TextCodepage, object TextVisualLayout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _SaveAs([in]string Filename, [in]object FileFormat, [in]object Password, [in]object WriteResPassword, [in]object ReadOnlyRecommended, [in]object CreateBackup, [in]object AddToMru, [in]object TextCodepage, [in]object TextVisualLayout) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart._SaveAs(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _SaveAs (Filename As String, Optional FileFormat As Object, Optional Password As Object, Optional WriteResPassword As Object, Optional ReadOnlyRecommended As Object, Optional CreateBackup As Object, Optional AddToMru As Object, Optional TextCodepage As Object, Optional TextVisualLayout As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(284)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(9)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="FileFormat" Type="System.Object" />
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="WriteResPassword" Type="System.Object" />
        <Parameter Name="ReadOnlyRecommended" Type="System.Object" />
        <Parameter Name="CreateBackup" Type="System.Object" />
        <Parameter Name="AddToMru" Type="System.Object" />
        <Parameter Name="TextCodepage" Type="System.Object" />
        <Parameter Name="TextVisualLayout" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">To be added.</param>
        <param name="FileFormat">To be added.</param>
        <param name="Password">To be added.</param>
        <param name="WriteResPassword">To be added.</param>
        <param name="ReadOnlyRecommended">To be added.</param>
        <param name="CreateBackup">To be added.</param>
        <param name="AddToMru">To be added.</param>
        <param name="TextCodepage">To be added.</param>
        <param name="TextVisualLayout">To be added.</param>
        <summary>
          <span data-ttu-id="9658f-111">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-111">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="public void Activate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Activate() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.Activate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Activate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Activate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(304)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9658f-112">Torna ativo o gráfico atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-112">Makes the current chart the active chart.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9658f-113">Quando usado sem um qualificador de objeto, essa propriedade retorna uma <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object que representa o aplicativo Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-113">When used without an object qualifier, this property returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span>
          </span>
          <span data-ttu-id="9658f-114">Quando usada com um qualificador de objeto, essa propriedade retornará um objeto <b>Application</b> que representa o criador do objeto especificado (você pode usar essa propriedade com um objeto Automation do OLE para retornar o aplicativo desse objeto).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-114">When used with an object qualifier, this property returns an <b>Application</b> object that represents the creator of the specified object (you can use this property with an OLE Automation object to return the application of that object).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyChartTemplate">
      <MemberSignature Language="C#" Value="public void ApplyChartTemplate (string Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyChartTemplate([in]string Filename) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.ApplyChartTemplate(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyChartTemplate (Filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ApplyChartTemplate(System::String ^ Filename);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2507)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="9658f-115">O nome de arquivo de um modelo de gráfico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-115">The file name for a chart template.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9658f-116">Aplica um tipo de gráfico personalizado ou padrão a um gráfico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-116">Applies a standard or custom chart type to a chart.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="9658f-117">
            <para>Esse método não oferece suporte a constantes assumir para nativo ou combinação de gráficos.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-117">
              <para>This method  does not support taking constants for native or combination charts.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyCustomType">
      <MemberSignature Language="C#" Value="public void ApplyCustomType (Microsoft.Office.Interop.Excel.XlChartType ChartType, object TypeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyCustomType([in]valuetype Microsoft.Office.Interop.Excel.XlChartType ChartType, [in]object TypeName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.ApplyCustomType(Microsoft.Office.Interop.Excel.XlChartType,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyCustomType (ChartType As XlChartType, Optional TypeName As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1401)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ChartType" Type="Microsoft.Office.Interop.Excel.XlChartType" />
        <Parameter Name="TypeName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ChartType">
          <span data-ttu-id="9658f-118">Necessário <see cref="T:Microsoft.Office.Interop.Excel.XlChartType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-118">Required <see cref="T:Microsoft.Office.Interop.Excel.XlChartType" />.</span>
          </span>
          <span data-ttu-id="9658f-119">Um tipo de gráfico padrão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-119">A standard chart type.</span>
          </span>
        </param>
        <param name="TypeName">
          <span data-ttu-id="9658f-120">
            <b>Objeto</b> de opcional (usado apenas com um <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> objeto).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-120">Optional <b>object</b> (used only with a <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> object).</span>
          </span>
          <span data-ttu-id="9658f-121">Digite o nome do gráfico personalizado, se <paramref name="ChartType" /> Especifica uma galeria de gráfico personalizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-121">The name of the custom chart type if <paramref name="ChartType" /> specifies a custom chart gallery.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9658f-122">Aplica um tipo de gráfico personalizado ou padrão a um gráfico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-122">Applies a standard or custom chart type to a chart.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyDataLabels">
      <MemberSignature Language="C#" Value="public void ApplyDataLabels (Microsoft.Office.Interop.Excel.XlDataLabelsType Type = Microsoft.Office.Interop.Excel.XlDataLabelsType.xlDataLabelsShowValue, object LegendKey, object AutoText, object HasLeaderLines, object ShowSeriesName, object ShowCategoryName, object ShowValue, object ShowPercentage, object ShowBubbleSize, object Separator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyDataLabels([in]valuetype Microsoft.Office.Interop.Excel.XlDataLabelsType Type, [in]object LegendKey, [in]object AutoText, [in]object HasLeaderLines, [in]object ShowSeriesName, [in]object ShowCategoryName, [in]object ShowValue, [in]object ShowPercentage, [in]object ShowBubbleSize, [in]object Separator) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.ApplyDataLabels(Microsoft.Office.Interop.Excel.XlDataLabelsType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyDataLabels (Optional Type As XlDataLabelsType = Microsoft.Office.Interop.Excel.XlDataLabelsType.xlDataLabelsShowValue, Optional LegendKey As Object, Optional AutoText As Object, Optional HasLeaderLines As Object, Optional ShowSeriesName As Object, Optional ShowCategoryName As Object, Optional ShowValue As Object, Optional ShowPercentage As Object, Optional ShowBubbleSize As Object, Optional Separator As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1922)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(10)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlDataLabelsType" />
        <Parameter Name="LegendKey" Type="System.Object" />
        <Parameter Name="AutoText" Type="System.Object" />
        <Parameter Name="HasLeaderLines" Type="System.Object" />
        <Parameter Name="ShowSeriesName" Type="System.Object" />
        <Parameter Name="ShowCategoryName" Type="System.Object" />
        <Parameter Name="ShowValue" Type="System.Object" />
        <Parameter Name="ShowPercentage" Type="System.Object" />
        <Parameter Name="ShowBubbleSize" Type="System.Object" />
        <Parameter Name="Separator" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type">
          <span data-ttu-id="9658f-123">Opcional <see cref="T:Microsoft.Office.Interop.Excel.XlDataLabelsType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-123">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlDataLabelsType" />.</span>
          </span>
          <span data-ttu-id="9658f-124">O tipo de rótulo de dados a ser aplicado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-124">The type of data label to apply.</span>
          </span>
        </param>
        <param name="LegendKey">
          <span data-ttu-id="9658f-125">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-125">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9658f-126">
            <b>True</b> para mostrar o código da legenda ao lado do ponto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-126">
              <b>True</b> to show the legend key next to the point.</span>
          </span>
          <span data-ttu-id="9658f-127">O valor padrão é <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-127">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="AutoText">
          <span data-ttu-id="9658f-128">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-128">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9658f-129">
            <b>True</b> se o objeto gerar automaticamente o texto adequado com base no conteúdo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-129">
              <b>True</b> if the object automatically generates appropriate text based on content.</span>
          </span>
        </param>
        <param name="HasLeaderLines">
          <span data-ttu-id="9658f-130">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-130">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9658f-131">Para o <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> e <see cref="T:Microsoft.Office.Interop.Excel.Series" /> objetos, <b>True</b> se a série tiver linhas tracejadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-131">For the <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> and <see cref="T:Microsoft.Office.Interop.Excel.Series" /> objects, <b>True</b> if the series has leader lines.</span>
          </span>
        </param>
        <param name="ShowSeriesName">
          <span data-ttu-id="9658f-132">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-132">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9658f-133">O nome da série do rótulo de dados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-133">The series name for the data label.</span>
          </span>
        </param>
        <param name="ShowCategoryName">
          <span data-ttu-id="9658f-134">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-134">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9658f-135">O nome da categoria do rótulo de dados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-135">The category name for the data label.</span>
          </span>
        </param>
        <param name="ShowValue">
          <span data-ttu-id="9658f-136">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-136">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9658f-137">O valor do rótulo de dados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-137">The value for the data label.</span>
          </span>
        </param>
        <param name="ShowPercentage">
          <span data-ttu-id="9658f-138">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-138">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9658f-139">A porcentagem do rótulo de dados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-139">The percentage for the data label.</span>
          </span>
        </param>
        <param name="ShowBubbleSize">
          <span data-ttu-id="9658f-140">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-140">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9658f-141">O tamanho da bolha do rótulo de dados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-141">The bubble size for the data label.</span>
          </span>
        </param>
        <param name="Separator">
          <span data-ttu-id="9658f-142">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-142">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9658f-143">O separador para o rótulo de dados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-143">The separator for the data label.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9658f-144">Aplica rótulos de dados a um ponto, a uma série ou a todas as séries de um gráfico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-144">Applies data labels to a point, a series, or all the series in a chart.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyLayout">
      <MemberSignature Language="C#" Value="public void ApplyLayout (int Layout, object ChartType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyLayout([in]int32 Layout, [in]object ChartType) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.ApplyLayout(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyLayout (Layout As Integer, Optional ChartType As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2500)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Layout" Type="System.Int32" />
        <Parameter Name="ChartType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Layout">
          <span data-ttu-id="9658f-p115">Especifica o tipo de layout.  O tipo de layout é indicado por um número de 1 a 10.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-p115">Specifies the type of layout.  The type of layout is denoted by a number from 1 to 10.</span>
          </span>
        </param>
        <param name="ChartType">
          <span data-ttu-id="9658f-147">O tipo de gráfico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-147">The type of chart.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9658f-148">Aplica os layouts mostrados na faixa de opções.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-148">Applies the layouts shown in the ribbon.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="9658f-149">
            <para>Quando você usa um layout em tipo de gráfico atual, um número de 1 a 10 é aplicado ao tipo de gráfico.  Você também pode aplicar o layout de um tipo de gráfico em outro tipo de gráfico.  Por exemplo, você pode aplicar os layouts que estão disponíveis a partir de um gráfico de linhas em um gráfico de colunas.  O layout apenas adiciona os elementos do gráfico que estão disponíveis para esse tipo de gráfico específico.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-149">
              <para>When you use a layout on the current chart type, a number from 1 to 10 is applied to the chart type.  You can also apply the layout of one chart type on another chart type.  For example, you can  apply the layouts that are available from a line chart to a column chart.  The layout only adds chart elements that are available for that particular chart type.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Arcs">
      <MemberSignature Language="C#" Value="public object Arcs (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Arcs([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.Arcs(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Arcs (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(760)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="9658f-150">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-150">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Area3DGroup">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ChartGroup Area3DGroup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ChartGroup Area3DGroup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Area3DGroup" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Area3DGroup As ChartGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ChartGroup ^ Area3DGroup { Microsoft::Office::Interop::Excel::ChartGroup ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(17)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(17)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9658f-151">Retorna um <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object que representa o grupo de gráficos de área em um gráfico 3D.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-151">Returns a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object that represents the area chart group on a 3-D chart.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreaGroups">
      <MemberSignature Language="C#" Value="public object AreaGroups (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AreaGroups([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.AreaGroups(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AreaGroups (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(9)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="9658f-152">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-152">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9658f-153">O número do grupo de gráficos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-153">The chart group number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9658f-154">Em um gráfico 2D, retorna um objeto representando um um grupo de gráficos de área única (um <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> objeto) ou uma coleção dos grupos de gráficos de área (um <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> conjunto).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-154">On a 2-D chart, returns an object that represents either a single area chart group (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object) or a collection of the area chart groups (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> collection).</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoFormat">
      <MemberSignature Language="C#" Value="public void AutoFormat (int Gallery, object Format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AutoFormat([in]int32 Gallery, [in]object Format) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.AutoFormat(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AutoFormat (Gallery As Integer, Optional Format As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(114)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Gallery" Type="System.Int32" />
        <Parameter Name="Format" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Gallery">To be added.</param>
        <param name="Format">To be added.</param>
        <summary>
          <span data-ttu-id="9658f-155">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-155">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoScaling">
      <MemberSignature Language="C#" Value="public bool AutoScaling { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoScaling" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.AutoScaling" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoScaling As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoScaling { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(107)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(107)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(107)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9658f-156">
            <b>True</b> se o Microsoft Excel dimensionará a um gráfico 3D para que ele seja um tamanho mais próximo do gráfico 2D equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-156">
              <b>True</b> if Microsoft Excel scales a 3-D chart so that it's closer in size to the equivalent 2-D chart.</span>
          </span>
          <span data-ttu-id="9658f-157">O <see cref="P:Microsoft.Office.Interop.Excel._Chart.RightAngleAxes" /> propriedade deve ser <b>verdadeiras</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-157">The <see cref="P:Microsoft.Office.Interop.Excel._Chart.RightAngleAxes" /> property must be <b>True</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Axes">
      <MemberSignature Language="C#" Value="public object Axes (object Type, Microsoft.Office.Interop.Excel.XlAxisGroup AxisGroup = Microsoft.Office.Interop.Excel.XlAxisGroup.xlPrimary);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Axes([in]object Type, [in]valuetype Microsoft.Office.Interop.Excel.XlAxisGroup AxisGroup) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.Axes(System.Object,Microsoft.Office.Interop.Excel.XlAxisGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Function Axes (Optional Type As Object, Optional AxisGroup As XlAxisGroup = Microsoft.Office.Interop.Excel.XlAxisGroup.xlPrimary) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(23)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="System.Object" />
        <Parameter Name="AxisGroup" Type="Microsoft.Office.Interop.Excel.XlAxisGroup" />
      </Parameters>
      <Docs>
        <param name="Type">
          <span data-ttu-id="9658f-158">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-158">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9658f-159">Especifica o eixo a ser retornado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-159">Specifies the axis to return.</span>
          </span>
          <span data-ttu-id="9658f-160">Pode ser uma das seguintes opções <see cref="T:Microsoft.Office.Interop.Excel.XlAxisType" /> constantes: <b>xlValue</b>, <b>xlCategory</b>ou <b>xlSeriesAxis</b> (<b>xlSeriesAxis</b> é válida somente para gráficos 3D).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-160">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlAxisType" /> constants: <b>xlValue</b>, <b>xlCategory</b>, or <b>xlSeriesAxis</b> (<b>xlSeriesAxis</b> is valid only for 3-D charts).</span>
          </span>
        </param>
        <param name="AxisGroup">
          <span data-ttu-id="9658f-161">Opcional <see cref="T:Microsoft.Office.Interop.Excel.XlAxisGroup" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-161">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlAxisGroup" />.</span>
          </span>
          <span data-ttu-id="9658f-162">Especifica o grupo do eixo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-162">Specifies the axis group.</span>
          </span>
          <span data-ttu-id="9658f-163">Se esse argumento for omitido, o grupo primário é usado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-163">If this argument is omitted, the primary group is used.</span>
          </span>
          <span data-ttu-id="9658f-164">Gráficos 3D possuem somente um grupo de eixos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-164">3-D charts have only one axis group.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9658f-165">Retorna um objeto que representa um único eixo ou uma coleção de eixos em um gráfico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-165">Returns an object that represents either a single axis or a collection of the axes on the chart.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackWall">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Walls BackWall { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Walls BackWall" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.BackWall" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BackWall As Walls" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Walls ^ BackWall { Microsoft::Office::Interop::Excel::Walls ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2506)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2506)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Walls</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9658f-166">Retorna um <see cref="T:Microsoft.Office.Interop.Excel.Walls" /> objeto que permite ao usuário formatar individualmente a parede traseira de um gráfico 3D.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-166">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Walls" /> object that allows the user to individually format the back wall of a 3-D chart.</span>
          </span>
          <span data-ttu-id="9658f-167">Somente leitura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-167">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9658f-168">
            <b>Paredes</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-168">
              <b>Walls</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Bar3DGroup">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ChartGroup Bar3DGroup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ChartGroup Bar3DGroup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Bar3DGroup" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Bar3DGroup As ChartGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ChartGroup ^ Bar3DGroup { Microsoft::Office::Interop::Excel::ChartGroup ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(18)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(18)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9658f-169">Retorna um <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object que representa o grupo de gráficos de barras em um gráfico 3D.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-169">Returns a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object that represents the bar chart group on a 3-D chart.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BarGroups">
      <MemberSignature Language="C#" Value="public object BarGroups (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object BarGroups([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.BarGroups(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BarGroups (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(10)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="9658f-170">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-170">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9658f-171">Especifica o grupo de gráficos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-171">Specifies the chart group.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9658f-172">Em um gráfico 2D, retorna um objeto representando um um grupo de gráficos de barras único (um <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> objeto) ou uma coleção dos grupos de gráficos de barras (um <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> conjunto).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-172">On a 2-D chart, returns an object that represents either a single bar chart group (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object) or a collection of the bar chart groups (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> collection).</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BarShape">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlBarShape BarShape { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlBarShape BarShape" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.BarShape" />
      <MemberSignature Language="VB.NET" Value="Public Property BarShape As XlBarShape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlBarShape BarShape { Microsoft::Office::Interop::Excel::XlBarShape get(); void set(Microsoft::Office::Interop::Excel::XlBarShape value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1403)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1403)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1403)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlBarShape</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9658f-173">Retorna ou define a forma usada com o gráfico de colunas ou barras 3D.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-173">Returns or sets the shape used with the 3-D bar or column chart.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Buttons">
      <MemberSignature Language="C#" Value="public object Buttons (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Buttons([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.Buttons(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Buttons (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(557)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="9658f-174">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-174">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CategoryLabelLevel">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCategoryLabelLevel CategoryLabelLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCategoryLabelLevel CategoryLabelLevel" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.CategoryLabelLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property CategoryLabelLevel As XlCategoryLabelLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCategoryLabelLevel CategoryLabelLevel { Microsoft::Office::Interop::Excel::XlCategoryLabelLevel get(); void set(Microsoft::Office::Interop::Excel::XlCategoryLabelLevel value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3048)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3048)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(3048)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCategoryLabelLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9658f-175">Retorna um <see cref="T:Microsoft.Office.Interop.Excel.XlCategoryLabelLevel" /> constante referindo-se ao nível de onde os rótulos de categoria estão sendo originados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-175">Returns an <see cref="T:Microsoft.Office.Interop.Excel.XlCategoryLabelLevel" /> constant referring to the level of where the category labels are being sourced from.</span>
          </span>
          <span data-ttu-id="9658f-176">
            <b>Inteiro</b> (<b>int</b> em c#) Leitura/gravação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-176">
              <b>Integer</b> (<b>int</b> in C#) Read/Write.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="9658f-177">
            <para>Se não houver uma hierarquia, 0 se refere ao máximo o nível pai, 1 refere-se ao seu filhos e assim por diante. Portanto, 0 é igual a primeiro nível, o segundo nível igual a-1, 2 é igual ao terceiro nível, e assim por diante.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-177">
              <para>If there is a hierarchy, 0 refers to the most parent level, 1 refers to its children, and so on. So, 0 equals the first level, 1 equals the second level, 2 equals the third level, and so on.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartArea">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ChartArea ChartArea { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ChartArea ChartArea" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.ChartArea" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChartArea As ChartArea" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ChartArea ^ ChartArea { Microsoft::Office::Interop::Excel::ChartArea ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(80)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(80)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartArea</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9658f-178">Retorna um <see cref="T:Microsoft.Office.Interop.Excel.ChartArea" /> object que representa toda a área do gráfico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-178">Returns a <see cref="T:Microsoft.Office.Interop.Excel.ChartArea" /> object that represents the complete chart area for the chart.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartColor">
      <MemberSignature Language="C#" Value="public object ChartColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ChartColor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.ChartColor" />
      <MemberSignature Language="VB.NET" Value="Public Property ChartColor As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ChartColor { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3052)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3052)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(3052)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9658f-179">Retorna ou define um <b>inteiro</b> (<b>int</b> em c#) que representa o esquema de cores do gráfico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-179">Returns or sets an <b>Integer</b> (<b>int</b> in C#) that represents the color scheme for the chart.</span>
          </span>
          <span data-ttu-id="9658f-180">Leitura e gravação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-180">Read-write.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartGroups">
      <MemberSignature Language="C#" Value="public object ChartGroups (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ChartGroups([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.ChartGroups(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ChartGroups (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(8)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="9658f-181">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-181">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9658f-182">O número do grupo de gráficos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-182">The chart group number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9658f-183">Retorna um objeto representando um único grupo de gráficos (um <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> objeto) ou uma coleção de todos os grupos de gráficos do gráfico (um <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> objeto).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-183">Returns an object that represents either a single chart group (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object) or a collection of all the chart groups in the chart (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> object).</span>
          </span>
          <span data-ttu-id="9658f-184">A coleção retornada inclui a cada tipo de grupo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-184">The returned collection includes every type of group.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartObjects">
      <MemberSignature Language="C#" Value="public object ChartObjects (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ChartObjects([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.ChartObjects(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ChartObjects (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1060)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="9658f-185">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-185">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9658f-186">O nome ou número do gráfico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-186">The name or number of the chart.</span>
          </span>
          <span data-ttu-id="9658f-187">Este argumento pode ser uma matriz para especificar mais de um gráfico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-187">This argument can be an array to specify more than one chart.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9658f-188">Retorna um objeto representando um único gráfico incorporado (um <see cref="T:Microsoft.Office.Interop.Excel.ChartObject" /> objeto) ou uma coleção de todos os gráficos inseridos (um <see cref="T:Microsoft.Office.Interop.Excel.ChartObjects" /> objeto) na planilha.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-188">Returns an object that represents either a single embedded chart (a <see cref="T:Microsoft.Office.Interop.Excel.ChartObject" /> object) or a collection of all the embedded charts (a <see cref="T:Microsoft.Office.Interop.Excel.ChartObjects" /> object) on the sheet.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="9658f-189">
            <para>Esse método não é equivalente ao <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Charts" /> propriedade. Esse método retorna gráficos incorporados; a propriedade <b>Charts</b> retorna folhas de gráfico. Use o <see cref="P:Microsoft.Office.Interop.Excel.ChartObject.Chart" /> propriedade para retornar o objeto de <b>gráfico</b> para um gráfico incorporado.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-189">
              <para>This method isn't equivalent to the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Charts" /> property. This method returns embedded charts; the <b>Charts</b> property returns chart sheets. Use the <see cref="P:Microsoft.Office.Interop.Excel.ChartObject.Chart" /> property to return the <b>Chart</b> object for an embedded chart.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartStyle">
      <MemberSignature Language="C#" Value="public object ChartStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ChartStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.ChartStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property ChartStyle As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ChartStyle { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2509)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2509)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2509)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9658f-190">Retorna ou define o estilo de gráfico do gráfico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-190">Returns or sets the chart style for the chart.</span>
          </span>
          <span data-ttu-id="9658f-191">Leitura/gravação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-191">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9658f-192">
            <b>Object</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-192">
              <b>Object</b>
            </span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="9658f-193">
            <para>Você pode usar um número de 1 a 48 para definir o estilo do gráfico.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-193">
              <para>You can use a number from 1 to 48 to set the chart style.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartTitle">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ChartTitle ChartTitle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ChartTitle ChartTitle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.ChartTitle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChartTitle As ChartTitle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ChartTitle ^ ChartTitle { Microsoft::Office::Interop::Excel::ChartTitle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(81)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(81)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartTitle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9658f-194">Retorna um <see cref="T:Microsoft.Office.Interop.Excel.ChartTitle" /> object que representa o título do gráfico especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-194">Returns a <see cref="T:Microsoft.Office.Interop.Excel.ChartTitle" /> object that represents the title of the specified chart.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartType">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlChartType ChartType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlChartType ChartType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.ChartType" />
      <MemberSignature Language="VB.NET" Value="Public Property ChartType As XlChartType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlChartType ChartType { Microsoft::Office::Interop::Excel::XlChartType get(); void set(Microsoft::Office::Interop::Excel::XlChartType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1400)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1400)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1400)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlChartType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9658f-195">Retorna ou define o tipo de gráfico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-195">Returns or sets the chart type.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="9658f-196">
            <para>Alguns tipos de gráfico não estão disponíveis para relatórios de gráfico dinâmico.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-196">
              <para>Some chart types aren’t available for PivotChart reports.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartWizard">
      <MemberSignature Language="C#" Value="public void ChartWizard (object Source, object Gallery, object Format, object PlotBy, object CategoryLabels, object SeriesLabels, object HasLegend, object Title, object CategoryTitle, object ValueTitle, object ExtraTitle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ChartWizard([in]object Source, [in]object Gallery, [in]object Format, [in]object PlotBy, [in]object CategoryLabels, [in]object SeriesLabels, [in]object HasLegend, [in]object Title, [in]object CategoryTitle, [in]object ValueTitle, [in]object ExtraTitle) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.ChartWizard(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ChartWizard (Optional Source As Object, Optional Gallery As Object, Optional Format As Object, Optional PlotBy As Object, Optional CategoryLabels As Object, Optional SeriesLabels As Object, Optional HasLegend As Object, Optional Title As Object, Optional CategoryTitle As Object, Optional ValueTitle As Object, Optional ExtraTitle As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(196)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(11)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Source" Type="System.Object" />
        <Parameter Name="Gallery" Type="System.Object" />
        <Parameter Name="Format" Type="System.Object" />
        <Parameter Name="PlotBy" Type="System.Object" />
        <Parameter Name="CategoryLabels" Type="System.Object" />
        <Parameter Name="SeriesLabels" Type="System.Object" />
        <Parameter Name="HasLegend" Type="System.Object" />
        <Parameter Name="Title" Type="System.Object" />
        <Parameter Name="CategoryTitle" Type="System.Object" />
        <Parameter Name="ValueTitle" Type="System.Object" />
        <Parameter Name="ExtraTitle" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Source">
          <span data-ttu-id="9658f-197">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-197">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9658f-198">O intervalo que contém os dados de origem para o novo gráfico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-198">The range that contains the source data for the new chart.</span>
          </span>
          <span data-ttu-id="9658f-199">Se esse argumento for omitido, o Microsoft Excel edita a folha de gráfico ativo ou o gráfico selecionado na planilha ativa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-199">If this argument is omitted, Microsoft Excel edits the active chart sheet or the selected chart on the active worksheet.</span>
          </span>
        </param>
        <param name="Gallery">
          <span data-ttu-id="9658f-200">Opcional <see cref="T:Microsoft.Office.Interop.Excel.XlChartType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-200">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlChartType" />.</span>
          </span>
          <span data-ttu-id="9658f-201">O tipo de gráfico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-201">The chart type.</span>
          </span>
        </param>
        <param name="Format">
          <span data-ttu-id="9658f-202">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-202">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9658f-203">O número de opções para as autoformatações incorporadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-203">The option number for the built-in autoformats.</span>
          </span>
          <span data-ttu-id="9658f-204">Pode ser um número de 1 até 10, dependendo do tipo de galeria.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-204">Can be a number from 1 through 10, depending on the gallery type.</span>
          </span>
          <span data-ttu-id="9658f-205">Se esse argumento for omitido, o Microsoft Excel escolherá um valor padrão com base na fonte de dados e o tipo de galeria.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-205">If this argument is omitted, Microsoft Excel chooses a default value based on the gallery type and data source.</span>
          </span>
        </param>
        <param name="PlotBy">
          <span data-ttu-id="9658f-206">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-206">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9658f-207">Especifica se os dados de cada série são em linhas ou colunas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-207">Specifies whether the data for each series is in rows or columns.</span>
          </span>
          <span data-ttu-id="9658f-208">Pode ser uma das seguintes opções <see cref="T:Microsoft.Office.Interop.Excel.XlRowCol" /> constantes: <b>xlRows</b> ou <b>xlColumns</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-208">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlRowCol" /> constants: <b>xlRows</b> or <b>xlColumns</b>.</span>
          </span>
        </param>
        <param name="CategoryLabels">
          <span data-ttu-id="9658f-209">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-209">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9658f-210">Um inteiro que especifica o número de linhas ou colunas dentro do intervalo de origem que contêm os rótulos de categoria.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-210">An integer specifying the number of rows or columns within the source range that contain category labels.</span>
          </span>
          <span data-ttu-id="9658f-211">Valores válidos são de 0 (zero) a menos que o número máximo das categorias correspondentes ou série.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-211">Legal values are from 0 (zero) through one less than the maximum number of the corresponding categories or series.</span>
          </span>
        </param>
        <param name="SeriesLabels">
          <span data-ttu-id="9658f-212">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-212">Optional <b>object</b>.</span>
          </span>
          <span data-ttu-id="9658f-213">Um inteiro que especifica o número de linhas ou colunas dentro do intervalo de origem que contêm os rótulos de série.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-213">An integer specifying the number of rows or columns within the source range that contain series labels.</span>
          </span>
          <span data-ttu-id="9658f-214">Valores válidos são de 0 (zero) a menos que o número máximo das categorias correspondentes ou série.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-214">Legal values are from 0 (zero) through one less than the maximum number of the corresponding categories or series.</span>
          </span>
        </param>
        <param name="HasLegend">
          <span data-ttu-id="9658f-215">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-215">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9658f-216">
            <b>True</b> para incluir uma legenda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-216">
              <b>True</b> to include a legend.</span>
          </span>
        </param>
        <param name="Title">
          <span data-ttu-id="9658f-217">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-217">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9658f-218">O texto do título do gráfico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-218">The chart title text.</span>
          </span>
        </param>
        <param name="CategoryTitle">
          <span data-ttu-id="9658f-219">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-219">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9658f-220">O texto do título do eixo das categorias.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-220">The category axis title text.</span>
          </span>
        </param>
        <param name="ValueTitle">
          <span data-ttu-id="9658f-221">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-221">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9658f-222">O texto do título do eixo dos valores.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-222">The value axis title text.</span>
          </span>
        </param>
        <param name="ExtraTitle">
          <span data-ttu-id="9658f-223">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-223">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9658f-224">O título do eixo das séries para gráficos 3D ou o título do segundo eixo dos valores para gráficos 2D.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-224">The series axis title for 3-D charts or the second value axis title for 2-D charts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9658f-225">Modifica as propriedades do gráfico especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-225">Modifies the properties of the given chart.</span>
          </span>
          <span data-ttu-id="9658f-226">Você pode usar esse método para formatar rapidamente um gráfico sem definir todas as propriedades individuais.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-226">You can use this method to quickly format a chart without setting all the individual properties.</span>
          </span>
          <span data-ttu-id="9658f-227">Esse método não é interativo, e ele altera apenas as propriedades especificadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-227">This method is non-interactive, and it changes only the specified properties.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="9658f-228">
            <para>Se <paramref name="Source" /> for omitido e a seleção não for um gráfico incorporado na planilha ativa ou a planilha ativa não for um gráfico existente, este método falhará e ocorrerá um erro.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-228">
              <para>If <paramref name="Source" /> is omitted and either the selection isn't an embedded chart on the active worksheet or the active sheet isn't an existing chart, this method fails and an error occurs.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckBoxes">
      <MemberSignature Language="C#" Value="public object CheckBoxes (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CheckBoxes([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.CheckBoxes(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckBoxes (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(824)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="9658f-229">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-229">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckSpelling">
      <MemberSignature Language="C#" Value="public void CheckSpelling (object CustomDictionary, object IgnoreUppercase, object AlwaysSuggest, object SpellLang);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CheckSpelling([in]object CustomDictionary, [in]object IgnoreUppercase, [in]object AlwaysSuggest, [in]object SpellLang) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.CheckSpelling(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckSpelling (Optional CustomDictionary As Object, Optional IgnoreUppercase As Object, Optional AlwaysSuggest As Object, Optional SpellLang As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(505)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(4)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="CustomDictionary" Type="System.Object" />
        <Parameter Name="IgnoreUppercase" Type="System.Object" />
        <Parameter Name="AlwaysSuggest" Type="System.Object" />
        <Parameter Name="SpellLang" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="CustomDictionary">
          <span data-ttu-id="9658f-230">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-230">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9658f-231">Uma string que indica o nome de arquivo do dicionário personalizado a ser examinado, se a palavra não for encontrada no dicionário principal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-231">A string that indicates the file name of the custom dictionary to be examined if the word isn't found in the main dictionary.</span>
          </span>
          <span data-ttu-id="9658f-232">Se esse argumento for omitido, o dicionário especificado no momento é usado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-232">If this argument is omitted, the currently specified dictionary is used.</span>
          </span>
        </param>
        <param name="IgnoreUppercase">
          <span data-ttu-id="9658f-233">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-233">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9658f-234">
            <b>True</b> para que o Microsoft Excel ignorar palavras com todas as letras maiusculas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-234">
              <b>True</b> to have Microsoft Excel ignore words that are all uppercase.</span>
          </span>
          <span data-ttu-id="9658f-235">
            <b>False</b> para que o Microsoft Excel Verifique as palavras com todas as letras maiusculas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-235">
              <b>False</b> to have Microsoft Excel check words that are all uppercase.</span>
          </span>
          <span data-ttu-id="9658f-236">Se esse argumento for omitido, a configuração atual será usada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-236">If this argument is omitted, the current setting will be used.</span>
          </span>
        </param>
        <param name="AlwaysSuggest">
          <span data-ttu-id="9658f-237">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-237">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9658f-238">
            <b>True</b> para que o Microsoft Excel exibir uma lista de ortografias alternativas sugeridas quando uma ortografia incorreta for encontrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-238">
              <b>True</b> to have Microsoft Excel display a list of suggested alternate spellings when an incorrect spelling is found.</span>
          </span>
          <span data-ttu-id="9658f-239">
            <b>False</b> para que o Microsoft Excel espere a entrada a ortografia correta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-239">
              <b>False</b> to have Microsoft Excel wait for you to input the correct spelling.</span>
          </span>
          <span data-ttu-id="9658f-240">Se esse argumento for omitido, a configuração atual será usada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-240">If this argument is omitted, the current setting will be used.</span>
          </span>
        </param>
        <param name="SpellLang">
          <span data-ttu-id="9658f-241">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-241">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9658f-242">O idioma do dicionário que está sendo usado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-242">The language of the dictionary being used.</span>
          </span>
          <span data-ttu-id="9658f-243">Pode ser uma do <see cref="T:Microsoft.Office.Core.MsoLanguageID" /> valores usados pelo <see cref="P:Microsoft.Office.Core.LanguageSettings.LanguageID(Microsoft.Office.Core.MsoAppLanguageID)" /> propriedade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-243">Can be one of the <see cref="T:Microsoft.Office.Core.MsoLanguageID" /> values used by the <see cref="P:Microsoft.Office.Core.LanguageSettings.LanguageID(Microsoft.Office.Core.MsoAppLanguageID)" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9658f-244">Verifica a ortografia de um objeto e exibe a caixa de diálogo ortografia</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-244">Checks the spelling of an object and displays the Spelling dialog box</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearToMatchColorStyle">
      <MemberSignature Language="C#" Value="public void ClearToMatchColorStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearToMatchColorStyle() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.ClearToMatchColorStyle" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearToMatchColorStyle ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearToMatchColorStyle();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3053)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9658f-245">Limpa todas as cores que não seguem o estilo de cor aplicado ao gráfico no gráfico especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-245">Clears all colors on the specified chart that do not follow the color style applied to the chart.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="9658f-246">
            <para>Use esse método para redefinir todos os a cor do gráfico formatação como o estilo de cor aplicado ao gráfico.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-246">
              <para>Use this method to reset all the chart color formatting to the color style applied to the chart.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearToMatchStyle">
      <MemberSignature Language="C#" Value="public void ClearToMatchStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearToMatchStyle() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.ClearToMatchStyle" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearToMatchStyle ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearToMatchStyle();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2510)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9658f-247">Limpa a formatação dos elementos gráficos para automático.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-247">Clears the chart elements formatting to automatic.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="9658f-248">Use este método para redefinir os formatação para automático dos elementos gráficos do <para>.    Se você usar esse método em um gráfico, toda a formatação (incluindo substituições) serão redefinidas.</para><para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-248">
              <para>Use this method to reset the chart elements formatting to automatic.    If you use this method on a chart, all formatting (including overrides) will be reset.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CodeName">
      <MemberSignature Language="C#" Value="public string CodeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CodeName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.CodeName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CodeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CodeName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1373)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1373)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9658f-249">Retorna o nome de código para o objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-249">Returns the code name for the object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="9658f-250">O valor que você vê na célula à direita do (Name) na janela Propriedades do <para>é o nome de código do objeto selecionado. Em tempo de design, você pode alterar o nome de código de um objeto alterando este valor. Você não pode alterar essa propriedade programaticamente em tempo de execução.</para> O nome de código para um objeto de 
          <para>pode ser usado no lugar de uma expressão que retorna o objeto. É possível que o nome da planilha seja diferente do nome de código. Quando você cria uma planilha, o nome da planilha e o nome de código são os mesmos, mas alterar o nome da planilha não altera o nome de código e a alteração do nome de código não altera o nome da planilha.</para><para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-250">
              <para>The value that you see in the cell to the right of (Name) in the Properties window is the code name of the selected object. At design time, you can change the code name of an object by changing this value. You cannot programmatically change this property at run time.</para>
              <para>The code name for an object can be used in place of an expression that returns the object. It’s possible for the sheet name to be different from the code name. When you create a sheet, the sheet name and code name are the same, but changing the sheet name doesn’t change the code name, and changing the code name doesn’t change the sheet name.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Column3DGroup">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ChartGroup Column3DGroup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ChartGroup Column3DGroup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Column3DGroup" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Column3DGroup As ChartGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ChartGroup ^ Column3DGroup { Microsoft::Office::Interop::Excel::ChartGroup ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(19)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(19)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9658f-251">Retorna um <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object que representa o grupo de gráficos de coluna em um gráfico 3D.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-251">Returns a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object that represents the column chart group on a 3-D chart.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnGroups">
      <MemberSignature Language="C#" Value="public object ColumnGroups (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ColumnGroups([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.ColumnGroups(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ColumnGroups (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(11)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="9658f-252">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-252">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9658f-253">Especifica o grupo de gráficos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-253">Specifies the chart group.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9658f-254">Em um gráfico 2D, retorna um objeto representando um um grupo de gráficos de coluna simples (um <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> objeto) ou uma coleção dos grupos de gráficos de coluna (um <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> conjunto).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-254">On a 2-D chart, returns an object that represents either a single column chart group (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object) or a collection of the column chart groups (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> collection).</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public void Copy (object Before, object After);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy([in]object Before, [in]object After) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.Copy(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Copy (Optional Before As Object, Optional After As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(551)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Before" Type="System.Object" />
        <Parameter Name="After" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Before">
          <span data-ttu-id="9658f-255">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-255">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9658f-256">A planilha antes da qual a planilha copiada será colocada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-256">The sheet before which the copied sheet will be placed.</span>
          </span>
          <span data-ttu-id="9658f-257">Não é possível especificar <paramref name="Before" /> se você especificar <paramref name="After" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-257">You cannot specify <paramref name="Before" /> if you specify <paramref name="After" />.</span>
          </span>
        </param>
        <param name="After">
          <span data-ttu-id="9658f-258">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-258">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9658f-259">A planilha após o qual a planilha copiada será colocada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-259">The sheet after which the copied sheet will be placed.</span>
          </span>
          <span data-ttu-id="9658f-260">Não é possível especificar <paramref name="After" /> se você especificar <paramref name="Before" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-260">You cannot specify <paramref name="After" /> if you specify <paramref name="Before" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9658f-261">Copia a planilha para outro local na pasta de trabalho.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-261">Copies the sheet to another location in the workbook.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="9658f-262">
            <para>Se você não especificar um <paramref name="Before" /> ou <paramref name="After" />, o Microsoft Excel criará uma nova pasta de trabalho contendo a planilha copiada.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-262">
              <para>If you don't specify either <paramref name="Before" /> or <paramref name="After" />, Microsoft Excel creates a new workbook that contains the copied sheet.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyChartBuild">
      <MemberSignature Language="C#" Value="public void CopyChartBuild ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyChartBuild() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.CopyChartBuild" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyChartBuild ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyChartBuild();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1404)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9658f-263">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-263">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyPicture">
      <MemberSignature Language="C#" Value="public void CopyPicture (Microsoft.Office.Interop.Excel.XlPictureAppearance Appearance = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlScreen, Microsoft.Office.Interop.Excel.XlCopyPictureFormat Format = Microsoft.Office.Interop.Excel.XlCopyPictureFormat.xlPicture, Microsoft.Office.Interop.Excel.XlPictureAppearance Size = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlPrinter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyPicture([in]valuetype Microsoft.Office.Interop.Excel.XlPictureAppearance Appearance, [in]valuetype Microsoft.Office.Interop.Excel.XlCopyPictureFormat Format, [in]valuetype Microsoft.Office.Interop.Excel.XlPictureAppearance Size) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat,Microsoft.Office.Interop.Excel.XlPictureAppearance)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyPicture (Optional Appearance As XlPictureAppearance = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlScreen, Optional Format As XlCopyPictureFormat = Microsoft.Office.Interop.Excel.XlCopyPictureFormat.xlPicture, Optional Size As XlPictureAppearance = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlPrinter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(213)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Appearance" Type="Microsoft.Office.Interop.Excel.XlPictureAppearance" />
        <Parameter Name="Format" Type="Microsoft.Office.Interop.Excel.XlCopyPictureFormat" />
        <Parameter Name="Size" Type="Microsoft.Office.Interop.Excel.XlPictureAppearance" />
      </Parameters>
      <Docs>
        <param name="Appearance">
          <span data-ttu-id="9658f-264">Opcional <see cref="T:Microsoft.Office.Interop.Excel.XlPictureAppearance" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-264">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlPictureAppearance" />.</span>
          </span>
          <span data-ttu-id="9658f-265">Especifica como a imagem deve ser copiada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-265">Specifies how the picture should be copied.</span>
          </span>
        </param>
        <param name="Format">
          <span data-ttu-id="9658f-266">Opcional <see cref="T:Microsoft.Office.Interop.Excel.XlCopyPictureFormat" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-266">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlCopyPictureFormat" />.</span>
          </span>
          <span data-ttu-id="9658f-267">O formato da imagem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-267">The format of the picture.</span>
          </span>
        </param>
        <param name="Size">
          <span data-ttu-id="9658f-268">Opcional <see cref="T:Microsoft.Office.Interop.Excel.XlPictureAppearance" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-268">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlPictureAppearance" />.</span>
          </span>
          <span data-ttu-id="9658f-269">O tamanho da imagem copiada quando o objeto for um gráfico em uma planilha de gráfico (não incorporado em uma planilha).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-269">The size of the copied picture when the object is a chart on a chart sheet (not embedded on a worksheet).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9658f-270">Copia o objeto selecionado para a Área de Transferência como uma imagem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-270">Copies the selected object to the Clipboard as a picture.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Corners">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Corners Corners { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Corners Corners" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Corners" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Corners As Corners" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Corners ^ Corners { Microsoft::Office::Interop::Excel::Corners ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(79)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(79)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Corners</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9658f-271">Retorna um <see cref="T:Microsoft.Office.Interop.Excel.Corners" /> object que representa os cantos de um gráfico 3D.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-271">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Corners" /> object that represents the corners of a 3-D chart.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePublisher">
      <MemberSignature Language="C#" Value="public void CreatePublisher (object Edition, Microsoft.Office.Interop.Excel.XlPictureAppearance Appearance = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlScreen, Microsoft.Office.Interop.Excel.XlPictureAppearance Size = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlScreen, object ContainsPICT, object ContainsBIFF, object ContainsRTF, object ContainsVALU);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreatePublisher([in]object Edition, [in]valuetype Microsoft.Office.Interop.Excel.XlPictureAppearance Appearance, [in]valuetype Microsoft.Office.Interop.Excel.XlPictureAppearance Size, [in]object ContainsPICT, [in]object ContainsBIFF, [in]object ContainsRTF, [in]object ContainsVALU) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.CreatePublisher(System.Object,Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlPictureAppearance,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CreatePublisher (Optional Edition As Object, Optional Appearance As XlPictureAppearance = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlScreen, Optional Size As XlPictureAppearance = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlScreen, Optional ContainsPICT As Object, Optional ContainsBIFF As Object, Optional ContainsRTF As Object, Optional ContainsVALU As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(458)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(7)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Edition" Type="System.Object" />
        <Parameter Name="Appearance" Type="Microsoft.Office.Interop.Excel.XlPictureAppearance" />
        <Parameter Name="Size" Type="Microsoft.Office.Interop.Excel.XlPictureAppearance" />
        <Parameter Name="ContainsPICT" Type="System.Object" />
        <Parameter Name="ContainsBIFF" Type="System.Object" />
        <Parameter Name="ContainsRTF" Type="System.Object" />
        <Parameter Name="ContainsVALU" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Edition">
          <span data-ttu-id="9658f-272">This parameter is for Macintosh only and should not be used.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-272">This parameter is for Macintosh only and should not be used.</span>
          </span>
        </param>
        <param name="Appearance">
          <span data-ttu-id="9658f-273">This parameter is for Macintosh only and should not be used.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-273">This parameter is for Macintosh only and should not be used.</span>
          </span>
        </param>
        <param name="Size">
          <span data-ttu-id="9658f-274">This parameter is for Macintosh only and should not be used.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-274">This parameter is for Macintosh only and should not be used.</span>
          </span>
        </param>
        <param name="ContainsPICT">
          <span data-ttu-id="9658f-275">This parameter is for Macintosh only and should not be used.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-275">This parameter is for Macintosh only and should not be used.</span>
          </span>
        </param>
        <param name="ContainsBIFF">
          <span data-ttu-id="9658f-276">This parameter is for Macintosh only and should not be used.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-276">This parameter is for Macintosh only and should not be used.</span>
          </span>
        </param>
        <param name="ContainsRTF">
          <span data-ttu-id="9658f-277">This parameter is for Macintosh only and should not be used.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-277">This parameter is for Macintosh only and should not be used.</span>
          </span>
        </param>
        <param name="ContainsVALU">
          <span data-ttu-id="9658f-278">This parameter is for Macintosh only and should not be used.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-278">This parameter is for Macintosh only and should not be used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9658f-279">Reservado para uso interno. Este membro é apenas para Macintosh e não deve ser usado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-279">Reserved for internal use.This member is for Macintosh only and should not be used.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9658f-280">Retorna uma constante no <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> enumeração que indica o aplicativo no qual esse objeto foi criado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-280">Returns a constant in the <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> enumeration that indicates the application in which this object was created.</span>
          </span>
          <span data-ttu-id="9658f-281">Se o objeto foi criado no Microsoft Excel, essa propriedade retorna a cadeia de caracteres XCEL, que é equivalente ao número hexadecimal 5843454C.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-281">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />
        </value>
        <remarks>
          <span data-ttu-id="9658f-282">Propriedade <para>o <b>criador</b> foi projetada para ser usado no Microsoft Excel para Macintosh, onde cada aplicativo possui um código de criador de quatro caracteres. Por exemplo, o Microsoft Excel tem o código de criador XCEL.</para><para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-282">
              <para>The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code. For example, Microsoft Excel has the creator code XCEL.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataTable">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.DataTable DataTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.DataTable DataTable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.DataTable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataTable As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::DataTable ^ DataTable { Microsoft::Office::Interop::Excel::DataTable ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1395)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1395)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.DataTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9658f-283">Retorna um <see cref="T:Microsoft.Office.Interop.Excel.DataTable" /> object que representa a tabela de dados do gráfico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-283">Returns a <see cref="T:Microsoft.Office.Interop.Excel.DataTable" /> object that represents the chart data table.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(117)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9658f-284">Exclui o objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-284">Deletes the object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteHiddenContent">
      <MemberSignature Language="C#" Value="public void DeleteHiddenContent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteHiddenContent() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.DeleteHiddenContent" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteHiddenContent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteHiddenContent();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3051)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DepthPercent">
      <MemberSignature Language="C#" Value="public int DepthPercent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DepthPercent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.DepthPercent" />
      <MemberSignature Language="VB.NET" Value="Public Property DepthPercent As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DepthPercent { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(48)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(48)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(48)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9658f-285">Retorna ou define a profundidade de um gráfico 3D como um percentual da largura do gráfico (entre 20 e 2.000%).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-285">Returns or sets the depth of a 3-D chart as a percentage of the chart width (between 20 and 2000 percent).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Deselect">
      <MemberSignature Language="C#" Value="public void Deselect ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Deselect() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.Deselect" />
      <MemberSignature Language="VB.NET" Value="Public Sub Deselect ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Deselect();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1120)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9658f-286">Cancela a seleção do gráfico especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-286">Cancels the selection for the specified chart.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayBlanksAs">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlDisplayBlanksAs DisplayBlanksAs { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlDisplayBlanksAs DisplayBlanksAs" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.DisplayBlanksAs" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayBlanksAs As XlDisplayBlanksAs" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlDisplayBlanksAs DisplayBlanksAs { Microsoft::Office::Interop::Excel::XlDisplayBlanksAs get(); void set(Microsoft::Office::Interop::Excel::XlDisplayBlanksAs value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(93)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(93)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(93)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlDisplayBlanksAs</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9658f-287">Retorna ou define a forma com que as células vazias são plotadas em um gráfico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-287">Returns or sets the way that blank cells are plotted on a chart.</span>
          </span>
          <span data-ttu-id="9658f-288">Pode ser uma das seguintes opções <see cref="T:Microsoft.Office.Interop.Excel.XlDisplayBlanksAs" /> constantes: <b>xlNotPlotted</b>, <b>xlInterpolated</b>ou <b>xlZero</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-288">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlDisplayBlanksAs" /> constants: <b>xlNotPlotted</b>, <b>xlInterpolated</b>, or <b>xlZero</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoughnutGroups">
      <MemberSignature Language="C#" Value="public object DoughnutGroups (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object DoughnutGroups([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.DoughnutGroups(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DoughnutGroups (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(14)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="9658f-289">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-289">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9658f-290">Especifica o grupo de gráficos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-290">Specifies the chart group.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9658f-291">Em um gráfico 2D, retorna um objeto representando um um grupo de gráficos de rosca único (um <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> objeto) ou uma coleção dos grupos de gráficos de rosca (um <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> conjunto).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-291">On a 2-D chart, returns an object that represents either a single doughnut chart group (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object) or a collection of the doughnut chart groups (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> collection).</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawingObjects">
      <MemberSignature Language="C#" Value="public object DrawingObjects (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object DrawingObjects([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.DrawingObjects(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DrawingObjects (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(88)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="9658f-292">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-292">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Drawings">
      <MemberSignature Language="C#" Value="public object Drawings (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Drawings([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.Drawings(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Drawings (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(772)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="9658f-293">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-293">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DropDowns">
      <MemberSignature Language="C#" Value="public object DropDowns (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object DropDowns([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.DropDowns(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DropDowns (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(836)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="9658f-p153">Para textos explicativos com um valor de posicionamento explicitamente definido, essa propriedade retorna a distância vertical (em pontos) da extremidade da caixa delimitadora de texto até o lugar onde a linha do texto explicativo é anexada à caixa de texto. <b>Single</b> de somente leitura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-p153">For callouts with an explicitly set drop value, this property returns the vertical distance (in points) from the edge of the text bounding box to the place where the callout line attaches to the text box. Read-only <b>Single</b>.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9658f-296">Retorna <see cref="T:System.Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-296">Returns <see cref="T:System.Object" />.</span>
          </span>
        </returns>
        <remarks>
          <span data-ttu-id="9658f-297">
            <para>Essa distância é medida da parte superior da caixa de texto, a menos que a propriedade <b>AutoAttach</b> esteja definida como <b>True</b> e a caixa de texto estiver à esquerda da origem da linha do texto explicativo (o lugar para que o texto explicativo aponta), nesse caso, a distância de posicionamento é medido do t inferior s da caixa de texto. </para>
            <para>Uso o <see cref="M:Microsoft.Office.Interop.Excel.CalloutFormat.CustomDrop(System.Single)" /> método para definir o valor dessa propriedade.</para>
            <para></para>
            <para>o valor dessa propriedade reflete com precisão a posição do anexo de linha do texto explicativo à caixa de texto somente se o texto explicativo tiver explicitamente definido drop valor — ou seja, se o valor do <see cref="P:Microsoft.Office.Interop.Excel.CalloutFormat.DropType" /> é <b>conectada</b>.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-297">
              <para>This distance is measured from the top of the text box unless the <b>AutoAttach</b> property is set to <b>True</b> and the text box is to the left of the origin of the callout line (the place that the callout points to), in which case the drop distance is measured from the bottom of the text box. </para>
              <para>Use the <see cref="M:Microsoft.Office.Interop.Excel.CalloutFormat.CustomDrop(System.Single)" /> method to set the value of this property.</para>
              <para></para>
              <para>The value of this property accurately reflects the position of the callout line attachment to the text box only if the callout has an explicitly set drop value — that is, if the value of the <see cref="P:Microsoft.Office.Interop.Excel.CalloutFormat.DropType" /> property is <b>msoCalloutDropCustom</b>.</para>
              <para></para>
            </span>
          </span>
        </remarks>
        <example>
          <span data-ttu-id="9658f-298">
            <para>Este exemplo substitui o posicionamento personalizado da forma um em myDocument com uma de duas colocações personalizadas, dependendo se o valor de posicionamento personalizado é maior ou menor que metade da altura da caixa de texto explicativo. Por exemplo funcione, a forma um deve ser um texto explicativo.</para>
            <code>&lt;span class="label"&gt;Set myDocument = Worksheets(1)  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
With myDocument.Shapes(1).Callout  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
    If .DropType = msoCalloutDropCustom Then  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
        If .&lt;/span&gt;
&lt;i&gt;Drop&lt;/i&gt;
&lt;span class="label"&gt;&amp;lt; .Parent.Height / 2 Then             .PresetDrop msoCalloutDropTop         Else             .PresetDrop msoCalloutDropBottom         End If     End If End With&lt;/span&gt;</code>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-298">
              <para>This example replaces the custom drop for shape one on myDocument with one of two preset drops, depending on whether the custom drop value is greater than or less than half the height of the callout text box. For the example to work, shape one must be a callout.</para>
              <code>&lt;span class="label"&gt;Set myDocument = Worksheets(1)  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
With myDocument.Shapes(1).Callout  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
    If .DropType = msoCalloutDropCustom Then  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
        If .&lt;/span&gt;
&lt;i&gt;Drop&lt;/i&gt;
&lt;span class="label"&gt;&amp;lt; .Parent.Height / 2 Then             .PresetDrop msoCalloutDropTop         Else             .PresetDrop msoCalloutDropBottom         End If     End If End With&lt;/span&gt;</code>
            </span>
          </span>
        </example>
        <example>
          <span data-ttu-id="9658f-299">
            <para>Este exemplo substitui o posicionamento personalizado da forma um em myDocument com uma de duas colocações personalizadas, dependendo se o valor de posicionamento personalizado é maior ou menor que metade da altura da caixa de texto explicativo. Por exemplo funcione, a forma um deve ser um texto explicativo.</para>
            <code>&lt;span class="label"&gt;Set myDocument = Worksheets(1)  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
With myDocument.Shapes(1).Callout  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
    If .DropType = msoCalloutDropCustom Then  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
        If .&lt;/span&gt;
&lt;i&gt;Drop&lt;/i&gt;
&lt;span class="label"&gt;&amp;lt; .Parent.Height / 2 Then             .PresetDrop msoCalloutDropTop         Else             .PresetDrop msoCalloutDropBottom         End If     End If End With&lt;/span&gt;</code>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-299">
              <para>This example replaces the custom drop for shape one on myDocument with one of two preset drops, depending on whether the custom drop value is greater than or less than half the height of the callout text box. For the example to work, shape one must be a callout.</para>
              <code>&lt;span class="label"&gt;Set myDocument = Worksheets(1)  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
With myDocument.Shapes(1).Callout  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
    If .DropType = msoCalloutDropCustom Then  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
        If .&lt;/span&gt;
&lt;i&gt;Drop&lt;/i&gt;
&lt;span class="label"&gt;&amp;lt; .Parent.Height / 2 Then             .PresetDrop msoCalloutDropTop         Else             .PresetDrop msoCalloutDropBottom         End If     End If End With&lt;/span&gt;</code>
            </span>
          </span>
        </example>
        <example>
          <span data-ttu-id="9658f-300">
            <para>Este exemplo substitui o posicionamento personalizado da forma um em myDocument com uma de duas colocações personalizadas, dependendo se o valor de posicionamento personalizado é maior ou menor que metade da altura da caixa de texto explicativo. Por exemplo funcione, a forma um deve ser um texto explicativo.</para>
            <code>&lt;span class="label"&gt;Set myDocument = Worksheets(1)  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
With myDocument.Shapes(1).Callout  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
    If .DropType = msoCalloutDropCustom Then  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
        If .&lt;/span&gt;
&lt;i&gt;Drop&lt;/i&gt;
&lt;span class="label"&gt;&amp;lt; .Parent.Height / 2 Then             .PresetDrop msoCalloutDropTop         Else             .PresetDrop msoCalloutDropBottom         End If     End If End With&lt;/span&gt;</code>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-300">
              <para>This example replaces the custom drop for shape one on myDocument with one of two preset drops, depending on whether the custom drop value is greater than or less than half the height of the callout text box. For the example to work, shape one must be a callout.</para>
              <code>&lt;span class="label"&gt;Set myDocument = Worksheets(1)  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
With myDocument.Shapes(1).Callout  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
    If .DropType = msoCalloutDropCustom Then  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
        If .&lt;/span&gt;
&lt;i&gt;Drop&lt;/i&gt;
&lt;span class="label"&gt;&amp;lt; .Parent.Height / 2 Then             .PresetDrop msoCalloutDropTop         Else             .PresetDrop msoCalloutDropBottom         End If     End If End With&lt;/span&gt;</code>
            </span>
          </span>
        </example>
      </Docs>
    </Member>
    <Member MemberName="Dummy24">
      <MemberSignature Language="C#" Value="public bool Dummy24 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Dummy24" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Dummy24" />
      <MemberSignature Language="VB.NET" Value="Public Property Dummy24 As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Dummy24 { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2858)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2858)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2858)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy25">
      <MemberSignature Language="C#" Value="public bool Dummy25 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Dummy25" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Dummy25" />
      <MemberSignature Language="VB.NET" Value="Public Property Dummy25 As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Dummy25 { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2859)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2859)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2859)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Elevation">
      <MemberSignature Language="C#" Value="public int Elevation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Elevation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Elevation" />
      <MemberSignature Language="VB.NET" Value="Public Property Elevation As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Elevation { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(49)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(49)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(49)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9658f-301">Retorna ou define a elevação do modo de exibição gráfico 3D em graus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-301">Returns or sets the elevation of the 3-D chart view in degrees.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="9658f-302">
            <para>a elevação do gráfico é a altura na qual você visualiza o gráfico em graus. O padrão é 15 para a maioria dos tipos de gráfico. O valor dessa propriedade deve estar entre -90 e 90, exceto para gráficos de barras 3D, onde ele deve estar entre 0 e 44.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-302">
              <para>The chart elevation is the height at which you view the chart in degrees. The default is 15 for most chart types. The value of this property must be between -90 and 90, except for 3-D bar charts, where it must be between 0 and 44.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="public object Evaluate (object Name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Evaluate([in]object Name) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.Evaluate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Evaluate (Name As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Evaluate(System::Object ^ Name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name">
          <span data-ttu-id="9658f-303">
            <b>Objeto</b>necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-303">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9658f-304">O nome do objeto, usando a convenção de nomenclatura do Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-304">The name of the object, using the naming convention of Microsoft Excel.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9658f-305">Converte um nome do Microsoft Excel em um objeto ou em um valor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-305">Converts a Microsoft Excel name to an object or a value.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Export">
      <MemberSignature Language="C#" Value="public bool Export (string Filename, object FilterName, object Interactive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Export([in]string Filename, [in]object FilterName, [in]object Interactive) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.Export(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Export (Filename As String, Optional FilterName As Object, Optional Interactive As Object) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1414)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="FilterName" Type="System.Object" />
        <Parameter Name="Interactive" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="9658f-306">
            <b>String</b> necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-306">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="9658f-307">O nome do arquivo exportado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-307">The name of the exported file.</span>
          </span>
        </param>
        <param name="FilterName">
          <span data-ttu-id="9658f-308">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-308">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9658f-309">O nome, independente do idioma, do filtro gráfico como aparece no registro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-309">The language-independent name of the graphic filter as it appears in the registry.</span>
          </span>
        </param>
        <param name="Interactive">
          <span data-ttu-id="9658f-310">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-310">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9658f-311">
            <b>True</b> para exibir a caixa de diálogo que contém as opções específicas de filtro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-311">
              <b>True</b> to display the dialog box that contains the filter-specific options.</span>
          </span>
          <span data-ttu-id="9658f-312">Se esse argumento for <b>False</b>, o Microsoft Excel usará os valores padrão para o filtro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-312">If this argument is <b>False</b>, Microsoft Excel uses the default values for the filter.</span>
          </span>
          <span data-ttu-id="9658f-313">O valor padrão é <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-313">The default value is <b>False</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9658f-314">Exporta o gráfico em um formato gráfico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-314">Exports the chart in a graphic format.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportAsFixedFormat">
      <MemberSignature Language="C#" Value="public void ExportAsFixedFormat (Microsoft.Office.Interop.Excel.XlFixedFormatType Type, object Filename, object Quality, object IncludeDocProperties, object IgnorePrintAreas, object From, object To, object OpenAfterPublish, object FixedFormatExtClassPtr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExportAsFixedFormat([in]valuetype Microsoft.Office.Interop.Excel.XlFixedFormatType Type, [in]object Filename, [in]object Quality, [in]object IncludeDocProperties, [in]object IgnorePrintAreas, [in]object From, [in]object To, [in]object OpenAfterPublish, [in]object FixedFormatExtClassPtr) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.ExportAsFixedFormat(Microsoft.Office.Interop.Excel.XlFixedFormatType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExportAsFixedFormat (Type As XlFixedFormatType, Optional Filename As Object, Optional Quality As Object, Optional IncludeDocProperties As Object, Optional IgnorePrintAreas As Object, Optional From As Object, Optional To As Object, Optional OpenAfterPublish As Object, Optional FixedFormatExtClassPtr As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2493)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlFixedFormatType" />
        <Parameter Name="Filename" Type="System.Object" />
        <Parameter Name="Quality" Type="System.Object" />
        <Parameter Name="IncludeDocProperties" Type="System.Object" />
        <Parameter Name="IgnorePrintAreas" Type="System.Object" />
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="OpenAfterPublish" Type="System.Object" />
        <Parameter Name="FixedFormatExtClassPtr" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type">
          <span data-ttu-id="9658f-315">O tipo do formato de arquivo para o qual exportar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-315">The type of file format to export to.</span>
          </span>
        </param>
        <param name="Filename">
          <span data-ttu-id="9658f-316">O nome de arquivo do arquivo a ser salvo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-316">The file name of the file to be saved.</span>
          </span>
          <span data-ttu-id="9658f-317">Você pode incluir um caminho completo ou short_Excel2007 salva o arquivo na pasta atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-317">You can include a full path, or short_Excel2007 saves the file in the current folder.</span>
          </span>
        </param>
        <param name="Quality">
          <span data-ttu-id="9658f-318">Opcional <see cref="T:Microsoft.Office.Interop.Excel.XlFixedFormatQuality" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-318">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlFixedFormatQuality" />.</span>
          </span>
          <span data-ttu-id="9658f-319">Especifica a qualidade do arquivo publicado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-319">Specifies the quality of the published file.</span>
          </span>
        </param>
        <param name="IncludeDocProperties">
          <span data-ttu-id="9658f-320">
            <b>True</b> para incluir as propriedades do documento; caso contrário <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-320">
              <b>True</b> to include the document properties; otherwise <b>False</b>.</span>
          </span>
        </param>
        <param name="IgnorePrintAreas">
          <span data-ttu-id="9658f-321">
            <b>True</b> para ignorar quaisquer áreas de impressão definidas durante a publicação; caso contrário <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-321">
              <b>True</b> to ignore any print areas set when publishing; otherwise <b>False</b>.</span>
          </span>
        </param>
        <param name="From">
          <span data-ttu-id="9658f-p160">O número da página na qual a publicação será iniciada. Se esse argumento for omitido, a publicação começará no início.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-p160">The number of the page at which to start publishing. If this argument is omitted, publishing starts at the beginning.</span>
          </span>
        </param>
        <param name="To">
          <span data-ttu-id="9658f-p161">O número da última página a ser publicada. Se este argumento for omitido, a publicação terminará na última página.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-p161">The number of the last page to publish. If this argument is omitted, publishing ends with the last page.</span>
          </span>
        </param>
        <param name="OpenAfterPublish">
          <span data-ttu-id="9658f-326">
            <b>True</b> para exibir o arquivo no visualizador depois que ele for publicado; Caso contrário <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-326">
              <b>True</b> to display the file in the viewer after it is published; otherwise <b>False</b>.</span>
          </span>
        </param>
        <param name="FixedFormatExtClassPtr">
          <span data-ttu-id="9658f-327">Ponteiro para a classe FixedFormatExt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-327">Pointer to the FixedFormatExt class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9658f-328">Exporta para um arquivo do formato especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-328">Exports to a file of the specified format.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="9658f-329">
            <para>Este método também oferece suporte ao inicializar um suplemento para exportar um arquivo para um arquivo de formato fixo. Por exemplo, o Excel executará conversão de formato de arquivo se os conversores estão presentes. A conversão geralmente é iniciada pelo usuário.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-329">
              <para>This method also supports initializing an add-in to export a file to a fixed-format file. For example, Excel will perform file format conversion if the converters are  present. The conversion is usually initiated by the user.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Floor">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Floor Floor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Floor Floor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Floor" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Floor As Floor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Floor ^ Floor { Microsoft::Office::Interop::Excel::Floor ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(83)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(83)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Floor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9658f-330">Retorna um <see cref="T:Microsoft.Office.Interop.Excel.Floor" /> object que representa a base do gráfico 3D.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-330">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Floor" /> object that represents the floor of the 3-D chart.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FullSeriesCollection">
      <MemberSignature Language="C#" Value="public object FullSeriesCollection (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object FullSeriesCollection([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.FullSeriesCollection(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function FullSeriesCollection (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3047)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="9658f-331">O número indexado do filtrada check-out do objeto <b>Series</b> .</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-331">The indexed number of the filtered out <b>Series</b> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9658f-332">Permite recuperar o filtrada check-out da série especificada pelo argumento Index.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-332">Enables retrieving the filtered out series specified by the Index argument.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="9658f-333">
            <para>Objetos 
            <b>series</b> em linhas ou colunas ocultas não aparecem na coleção de séries atual, a menos que o usuário tiver habilitado a opção <b>Mostrar dados em linhas e colunas ocultas</b> na caixa de diálogo Select Data.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-333">
              <para>
                <b>Series</b> objects in hidden rows or columns do not appear in the current series collection unless the user has enabled the <b>Show data in hidden rows and columns</b> option in the Select Data dialog.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GapDepth">
      <MemberSignature Language="C#" Value="public int GapDepth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 GapDepth" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.GapDepth" />
      <MemberSignature Language="VB.NET" Value="Public Property GapDepth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int GapDepth { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(50)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(50)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(50)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9658f-334">Retorna ou define a distância entre a série de dados em um gráfico 3D como um percentual da largura do marcador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-334">Returns or sets the distance between the data series in a 3-D chart as a percentage of the marker width.</span>
          </span>
          <span data-ttu-id="9658f-335">O valor dessa propriedade precisa estar entre 0 e 500.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-335">The value of this property must be between 0 and 500.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChartElement">
      <MemberSignature Language="C#" Value="public void GetChartElement (int x, int y, ref int ElementID, ref int Arg1, ref int Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetChartElement([in]int32 x, [in]int32 y, [in]int32&amp; ElementID, [in]int32&amp; Arg1, [in]int32&amp; Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.GetChartElement(System.Int32,System.Int32,System.Int32@,System.Int32@,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetChartElement (x As Integer, y As Integer, ByRef ElementID As Integer, ByRef Arg1 As Integer, ByRef Arg2 As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetChartElement(int x, int y, int % ElementID, int % Arg1, int % Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1409)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="ElementID" Type="System.Int32&amp;" RefType="ref" />
        <Parameter Name="Arg1" Type="System.Int32&amp;" RefType="ref" />
        <Parameter Name="Arg2" Type="System.Int32&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="9658f-336">
            <b>Integer</b>necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-336">Required <b>Integer</b>.</span>
          </span>
          <span data-ttu-id="9658f-337">A coordenada X do elemento de gráfico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-337">The X coordinate of the chart element.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="9658f-338">
            <b>Integer</b>necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-338">Required <b>Integer</b>.</span>
          </span>
          <span data-ttu-id="9658f-339">A coordenada Y do elemento de gráfico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-339">The Y coordinate of the chart element.</span>
          </span>
        </param>
        <param name="ElementID">
          <span data-ttu-id="9658f-340">
            <b>Integer</b>necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-340">Required <b>Integer</b>.</span>
          </span>
          <span data-ttu-id="9658f-341">Quando o método retorna, esse argumento contém o <see cref="T:Microsoft.Office.Interop.Excel.XlChartItem" /> o valor do elemento de gráfico nas coordenadas especificadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-341">When the method returns, this argument contains the <see cref="T:Microsoft.Office.Interop.Excel.XlChartItem" /> value of the chart element at the specified coordinates.</span>
          </span>
          <span data-ttu-id="9658f-342">Para obter mais informações, consulte a seção Comentários.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-342">For more information, see the Remarks section.</span>
          </span>
        </param>
        <param name="Arg1">
          <span data-ttu-id="9658f-343">
            <b>Integer</b>necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-343">Required <b>Integer</b>.</span>
          </span>
          <span data-ttu-id="9658f-344">Quando o método retorna, esse argumento contém informações relacionadas ao elemento de gráfico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-344">When the method returns, this argument contains information related to the chart element.</span>
          </span>
          <span data-ttu-id="9658f-345">Para obter mais informações, consulte a seção Comentários.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-345">For more information, see the Remarks section.</span>
          </span>
        </param>
        <param name="Arg2">
          <span data-ttu-id="9658f-346">
            <b>Integer</b>necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-346">Required <b>Integer</b>.</span>
          </span>
          <span data-ttu-id="9658f-347">Quando o método retorna, esse argumento contém informações relacionadas ao elemento de gráfico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-347">When the method returns, this argument contains information related to the chart element.</span>
          </span>
          <span data-ttu-id="9658f-348">Para obter mais informações, consulte a seção Comentários.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-348">For more information, see the Remarks section.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9658f-p168">Retorna informações sobre o elemento de gráfico nas coordenadas especificadas X e Y. Esse método é incomum porque você especifica valores apenas para os dois primeiros argumentos. O Microsoft Excel preenche os outros argumentos e o seu código deverá examinar esses valores quando o método retornar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-p168">Returns information about the chart element at specified X and Y coordinates. This method is unusual in that you specify values for only the first two arguments. Microsoft Excel fills in the other arguments, and your code should examine those values when the method returns.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="9658f-352">
            <para>O valor da <paramref name="ElementID" /> após o método retornar determina se <paramref name="Arg1" /> e <paramref name="Arg2" /> contêm alguma informação, conforme mostrado na tabela a seguir.</para>
            <list type="table">
              <item>
                <term>
                  <b>xlAxis</b>
                </term>
                <description>AxisIndex</description>
                <description>AxisType</description>
              </item>
              <item>
                <term>
                  <b>xlAxisTitle</b>
                </term>
                <description>AxisIndex</description>
                <description>AxisType</description>
              </item>
              <item>
                <term>
                  <b>xlDisplayUnitLabel</b>
                </term>
                <description>AxisIndex</description>
                <description>AxisType</description>
              </item>
              <item>
                <term>
                  <b> xlMajorGridlines</b>
                </term>
                <description>AxisIndex</description>
                <description>AxisType</description>
              </item>
              <item>
                <term>
                  <b>xlMinorGridlines</b>
                </term>
                <description>AxisIndex</description>
                <description>AxisType</description>
              </item>
              <item>
                <term>
                  <b>xlPivotChartDropZone</b>
                </term>
                <description>DropZoneType</description>
                <description>Nenhum</description>
              </item>
              <item>
                <term>
                  <b>xlPivotChartFieldButton</b>
                </term>
                <description>DropZoneType</description>
                <description>PivotFieldIndex</description>
              </item>
              <item>
                <term>
                  <b>xlDownBars</b>
                </term>
                <description>GroupIndex</description>
                <description>Nenhum</description>
              </item>
              <item>
                <term>
                  <b>xlDropLines</b>
                </term>
                <description>GroupIndex</description>
                <description>Nenhum</description>
              </item>
              <item>
                <term>
                  <b>xlHiLoLines</b>
                </term>
                <description>GroupIndex</description>
                <description>Nenhum</description>
              </item>
              <item>
                <term>
                  <b>xlRadarAxisLabels</b>
                </term>
                <description>GroupIndex</description>
                <description>Nenhum</description>
              </item>
              <item>
                <term>
                  <b>xlSeriesLines</b>
                </term>
                <description>GroupIndex</description>
                <description>Nenhum</description>
              </item>
              <item>
                <term>
                  <b>xlUpBars</b>
                </term>
                <description>GroupIndex</description>
                <description>Nenhum</description>
              </item>
              <item>
                <term>
                  <b>xlChartArea</b>
                </term>
                <description>Nenhum</description>
                <description>Nenhum</description>
              </item>
              <item>
                <term>
                  <b>xlChartTitle</b>
                </term>
                <description>Nenhum</description>
                <description>Nenhum</description>
              </item>
              <item>
                <term>
                  <b>xlCorners</b>
                </term>
                <description>Nenhum</description>
                <description>Nenhum</description>
              </item>
              <item>
                <term>
                  <b>xlDataTable</b>
                </term>
                <description>Nenhum</description>
                <description>Nenhum</description>
              </item>
              <item>
                <term>
                  <b>xlFloor</b>
                </term>
                <description>Nenhum</description>
                <description>Nenhum</description>
              </item>
              <item>
                <term>
                  <b>xlLegend</b>
                </term>
                <description>Nenhum</description>
                <description>Nenhum</description>
              </item>
              <item>
                <term>
                  <b>xlNothing</b>
                </term>
                <description>Nenhum</description>
                <description>Nenhum</description>
              </item>
              <item>
                <term>
                  <b>xlPlotArea</b>
                </term>
                <description>Nenhum</description>
                <description>Nenhum</description>
              </item>
              <item>
                <term>
                  <b>xlWalls</b>
                </term>
                <description>Nenhum</description>
                <description>Nenhum</description>
              </item>
              <item>
                <term>
                  <b>xlDataLabel</b>
                </term>
                <description>SeriesIndex</description>
                <description>PointIndex</description>
              </item>
              <item>
                <term>
                  <b>xlErrorBars</b>
                </term>
                <description>SeriesIndex</description>
                <description>Nenhum</description>
              </item>
              <item>
                <term>
                  <b>xlLegendEntry</b>
                </term>
                <description>SeriesIndex</description>
                <description>Nenhum</description>
              </item>
              <item>
                <term>
                  <b>xlLegendKey</b>
                </term>
                <description>SeriesIndex</description>
                <description>Nenhum</description>
              </item>
              <item>
                <term>
                  <b>xlSeries</b>
                </term>
                <description>SeriesIndex</description>
                <description>PointIndex</description>
              </item>
              <item>
                <term>
                  <b>xlShape</b>
                </term>
                <description>ShapeIndex</description>
                <description>Nenhum</description>
              </item>
              <item>
                <term>
                  <b>xlTrendline</b>
                </term>
                <description>SeriesIndex</description>
                <description>TrendLineIndex</description>
              </item>
              <item>
                <term>
                  <b>xlXErrorBars</b>
                </term>
                <description>SeriesIndex</description>
                <description>Nenhum</description>
              </item>
              <item>
                <term>
                  <b>xlYErrorBars</b>
                </term>
                <description>SeriesIndex</description>
                <description>Nenhum</description>
              </item>
            </list>
            <para>a tabela a seguir descreve o significado dos <paramref name="Arg1" /> e <paramref name="Arg2" /> após o método retornar.</para>
            <list type="table">
              <item>
                <term>AxisIndex</term>
                <description>Especifica se o eixo é primário ou secundário. Pode ser uma das seguintes opções <see cref="T:Microsoft.Office.Interop.Excel.XlAxisGroup" /> constantes: <b>xlPrimary</b> ou <b>xlSecondary</b>.</description>
              </item>
              <item>
                <term>AxisType</term>
                <description>Especifica o tipo de eixo. Pode ser uma das seguintes opções <see cref="T:Microsoft.Office.Interop.Excel.XlAxisType" /> constantes: <b>xlCategory</b>, <b>xlSeriesAxis</b>ou <b>xlValue</b>.</description>
              </item>
              <item>
                <term>DropZoneType</term>
                <description>Especifica o tipo de zona de recebimento: coluna, dados, página ou campo de linha. Pode ser uma das seguintes opções <see cref="T:Microsoft.Office.Interop.Excel.XlPivotFieldOrientation" /> constantes: <b>xlColumnField</b>, <b>xlDataField</b>, <b>xlPageField</b>ou <b>xlRowField</b>. As constantes de campo de coluna e linha especificam os campos de série e categoria respectivamente.</description>
              </item>
              <item>
                <term>GroupIndex</term>
                <description>Especifica o deslocamento dentro do <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> coleção para um grupo de gráficos específico.</description>
              </item>
              <item>
                <term>PivotFieldIndex</term>
                <description>Especifica o deslocamento dentro do <see cref="T:Microsoft.Office.Interop.Excel.PivotFields" /> coleção para uma coluna específica (série), dados, página ou campo de linha (categoria). -1 se o tipo de zona de depósito for <b>xlDataField</b>.</description>
              </item>
              <item>
                <term>PointIndex</term>
                <description>Especifica o deslocamento dentro do <see cref="T:Microsoft.Office.Interop.Excel.Points" /> conjunto para um ponto específico dentro de uma série. O valor – 1 indica que todos os pontos de dados estão selecionados.</description>
              </item>
              <item>
                <term>SeriesIndex</term>
                <description>Especifica o deslocamento dentro do <see cref="T:Microsoft.Office.Interop.Excel.Series" /> coleção para uma série específica.</description>
              </item>
              <item>
                <term>ShapeIndex</term>
                <description>Especifica o deslocamento dentro do <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> coleção para uma forma específica.</description>
              </item>
              <item>
                <term>TrendlineIndex</term>
                <description>Especifica o deslocamento dentro do <see cref="T:Microsoft.Office.Interop.Excel.Trendlines" /> coleção para uma linha de tendência específica dentro de uma série.</description>
              </item>
            </list>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-352">
              <para>The value of <paramref name="ElementID" /> after the method returns determines whether <paramref name="Arg1" /> and <paramref name="Arg2" /> contain any information, as shown in the following table.</para>
              <list type="table">
                <item>
                  <term>
                    <b>xlAxis</b>
                  </term>
                  <description>AxisIndex</description>
                  <description>AxisType</description>
                </item>
                <item>
                  <term>
                    <b>xlAxisTitle</b>
                  </term>
                  <description>AxisIndex</description>
                  <description>AxisType</description>
                </item>
                <item>
                  <term>
                    <b>xlDisplayUnitLabel</b>
                  </term>
                  <description>AxisIndex</description>
                  <description>AxisType</description>
                </item>
                <item>
                  <term>
                    <b>xlMajorGridlines</b>
                  </term>
                  <description>AxisIndex</description>
                  <description>AxisType</description>
                </item>
                <item>
                  <term>
                    <b>xlMinorGridlines</b>
                  </term>
                  <description>AxisIndex</description>
                  <description>AxisType</description>
                </item>
                <item>
                  <term>
                    <b>xlPivotChartDropZone</b>
                  </term>
                  <description>DropZoneType</description>
                  <description>None</description>
                </item>
                <item>
                  <term>
                    <b>xlPivotChartFieldButton</b>
                  </term>
                  <description>DropZoneType</description>
                  <description>PivotFieldIndex</description>
                </item>
                <item>
                  <term>
                    <b>xlDownBars</b>
                  </term>
                  <description>GroupIndex</description>
                  <description>None</description>
                </item>
                <item>
                  <term>
                    <b>xlDropLines</b>
                  </term>
                  <description>GroupIndex</description>
                  <description>None</description>
                </item>
                <item>
                  <term>
                    <b>xlHiLoLines</b>
                  </term>
                  <description>GroupIndex</description>
                  <description>None</description>
                </item>
                <item>
                  <term>
                    <b>xlRadarAxisLabels</b>
                  </term>
                  <description>GroupIndex</description>
                  <description>None</description>
                </item>
                <item>
                  <term>
                    <b>xlSeriesLines</b>
                  </term>
                  <description>GroupIndex</description>
                  <description>None</description>
                </item>
                <item>
                  <term>
                    <b>xlUpBars</b>
                  </term>
                  <description>GroupIndex</description>
                  <description>None</description>
                </item>
                <item>
                  <term>
                    <b>xlChartArea</b>
                  </term>
                  <description>None</description>
                  <description>None</description>
                </item>
                <item>
                  <term>
                    <b>xlChartTitle</b>
                  </term>
                  <description>None</description>
                  <description>None</description>
                </item>
                <item>
                  <term>
                    <b>xlCorners</b>
                  </term>
                  <description>None</description>
                  <description>None</description>
                </item>
                <item>
                  <term>
                    <b>xlDataTable</b>
                  </term>
                  <description>None</description>
                  <description>None</description>
                </item>
                <item>
                  <term>
                    <b>xlFloor</b>
                  </term>
                  <description>None</description>
                  <description>None</description>
                </item>
                <item>
                  <term>
                    <b>xlLegend</b>
                  </term>
                  <description>None</description>
                  <description>None</description>
                </item>
                <item>
                  <term>
                    <b>xlNothing</b>
                  </term>
                  <description>None</description>
                  <description>None</description>
                </item>
                <item>
                  <term>
                    <b>xlPlotArea</b>
                  </term>
                  <description>None</description>
                  <description>None</description>
                </item>
                <item>
                  <term>
                    <b>xlWalls</b>
                  </term>
                  <description>None</description>
                  <description>None</description>
                </item>
                <item>
                  <term>
                    <b>xlDataLabel</b>
                  </term>
                  <description>SeriesIndex</description>
                  <description>PointIndex</description>
                </item>
                <item>
                  <term>
                    <b>xlErrorBars</b>
                  </term>
                  <description>SeriesIndex</description>
                  <description>None</description>
                </item>
                <item>
                  <term>
                    <b>xlLegendEntry</b>
                  </term>
                  <description>SeriesIndex</description>
                  <description>None</description>
                </item>
                <item>
                  <term>
                    <b>xlLegendKey</b>
                  </term>
                  <description>SeriesIndex</description>
                  <description>None</description>
                </item>
                <item>
                  <term>
                    <b>xlSeries</b>
                  </term>
                  <description>SeriesIndex</description>
                  <description>PointIndex</description>
                </item>
                <item>
                  <term>
                    <b>xlShape</b>
                  </term>
                  <description>ShapeIndex</description>
                  <description>None</description>
                </item>
                <item>
                  <term>
                    <b>xlTrendline</b>
                  </term>
                  <description>SeriesIndex</description>
                  <description>TrendLineIndex</description>
                </item>
                <item>
                  <term>
                    <b>xlXErrorBars</b>
                  </term>
                  <description>SeriesIndex</description>
                  <description>None</description>
                </item>
                <item>
                  <term>
                    <b>xlYErrorBars</b>
                  </term>
                  <description>SeriesIndex</description>
                  <description>None</description>
                </item>
              </list>
              <para>The following table describes the meaning of <paramref name="Arg1" /> and <paramref name="Arg2" /> after the method returns.</para>
              <list type="table">
                <item>
                  <term>AxisIndex</term>
                  <description>Specifies whether the axis is primary or secondary. Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlAxisGroup" /> constants: <b>xlPrimary</b> or <b>xlSecondary</b>.</description>
                </item>
                <item>
                  <term>AxisType</term>
                  <description>Specifies the axis type. Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlAxisType" /> constants: <b>xlCategory</b>, <b>xlSeriesAxis</b>, or <b>xlValue</b>.</description>
                </item>
                <item>
                  <term>DropZoneType</term>
                  <description>Specifies the drop zone type: column, data, page, or row field. Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlPivotFieldOrientation" /> constants: <b>xlColumnField</b>, <b>xlDataField</b>, <b>xlPageField</b>, or <b>xlRowField</b>. The column and row field constants specify the series and category fields respectively.</description>
                </item>
                <item>
                  <term>GroupIndex</term>
                  <description>Specifies the offset within the <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> collection for a specific chart group.</description>
                </item>
                <item>
                  <term>PivotFieldIndex</term>
                  <description>Specifies the offset within the <see cref="T:Microsoft.Office.Interop.Excel.PivotFields" /> collection for a specific column (series), data, page, or row (category) field. -1 if the drop zone type is <b>xlDataField</b>.</description>
                </item>
                <item>
                  <term>PointIndex</term>
                  <description>Specifies the offset within the <see cref="T:Microsoft.Office.Interop.Excel.Points" /> collection for a specific point within a series. A value of –1 indicates that all data points are selected.</description>
                </item>
                <item>
                  <term>SeriesIndex</term>
                  <description>Specifies the offset within the <see cref="T:Microsoft.Office.Interop.Excel.Series" /> collection for a specific series.</description>
                </item>
                <item>
                  <term>ShapeIndex</term>
                  <description>Specifies the offset within the <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> collection for a specific shape.</description>
                </item>
                <item>
                  <term>TrendlineIndex</term>
                  <description>Specifies the offset within the <see cref="T:Microsoft.Office.Interop.Excel.Trendlines" /> collection for a specific trendline within a series.</description>
                </item>
              </list>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBoxes">
      <MemberSignature Language="C#" Value="public object GroupBoxes (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GroupBoxes([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.GroupBoxes(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GroupBoxes (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(834)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="9658f-353">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-353">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupObjects">
      <MemberSignature Language="C#" Value="public object GroupObjects (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GroupObjects([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.GroupObjects(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GroupObjects (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1113)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="9658f-354">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-354">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasAxis">
      <MemberSignature Language="C#" Value="public object HasAxis[object Index1, object Index2] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object HasAxis(object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.HasAxis(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Property HasAxis(Optional Index1 As Object, Optional Index2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ HasAxis[System::Object ^, System::Object ^] { System::Object ^ get(System::Object ^ Index1, System::Object ^ Index2); void set(System::Object ^ Index1, System::Object ^ Index2, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(52)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(52)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(52)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index1" Type="System.Object" />
        <Parameter Name="Index2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index1">
          <span data-ttu-id="9658f-355">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-355">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9658f-356">O tipo de eixo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-356">The axis type.</span>
          </span>
          <span data-ttu-id="9658f-357">Eixos de série se aplicam somente a gráficos 3D.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-357">Series axes apply only to 3-D charts.</span>
          </span>
          <span data-ttu-id="9658f-358">Pode ser uma do <see cref="T:Microsoft.Office.Interop.Excel.XlAxisType" /> constantes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-358">Can be one of the <see cref="T:Microsoft.Office.Interop.Excel.XlAxisType" /> constants.</span>
          </span>
        </param>
        <param name="Index2">
          <span data-ttu-id="9658f-359">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-359">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9658f-360">O grupo do eixo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-360">The axis group.</span>
          </span>
          <span data-ttu-id="9658f-361">Gráficos 3D possuem somente um conjunto de eixos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-361">3-D charts have only one set of axes.</span>
          </span>
          <span data-ttu-id="9658f-362">Pode ser uma do <see cref="T:Microsoft.Office.Interop.Excel.XlAxisGroup" /> constantes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-362">Can be one of the <see cref="T:Microsoft.Office.Interop.Excel.XlAxisGroup" /> constants.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9658f-363">Retorna ou define quais eixos existem no gráfico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-363">Returns or sets which axes exist on the chart.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="9658f-364">
            <para>Microsoft Excel pode criar ou excluir eixos se você alterar o tipo de gráfico ou a <see cref="P:Microsoft.Office.Interop.Excel.Axis.AxisGroup" /> propriedade.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-364">
              <para>Microsoft Excel may create or delete axes if you change the chart type or the <see cref="P:Microsoft.Office.Interop.Excel.Axis.AxisGroup" /> property.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasDataTable">
      <MemberSignature Language="C#" Value="public bool HasDataTable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasDataTable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.HasDataTable" />
      <MemberSignature Language="VB.NET" Value="Public Property HasDataTable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasDataTable { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1396)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1396)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1396)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9658f-365">
            <b>True</b> se o gráfico possui uma tabela de dados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-365">
              <b>True</b> if the chart has a data table.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasHiddenContent">
      <MemberSignature Language="C#" Value="public bool HasHiddenContent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasHiddenContent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.HasHiddenContent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasHiddenContent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasHiddenContent { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3050)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3050)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasLegend">
      <MemberSignature Language="C#" Value="public bool HasLegend { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasLegend" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.HasLegend" />
      <MemberSignature Language="VB.NET" Value="Public Property HasLegend As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasLegend { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(53)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(53)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(53)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9658f-366">
            <b>True</b> se o gráfico tem uma legenda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-366">
              <b>True</b> if the chart has a legend.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasPivotFields">
      <MemberSignature Language="C#" Value="public bool HasPivotFields { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasPivotFields" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.HasPivotFields" />
      <MemberSignature Language="VB.NET" Value="Public Property HasPivotFields As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasPivotFields { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1815)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1815)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1815)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9658f-367">
            <b>True</b> se os controles de gráfico dinâmico são exibidos no relatório de gráfico dinâmico especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-367">
              <b>True</b> if the PivotChart controls are displayed on the specified PivotChart report.</span>
          </span>
          <span data-ttu-id="9658f-368">O valor padrão é <b>True</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-368">The default value is <b>True</b>.</span>
          </span>
          <span data-ttu-id="9658f-369">Para um gráfico normal, essa propriedade sempre retorna <b>False</b> e não pode ser definida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-369">For a regular chart, this property always returns <b>False</b> and cannot be set.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasTitle">
      <MemberSignature Language="C#" Value="public bool HasTitle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasTitle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.HasTitle" />
      <MemberSignature Language="VB.NET" Value="Public Property HasTitle As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasTitle { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(54)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(54)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(54)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9658f-370">
            <b>True</b> se o eixo ou o gráfico tem um título visível.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-370">
              <b>True</b> if the axis or chart has a visible title.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="9658f-371">
            <para>Título de um eixo é representado por um <see cref="T:Microsoft.Office.Interop.Excel.AxisTitle" /> objeto.</para>
            <para>Um título de gráfico é representado por um <see cref="T:Microsoft.Office.Interop.Excel.ChartTitle" /> objeto.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-371">
              <para>An axis title is represented by an <see cref="T:Microsoft.Office.Interop.Excel.AxisTitle" /> object.</para>
              <para>A chart title is represented by a <see cref="T:Microsoft.Office.Interop.Excel.ChartTitle" /> object.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeightPercent">
      <MemberSignature Language="C#" Value="public int HeightPercent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 HeightPercent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.HeightPercent" />
      <MemberSignature Language="VB.NET" Value="Public Property HeightPercent As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int HeightPercent { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(55)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(55)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(55)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9658f-372">Retorna ou define a altura de um gráfico 3D como um percentual da largura do gráfico (entre 5 e 500 por cento).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-372">Returns or sets the height of a 3-D chart as a percentage of the chart width (between 5 and 500 percent).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Hyperlinks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Hyperlinks Hyperlinks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Hyperlinks Hyperlinks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Hyperlinks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Hyperlinks As Hyperlinks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Hyperlinks ^ Hyperlinks { Microsoft::Office::Interop::Excel::Hyperlinks ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1393)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1393)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Hyperlinks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9658f-373">Retorna um <see cref="T:Microsoft.Office.Interop.Excel.Hyperlinks" /> coleção que representa os hiperlinks do intervalo ou planilha.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-373">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Hyperlinks" /> collection that represents the hyperlinks for the range or worksheet.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public int Index { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Index" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Index" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Index As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Index { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(486)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(486)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9658f-374">Retorna o número de índice do objeto dentro da coleção de objetos similares.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-374">Returns the index number of the object within the collection of similar objects.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Labels">
      <MemberSignature Language="C#" Value="public object Labels (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Labels([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.Labels(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Labels (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(841)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="9658f-375">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-375">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Legend">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Legend Legend { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Legend Legend" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Legend" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Legend As Legend" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Legend ^ Legend { Microsoft::Office::Interop::Excel::Legend ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(84)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(84)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Legend</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9658f-376">Retorna um <see cref="T:Microsoft.Office.Interop.Excel.Legend" /> object que representa a legenda do gráfico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-376">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Legend" /> object that represents the legend for the chart.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Line3DGroup">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ChartGroup Line3DGroup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ChartGroup Line3DGroup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Line3DGroup" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Line3DGroup As ChartGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ChartGroup ^ Line3DGroup { Microsoft::Office::Interop::Excel::ChartGroup ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(20)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(20)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9658f-377">Retorna um <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object que representa o grupo de gráficos de linhas em um gráfico 3D.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-377">Returns a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object that represents the line chart group on a 3-D chart.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineGroups">
      <MemberSignature Language="C#" Value="public object LineGroups (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object LineGroups([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.LineGroups(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function LineGroups (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(12)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="9658f-378">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-378">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9658f-379">Especifica o grupo de gráficos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-379">Specifies the chart group.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9658f-380">Em um gráfico 2D, retorna um objeto representando um um grupo de gráficos de linha única (um <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> objeto) ou uma coleção dos grupos de gráficos de linha (uma <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> conjunto).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-380">On a 2-D chart, returns an object that represents either a single line chart group (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object) or a collection of the line chart groups (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> collection).</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lines">
      <MemberSignature Language="C#" Value="public object Lines (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Lines([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.Lines(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Lines (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(767)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="9658f-381">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-381">Reserved for internal use.</span>
          </span>
          <span data-ttu-id="9658f-382">f</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-382">f</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListBoxes">
      <MemberSignature Language="C#" Value="public object ListBoxes (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ListBoxes([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.ListBoxes(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ListBoxes (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(832)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="9658f-p174">O número do índice de uma única entrada de texto a ser definida ou retornada. Se esse argumento for omitido, a lista inteira será retornada ou definida como uma matriz de sequências de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-p174">The index number of a single text entry to be set or returned. If this argument is omitted, the entire list is returned or set as an array of strings.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9658f-p175">Retorna ou define as entradas de texto da caixa de listagem especificada ou de uma caixa de combinação, como uma matriz de cadeia de caracteres, ou retorna ou define uma única entrada de texto. Ocorre um erro quando não há entradas na lista.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-p175">Returns or sets the text entries in the specified list box or a combo box, as an array of strings, or returns or sets a single text entry. An error occurs if there are no entries in the list.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9658f-387">Variant</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-387">Variant</span>
          </span>
        </returns>
        <remarks>
          <span data-ttu-id="9658f-388">
            <para>a definição dessa propriedade limpa qualquer intervalo especificado pelo <see cref="P:Microsoft.Office.Interop.Excel.ControlFormat.ListFillRange" /> propriedade.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-388">
              <para>Setting this property clears any range specified by the <see cref="P:Microsoft.Office.Interop.Excel.ControlFormat.ListFillRange" /> property.</para>
              <para></para>
            </span>
          </span>
        </remarks>
        <example>
          <span data-ttu-id="9658f-389">
            <para>Este exemplo define as entradas em uma caixa de listagem na planilha um. Se Shapes(2) não representar uma caixa de listagem, este exemplo falhará.</para>
            <code>&lt;span class="label"&gt;Worksheets(1).Shapes(2).ControlFormat.&lt;/span&gt;
&lt;i&gt;List&lt;/i&gt;
&lt;span class="label"&gt;= _     Array("cogs", "widgets", "sprockets", "gizmos")&lt;/span&gt;</code>
            <para>Este exemplo define a entrada quatro em uma caixa de listagem na planilha um. Se Shapes(2) não representar uma caixa de listagem, este exemplo falhará.</para>
            <code>&lt;span class="label"&gt;Worksheets(1).Shapes(2).ControlFormat.&lt;/span&gt;
&lt;i&gt;List&lt;/i&gt;
&lt;span class="label"&gt;(4) = "gadgets"&lt;/span&gt;</code>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-389">
              <para>This example sets the entries in a list box on worksheet one. If Shapes(2) doesn’t represent a list box, this example fails.</para>
              <code>&lt;span class="label"&gt;Worksheets(1).Shapes(2).ControlFormat.&lt;/span&gt;
&lt;i&gt;List&lt;/i&gt;
&lt;span class="label"&gt;= _     Array("cogs", "widgets", "sprockets", "gizmos")&lt;/span&gt;</code>
              <para>This example sets entry four in a list box on worksheet one. If Shapes(2) doesn’t represent a list box, this example fails.</para>
              <code>&lt;span class="label"&gt;Worksheets(1).Shapes(2).ControlFormat.&lt;/span&gt;
&lt;i&gt;List&lt;/i&gt;
&lt;span class="label"&gt;(4) = "gadgets"&lt;/span&gt;</code>
            </span>
          </span>
        </example>
        <example>
          <span data-ttu-id="9658f-390">
            <para>Este exemplo define as entradas em uma caixa de listagem na planilha um. Se Shapes(2) não representar uma caixa de listagem, este exemplo falhará.</para>
            <code>&lt;span class="label"&gt;Worksheets(1).Shapes(2).ControlFormat.&lt;/span&gt;
&lt;i&gt;List&lt;/i&gt;
&lt;span class="label"&gt;= _     Array("cogs", "widgets", "sprockets", "gizmos")&lt;/span&gt;</code>
            <para>Este exemplo define a entrada quatro em uma caixa de listagem na planilha um. Se Shapes(2) não representar uma caixa de listagem, este exemplo falhará.</para>
            <code>&lt;span class="label"&gt;Worksheets(1).Shapes(2).ControlFormat.&lt;/span&gt;
&lt;i&gt;List&lt;/i&gt;
&lt;span class="label"&gt;(4) = "gadgets"&lt;/span&gt;</code>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-390">
              <para>This example sets the entries in a list box on worksheet one. If Shapes(2) doesn’t represent a list box, this example fails.</para>
              <code>&lt;span class="label"&gt;Worksheets(1).Shapes(2).ControlFormat.&lt;/span&gt;
&lt;i&gt;List&lt;/i&gt;
&lt;span class="label"&gt;= _     Array("cogs", "widgets", "sprockets", "gizmos")&lt;/span&gt;</code>
              <para>This example sets entry four in a list box on worksheet one. If Shapes(2) doesn’t represent a list box, this example fails.</para>
              <code>&lt;span class="label"&gt;Worksheets(1).Shapes(2).ControlFormat.&lt;/span&gt;
&lt;i&gt;List&lt;/i&gt;
&lt;span class="label"&gt;(4) = "gadgets"&lt;/span&gt;</code>
            </span>
          </span>
        </example>
        <example>
          <span data-ttu-id="9658f-391">
            <para>Este exemplo define as entradas em uma caixa de listagem na planilha um. Se Shapes(2) não representar uma caixa de listagem, este exemplo falhará.</para>
            <code>&lt;span class="label"&gt;Worksheets(1).Shapes(2).ControlFormat.&lt;/span&gt;
&lt;i&gt;List&lt;/i&gt;
&lt;span class="label"&gt;= _     Array("cogs", "widgets", "sprockets", "gizmos")&lt;/span&gt;</code>
            <para>Este exemplo define a entrada quatro em uma caixa de listagem na planilha um. Se Shapes(2) não representar uma caixa de listagem, este exemplo falhará.</para>
            <code>&lt;span class="label"&gt;Worksheets(1).Shapes(2).ControlFormat.&lt;/span&gt;
&lt;i&gt;List&lt;/i&gt;
&lt;span class="label"&gt;(4) = "gadgets"&lt;/span&gt;</code>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-391">
              <para>This example sets the entries in a list box on worksheet one. If Shapes(2) doesn’t represent a list box, this example fails.</para>
              <code>&lt;span class="label"&gt;Worksheets(1).Shapes(2).ControlFormat.&lt;/span&gt;
&lt;i&gt;List&lt;/i&gt;
&lt;span class="label"&gt;= _     Array("cogs", "widgets", "sprockets", "gizmos")&lt;/span&gt;</code>
              <para>This example sets entry four in a list box on worksheet one. If Shapes(2) doesn’t represent a list box, this example fails.</para>
              <code>&lt;span class="label"&gt;Worksheets(1).Shapes(2).ControlFormat.&lt;/span&gt;
&lt;i&gt;List&lt;/i&gt;
&lt;span class="label"&gt;(4) = "gadgets"&lt;/span&gt;</code>
            </span>
          </span>
        </example>
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Chart Location (Microsoft.Office.Interop.Excel.XlChartLocation Where, object Name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Chart Location([in]valuetype Microsoft.Office.Interop.Excel.XlChartLocation Where, [in]object Name) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.Location(Microsoft.Office.Interop.Excel.XlChartLocation,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Location (Where As XlChartLocation, Optional Name As Object) As Chart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1397)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Chart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Where" Type="Microsoft.Office.Interop.Excel.XlChartLocation" />
        <Parameter Name="Name" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Where">
          <span data-ttu-id="9658f-392">Necessário <see cref="T:Microsoft.Office.Interop.Excel.XlChartLocation" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-392">Required <see cref="T:Microsoft.Office.Interop.Excel.XlChartLocation" />.</span>
          </span>
          <span data-ttu-id="9658f-393">Para onde mover o gráfico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-393">Where to move the chart.</span>
          </span>
        </param>
        <param name="Name">
          <span data-ttu-id="9658f-394">Opcional <b>objeto</b>; necessário se <paramref name="Where" /> for <b>xlLocationAsObject</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-394">Optional <b>Object</b>; required if <paramref name="Where" /> is <b>xlLocationAsObject</b>.</span>
          </span>
          <span data-ttu-id="9658f-395">O nome da planilha onde o gráfico será incorporado se <paramref name="Where" /> é <b>xlLocationAsObject</b> ou o nome da nova planilha se <paramref name="Where" /> é <b>xlLocationAsNewSheet</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-395">The name of the sheet where the chart will be embedded if <paramref name="Where" /> is <b>xlLocationAsObject</b> or the name of the new sheet if <paramref name="Where" /> is <b>xlLocationAsNewSheet</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9658f-396">Move o gráfico para uma nova posição.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-396">Moves the chart to a new location.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MailEnvelope">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoEnvelope MailEnvelope { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.MsoEnvelope MailEnvelope" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.MailEnvelope" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MailEnvelope As MsoEnvelope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoEnvelope ^ MailEnvelope { Microsoft::Office::Core::MsoEnvelope ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2021)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2021)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoEnvelope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9658f-397">Representa um cabeçalho de email para um documento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-397">Represents an e-mail header for a document.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Move">
      <MemberSignature Language="C#" Value="public void Move (object Before, object After);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Move([in]object Before, [in]object After) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.Move(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Move (Optional Before As Object, Optional After As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(637)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Before" Type="System.Object" />
        <Parameter Name="After" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Before">
          <span data-ttu-id="9658f-398">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-398">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9658f-399">A planilha antes da qual a planilha movida será colocada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-399">The sheet before which the moved sheet will be placed.</span>
          </span>
          <span data-ttu-id="9658f-400">Não é possível especificar <paramref name="Before" /> se você especificar <paramref name="After" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-400">You cannot specify <paramref name="Before" /> if you specify <paramref name="After" />.</span>
          </span>
        </param>
        <param name="After">
          <span data-ttu-id="9658f-401">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-401">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9658f-402">A planilha após o qual a planilha movida será colocada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-402">The sheet after which the moved sheet will be placed.</span>
          </span>
          <span data-ttu-id="9658f-403">Não é possível especificar <paramref name="After" /> se você especificar <paramref name="Before" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-403">You cannot specify <paramref name="After" /> if you specify <paramref name="Before" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9658f-404">Move a planilha para outro lugar na pasta de trabalho.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-404">Moves the sheet to another location in the workbook.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="9658f-405">
            <para>Se você não especificar um <paramref name="Before" /> ou <paramref name="After" />, o Microsoft Excel criará uma nova pasta de trabalho contendo a planilha movida.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-405">
              <para>If you don't specify either <paramref name="Before" /> or <paramref name="After" />, Microsoft Excel creates a new workbook that contains the moved sheet.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9658f-406">Retorna ou define o nome do objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-406">Returns or sets the name of the object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Next">
      <MemberSignature Language="C#" Value="public object Next { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Next" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Next" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Next As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Next { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(502)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(502)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9658f-407">Retorna um <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> object que representa a próxima planilha ou célula.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-407">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> object that represents the next sheet or cell.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OLEObjects">
      <MemberSignature Language="C#" Value="public object OLEObjects (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object OLEObjects([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.OLEObjects(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function OLEObjects (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(799)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="9658f-408">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-408">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9658f-409">O nome ou número do objeto OLE.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-409">The name or number of the OLE object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9658f-410">Retorna um objeto representando um um único objeto OLE (um <see cref="T:Microsoft.Office.Interop.Excel.OLEObject" />) ou uma coleção de todos os objetos OLE (uma <see cref="T:Microsoft.Office.Interop.Excel.OLEObjects" /> conjunto) do gráfico ou planilha.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-410">Returns an object that represents either a single OLE object (an <see cref="T:Microsoft.Office.Interop.Excel.OLEObject" />) or a collection of all OLE objects (an <see cref="T:Microsoft.Office.Interop.Excel.OLEObjects" /> collection) on the chart or sheet.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDoubleClick">
      <MemberSignature Language="C#" Value="public string OnDoubleClick { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnDoubleClick" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.OnDoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Property OnDoubleClick As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnDoubleClick { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(628)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(628)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(628)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9658f-411">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-411">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSheetActivate">
      <MemberSignature Language="C#" Value="public string OnSheetActivate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnSheetActivate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.OnSheetActivate" />
      <MemberSignature Language="VB.NET" Value="Public Property OnSheetActivate As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnSheetActivate { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1031)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1031)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1031)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9658f-412">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-412">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSheetDeactivate">
      <MemberSignature Language="C#" Value="public string OnSheetDeactivate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnSheetDeactivate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.OnSheetDeactivate" />
      <MemberSignature Language="VB.NET" Value="Public Property OnSheetDeactivate As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnSheetDeactivate { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1081)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1081)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1081)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9658f-413">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-413">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OptionButtons">
      <MemberSignature Language="C#" Value="public object OptionButtons (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object OptionButtons([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.OptionButtons(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function OptionButtons (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(826)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="9658f-414">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-414">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ovals">
      <MemberSignature Language="C#" Value="public object Ovals (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Ovals([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.Ovals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Ovals (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(801)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="9658f-415">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-415">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PageSetup">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PageSetup PageSetup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PageSetup PageSetup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.PageSetup" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PageSetup As PageSetup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::PageSetup ^ PageSetup { Microsoft::Office::Interop::Excel::PageSetup ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(998)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(998)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PageSetup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9658f-416">Retorna um <see cref="T:Microsoft.Office.Interop.Excel.PageSetup" /> objeto que contém todas as definições de configuração de página para o objeto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-416">Returns a <see cref="T:Microsoft.Office.Interop.Excel.PageSetup" /> object that contains all the page setup settings for the specified object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9658f-417">Retorna o objeto pai para o objeto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-417">Returns the parent object for the specified object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Paste">
      <MemberSignature Language="C#" Value="public void Paste (object Type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Paste([in]object Type) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.Paste(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Paste (Optional Type As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(211)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type">
          <span data-ttu-id="9658f-418">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-418">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9658f-419">Especifica as informações de gráfico a serem coladas se um gráfico estiver na Área de Transferência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-419">Specifies the chart information to paste if a chart is on the Clipboard.</span>
          </span>
          <span data-ttu-id="9658f-420">Pode ser uma das seguintes opções <see cref="T:Microsoft.Office.Interop.Excel.XlPasteType" /> constantes: <b>xlFormats</b>, <b>xlFormulas</b>ou <b>xlAll</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-420">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlPasteType" /> constants: <b>xlFormats</b>, <b>xlFormulas</b>, or <b>xlAll</b>.</span>
          </span>
          <span data-ttu-id="9658f-421">O valor padrão é <b>xlAll</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-421">The default value is <b>xlAll</b>.</span>
          </span>
          <span data-ttu-id="9658f-422">Se não houver dados que não seja um gráfico da área de transferência, esse argumento não pode ser usado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-422">If there’s data other than a chart on the Clipboard, this argument cannot be used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9658f-423">Cola dados de gráfico da Área de Transferência para o gráfico especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-423">Pastes chart data from the Clipboard into the specified chart.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="9658f-424">
            <para>Esse método transformará a seleção atual.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-424">
              <para>This method changes the current selection.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Perspective">
      <MemberSignature Language="C#" Value="public int Perspective { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Perspective" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Perspective" />
      <MemberSignature Language="VB.NET" Value="Public Property Perspective As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Perspective { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(57)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(57)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(57)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9658f-425">Retorna ou define a perspectiva para o modo de exibição do gráfico 3D.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-425">Returns or sets the perspective for the 3-D chart view.</span>
          </span>
          <span data-ttu-id="9658f-426">Deve estar entre 0 e 100.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-426">Must be between 0 and 100.</span>
          </span>
          <span data-ttu-id="9658f-427">Essa propriedade é ignorada se a <see cref="P:Microsoft.Office.Interop.Excel._Chart.RightAngleAxes" /> propriedade é <b>True</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-427">This property is ignored if the <see cref="P:Microsoft.Office.Interop.Excel._Chart.RightAngleAxes" /> property is <b>True</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pictures">
      <MemberSignature Language="C#" Value="public object Pictures (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Pictures([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.Pictures(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Pictures (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(771)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="9658f-428">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-428">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pie3DGroup">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ChartGroup Pie3DGroup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ChartGroup Pie3DGroup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Pie3DGroup" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Pie3DGroup As ChartGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ChartGroup ^ Pie3DGroup { Microsoft::Office::Interop::Excel::ChartGroup ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(21)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(21)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9658f-429">Retorna um <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object que representa o grupo de gráficos de pizza em um gráfico 3D.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-429">Returns a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object that represents the pie chart group on a 3-D chart.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PieGroups">
      <MemberSignature Language="C#" Value="public object PieGroups (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object PieGroups([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.PieGroups(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function PieGroups (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(13)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="9658f-430">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-430">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9658f-431">Especifica o grupo de gráficos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-431">Specifies the chart group.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9658f-432">Em um gráfico 2D, retorna um objeto representando um grupo de um único gráfico de pizza (um <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> objeto) ou uma coleção dos grupos de gráficos de pizza (um <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> conjunto).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-432">On a 2-D chart, returns an object that represents either a single pie chart group (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object) or a collection of the pie chart groups (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> collection).</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotLayout">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PivotLayout PivotLayout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PivotLayout PivotLayout" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.PivotLayout" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PivotLayout As PivotLayout" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::PivotLayout ^ PivotLayout { Microsoft::Office::Interop::Excel::PivotLayout ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1814)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1814)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PivotLayout</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9658f-433">Retorna um <see cref="T:Microsoft.Office.Interop.Excel.PivotLayout" /> objeto que representa a posição dos campos em um relatório de tabela dinâmica e o posicionamento de eixos em um relatório de gráfico dinâmico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-433">Returns a <see cref="T:Microsoft.Office.Interop.Excel.PivotLayout" /> object that represents the placement of fields in a PivotTable report and the placement of axes in a PivotChart report.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="9658f-434">
            <para>Se o gráfico especificado não for um relatório de gráfico dinâmico, o valor dessa propriedade não é <b>nada</b>.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-434">
              <para>If the chart you specify isn’t a PivotChart report, the value of this property is <b>Nothing</b>.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PlotArea">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PlotArea PlotArea { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PlotArea PlotArea" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.PlotArea" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PlotArea As PlotArea" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::PlotArea ^ PlotArea { Microsoft::Office::Interop::Excel::PlotArea ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(85)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(85)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PlotArea</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9658f-435">Retorna um <see cref="T:Microsoft.Office.Interop.Excel.PlotArea" /> object que representa a área de plotagem de um gráfico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-435">Returns a <see cref="T:Microsoft.Office.Interop.Excel.PlotArea" /> object that represents the plot area of a chart.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PlotBy">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlRowCol PlotBy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlRowCol PlotBy" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.PlotBy" />
      <MemberSignature Language="VB.NET" Value="Public Property PlotBy As XlRowCol" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlRowCol PlotBy { Microsoft::Office::Interop::Excel::XlRowCol get(); void set(Microsoft::Office::Interop::Excel::XlRowCol value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(202)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(202)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(202)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlRowCol</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9658f-436">Retorna ou define a maneira como as linhas ou colunas são usadas como série de dados no gráfico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-436">Returns or sets the way columns or rows are used as data series on the chart.</span>
          </span>
          <span data-ttu-id="9658f-437">Pode ser uma das seguintes opções <see cref="T:Microsoft.Office.Interop.Excel.XlRowCol" /> constantes: <b>xlColumns</b> ou <b>xlRows</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-437">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlRowCol" /> constants: <b>xlColumns</b> or <b>xlRows</b>.</span>
          </span>
          <span data-ttu-id="9658f-438">Para relatórios de gráfico dinâmico, essa propriedade é somente leitura e sempre retorna <b>xlColumns</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-438">For PivotChart reports, this property is read-only and always returns <b>xlColumns</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PlotVisibleOnly">
      <MemberSignature Language="C#" Value="public bool PlotVisibleOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PlotVisibleOnly" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.PlotVisibleOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property PlotVisibleOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PlotVisibleOnly { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(92)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(92)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(92)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9658f-439">
            <b>True</b> se somente as células visíveis são plotadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-439">
              <b>True</b> if only visible cells are plotted.</span>
          </span>
          <span data-ttu-id="9658f-440">
            <b>False</b> se as células visíveis quanto ocultas são plotadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-440">
              <b>False</b> if both visible and hidden cells are plotted.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Previous">
      <MemberSignature Language="C#" Value="public object Previous { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Previous" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Previous" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Previous As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Previous { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(503)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(503)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9658f-441">Retorna um <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> object que representa a célula ou planilha anterior.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-441">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> object that represents the previous sheet or cell.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintedCommentPages">
      <MemberSignature Language="C#" Value="public int PrintedCommentPages { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PrintedCommentPages" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.PrintedCommentPages" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PrintedCommentPages As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PrintedCommentPages { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2857)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2857)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9658f-442">Obtém o número de páginas de comentário que será impresso para o gráfico atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-442">Gets the number of comment pages that will be printed for the current chart.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9658f-443">O número de páginas de comentário que será impresso para o gráfico atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-443">The number of comment pages that will be printed for the current chart.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="9658f-444">
            <para>Somente leitura.</para>
            <para>Porque gráficos e planilhas de gráfico não suportam comentários, o <see cref="P:Microsoft.Office.Interop.Excel._Chart.PrintedCommentPages" /> propriedade do <see cref="T:Microsoft.Office.Interop.Excel._Chart" /> objeto sempre retornará zero.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-444">
              <para>Read-only.</para>
              <para>Because charts and chart sheets do not support comments, the <see cref="P:Microsoft.Office.Interop.Excel._Chart.PrintedCommentPages" /> property of the <see cref="T:Microsoft.Office.Interop.Excel._Chart" /> object will always return zero.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintOut">
      <MemberSignature Language="C#" Value="public void PrintOut (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate, object PrToFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintOut([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate, [in]object PrToFileName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrintOut (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object, Optional PrToFileName As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1772)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(8)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
        <Parameter Name="PrToFileName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">
          <span data-ttu-id="9658f-445">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-445">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9658f-446">O número de página pela qual começar a impressão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-446">The number of the page at which to start printing.</span>
          </span>
          <span data-ttu-id="9658f-447">Se esse argumento for omitido, a impressão começará no início.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-447">If this argument is omitted, printing starts at the beginning.</span>
          </span>
        </param>
        <param name="To">
          <span data-ttu-id="9658f-448">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-448">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9658f-449">O número da última página a ser impresso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-449">The number of the last page to print.</span>
          </span>
          <span data-ttu-id="9658f-450">Se esse argumento for omitido, a impressão termina com a última página.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-450">If this argument is omitted, printing ends with the last page.</span>
          </span>
        </param>
        <param name="Copies">
          <span data-ttu-id="9658f-451">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-451">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9658f-452">O número de cópias que serão impressas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-452">The number of copies to print.</span>
          </span>
          <span data-ttu-id="9658f-453">Se esse argumento for omitido, será impressa uma cópia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-453">If this argument is omitted, one copy is printed.</span>
          </span>
        </param>
        <param name="Preview">
          <span data-ttu-id="9658f-454">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-454">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9658f-455">
            <b>True</b> para que o Microsoft Excel invocar a visualização de impressão antes de imprimir o objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-455">
              <b>True</b> to have Microsoft Excel invoke print preview before printing the object.</span>
          </span>
          <span data-ttu-id="9658f-456">
            <b>False</b> (ou omitido) para imprimir o objeto imediatamente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-456">
              <b>False</b> (or omitted) to print the object immediately.</span>
          </span>
        </param>
        <param name="ActivePrinter">
          <span data-ttu-id="9658f-457">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-457">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9658f-458">Define o nome da impressora ativa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-458">Sets the name of the active printer.</span>
          </span>
        </param>
        <param name="PrintToFile">
          <span data-ttu-id="9658f-459">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-459">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9658f-460">
            <b>True</b> para imprimir em um arquivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-460">
              <b>True</b> to print to a file.</span>
          </span>
          <span data-ttu-id="9658f-461">Se <paramref name="PrToFileName" /> não for especificado, o Microsoft Excel solicita que o usuário insira o nome do arquivo de saída.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-461">If <paramref name="PrToFileName" /> is not specified, Microsoft Excel prompts the user to enter the name of the output file.</span>
          </span>
        </param>
        <param name="Collate">
          <span data-ttu-id="9658f-462">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-462">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9658f-463">
            <b>True</b> para agrupar várias cópias.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-463">
              <b>True</b> to collate multiple copies.</span>
          </span>
        </param>
        <param name="PrToFileName">
          <span data-ttu-id="9658f-464">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-464">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9658f-465">Se <paramref name="PrintToFile" /> estiver definida como <b>True</b>, este argumento especificará o nome do arquivo que você deseja imprimir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-465">If <paramref name="PrintToFile" /> is set to <b>True</b>, this argument specifies the name of the file you want to print to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9658f-466">Imprime o objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-466">Prints the object.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="9658f-467">
            <para>"Páginas" nas descrições de <paramref name="From" /> e <paramref name="To" /> se refere a páginas impressas — não a páginas gerais na planilha ou pasta de trabalho.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-467">
              <para>"Pages" in the descriptions of <paramref name="From" /> and <paramref name="To" /> refers to printed pages— not overall pages in the sheet or workbook.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintOutEx">
      <MemberSignature Language="C#" Value="public void PrintOutEx (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate, object PrToFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintOutEx([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate, [in]object PrToFileName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.PrintOutEx(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrintOutEx (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object, Optional PrToFileName As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2361)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(8)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
        <Parameter Name="PrToFileName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">To be added.</param>
        <param name="To">To be added.</param>
        <param name="Copies">To be added.</param>
        <param name="Preview">To be added.</param>
        <param name="ActivePrinter">To be added.</param>
        <param name="PrintToFile">To be added.</param>
        <param name="Collate">To be added.</param>
        <param name="PrToFileName">To be added.</param>
        <summary>
          <span data-ttu-id="9658f-468">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-468">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintPreview">
      <MemberSignature Language="C#" Value="public void PrintPreview (object EnableChanges);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintPreview([in]object EnableChanges) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.PrintPreview(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrintPreview (Optional EnableChanges As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(281)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="EnableChanges" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="EnableChanges">
          <span data-ttu-id="9658f-469">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-469">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9658f-470">
            <b>True</b> para habilitar as alterações ao gráfico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-470">
              <b>True</b> to enable changes to the chart.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9658f-471">Mostra uma visualização de como o objeto aparecerá quando for impresso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-471">Shows a preview of the object as it would look when printed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Protect">
      <MemberSignature Language="C#" Value="public void Protect (object Password, object DrawingObjects, object Contents, object Scenarios, object UserInterfaceOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Protect([in]object Password, [in]object DrawingObjects, [in]object Contents, [in]object Scenarios, [in]object UserInterfaceOnly) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.Protect(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Protect (Optional Password As Object, Optional DrawingObjects As Object, Optional Contents As Object, Optional Scenarios As Object, Optional UserInterfaceOnly As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2029)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="DrawingObjects" Type="System.Object" />
        <Parameter Name="Contents" Type="System.Object" />
        <Parameter Name="Scenarios" Type="System.Object" />
        <Parameter Name="UserInterfaceOnly" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Password">
          <span data-ttu-id="9658f-472">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-472">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9658f-473">Uma string que especifica uma senha diferencia maiusculas de minúsculas para a planilha ou pasta de trabalho.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-473">A string that specifies a case-sensitive password for the worksheet or workbook.</span>
          </span>
          <span data-ttu-id="9658f-474">Se esse argumento for omitido, você pode unprotect a planilha ou pasta de trabalho sem usar uma senha.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-474">If this argument is omitted, you can unprotect the worksheet or workbook without using a password.</span>
          </span>
          <span data-ttu-id="9658f-475">Caso contrário, você deve especificar a senha para unprotect a planilha ou pasta de trabalho.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-475">Otherwise, you must specify the password to unprotect the worksheet or workbook.</span>
          </span>
          <span data-ttu-id="9658f-476">Se você esquecer a senha, você não pode unprotect a planilha ou pasta de trabalho.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-476">If you forget the password, you cannot unprotect the worksheet or workbook.</span>
          </span>
          <span data-ttu-id="9658f-477">É recomendável manter uma lista de suas senhas e seus respectivos nomes de documentos em um local seguro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-477">It's a good idea to keep a list of your passwords and their corresponding document names in a safe place.</span>
          </span>
        </param>
        <param name="DrawingObjects">
          <span data-ttu-id="9658f-478">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-478">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9658f-479">
            <b>True</b> para proteger as formas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-479">
              <b>True</b> to protect shapes.</span>
          </span>
          <span data-ttu-id="9658f-480">O valor padrão é <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-480">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="Contents">
          <span data-ttu-id="9658f-481">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-481">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9658f-482">
            <b>True</b> para proteger o conteúdo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-482">
              <b>True</b> to protect contents.</span>
          </span>
          <span data-ttu-id="9658f-483">Em um gráfico, isso protege todo o gráfico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-483">For a chart, this protects the entire chart.</span>
          </span>
          <span data-ttu-id="9658f-484">Em uma planilha, isso protege as células bloqueadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-484">For a worksheet, this protects the locked cells.</span>
          </span>
          <span data-ttu-id="9658f-485">O valor padrão é <b>True</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-485">The default value is <b>True</b>.</span>
          </span>
        </param>
        <param name="Scenarios">
          <span data-ttu-id="9658f-486">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-486">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9658f-487">
            <b>True</b> para proteger cenários.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-487">
              <b>True</b> to protect scenarios.</span>
          </span>
          <span data-ttu-id="9658f-488">Este argumento é válido somente para planilhas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-488">This argument is valid only for worksheets.</span>
          </span>
          <span data-ttu-id="9658f-489">O valor padrão é <b>True</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-489">The default value is <b>True</b>.</span>
          </span>
        </param>
        <param name="UserInterfaceOnly">
          <span data-ttu-id="9658f-490">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-490">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9658f-491">
            <b>True</b> para proteger a interface de usuário, mas não as macros.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-491">
              <b>True</b> to protect the user interface, but not macros.</span>
          </span>
          <span data-ttu-id="9658f-492">Se esse argumento for omitido, a proteção aplica-se tanto a macros quanto à interface do usuário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-492">If this argument is omitted, protection applies both to macros and to the user interface.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9658f-493">Protege um gráfico contra modificação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-493">Protects a chart so that it cannot be modified.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="9658f-494">Senhas <para>uso forte que combinam maiusculas e minúsculas, números e símbolos. Senhas fracas não misturam esses elementos. Senha forte: Y6dh! et5. Senha fraca: House27. Use uma senha forte que você possa lembrar para que você não tenha anotá-la.</para><para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-494">
              <para>Use strong passwords that combine upper- and lowercase letters, numbers, and symbols. Weak passwords don't mix these elements. Strong password: Y6dh!et5. Weak password: House27. Use a strong password that you can remember so that you don't have to write it down.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectContents">
      <MemberSignature Language="C#" Value="public bool ProtectContents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectContents" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.ProtectContents" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProtectContents As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProtectContents { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(292)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(292)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9658f-495">
            <b>True</b> se o conteúdo da planilha estiver protegido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-495">
              <b>True</b> if the contents of the sheet are protected.</span>
          </span>
          <span data-ttu-id="9658f-496">Isso protege todo o gráfico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-496">This protects the entire chart.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectData">
      <MemberSignature Language="C#" Value="public bool ProtectData { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.ProtectData" />
      <MemberSignature Language="VB.NET" Value="Public Property ProtectData As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProtectData { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1406)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1406)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1406)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9658f-497">
            <b>True</b> se as fórmulas de série não podem ser modificadas pelo usuário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-497">
              <b>True</b> if series formulas cannot be modified by the user.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectDrawingObjects">
      <MemberSignature Language="C#" Value="public bool ProtectDrawingObjects { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectDrawingObjects" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.ProtectDrawingObjects" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProtectDrawingObjects As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProtectDrawingObjects { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(293)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(293)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9658f-498">
            <b>True</b> se as formas estão protegidas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-498">
              <b>True</b> if shapes are protected.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectFormatting">
      <MemberSignature Language="C#" Value="public bool ProtectFormatting { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectFormatting" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.ProtectFormatting" />
      <MemberSignature Language="VB.NET" Value="Public Property ProtectFormatting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProtectFormatting { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1405)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1405)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1405)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9658f-499">
            <b>True</b> se a formatação do gráfico não pode ser modificada pelo usuário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-499">
              <b>True</b> if chart formatting cannot be modified by the user.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="9658f-500">
            <para>Quando essa propriedade é <b>True</b>, o comando objeto no menu Formatar está desativado e elementos do gráfico não podem ser adicionados, movidos, redimensionados ou excluídos.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-500">
              <para>When this property is <b>True</b>, the Object command on the Format menu is disabled and chart elements cannot be added, moved, resized, or deleted.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectGoalSeek">
      <MemberSignature Language="C#" Value="public bool ProtectGoalSeek { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectGoalSeek" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.ProtectGoalSeek" />
      <MemberSignature Language="VB.NET" Value="Public Property ProtectGoalSeek As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProtectGoalSeek { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1407)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1407)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1407)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9658f-501">
            <b>True</b> se o usuário não pode modificar os dados do gráfico pontos com ações do mouse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-501">
              <b>True</b> if the user cannot modify chart data points with mouse actions.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectionMode">
      <MemberSignature Language="C#" Value="public bool ProtectionMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectionMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.ProtectionMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProtectionMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProtectionMode { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1159)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1159)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9658f-502">
            <b>True</b> se a proteção somente da interface do usuário é ativada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-502">
              <b>True</b> if user-interface-only protection is turned on.</span>
          </span>
          <span data-ttu-id="9658f-503">Para ativar a proteção da interface de usuário, use o <see cref="M:Microsoft.Office.Interop.Excel._Chart.Protect(System.Object,System.Object,System.Object,System.Object,System.Object)" /> método com o <paramref name="UserInterfaceOnly" /> argumento definido como <b>True</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-503">To turn on user interface protection, use the <see cref="M:Microsoft.Office.Interop.Excel._Chart.Protect(System.Object,System.Object,System.Object,System.Object,System.Object)" /> method with the <paramref name="UserInterfaceOnly" /> argument set to <b>True</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectSelection">
      <MemberSignature Language="C#" Value="public bool ProtectSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectSelection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.ProtectSelection" />
      <MemberSignature Language="VB.NET" Value="Public Property ProtectSelection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProtectSelection { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1408)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1408)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1408)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9658f-504">
            <b>True</b> se os elementos do gráfico não podem ser selecionados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-504">
              <b>True</b> if chart elements cannot be selected.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="9658f-505">
            <para>Quando essa propriedade for <b>True</b>, as formas não podem ser adicionadas ao gráfico e os eventos Click e DoubleClick para elementos de gráfico não ocorrem.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-505">
              <para>When this property is <b>True</b>, shapes cannot be added to the chart, and the Click and DoubleClick events for chart elements don’t occur.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RadarGroups">
      <MemberSignature Language="C#" Value="public object RadarGroups (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object RadarGroups([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.RadarGroups(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function RadarGroups (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(15)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="9658f-506">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-506">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9658f-507">Especifica o grupo de gráficos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-507">Specifies the chart group.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9658f-508">Em um gráfico 2D, retorna um objeto representando um um grupo de gráficos de radar único (um <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> objeto) ou uma coleção dos grupos de gráficos de radar (um <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> conjunto).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-508">On a 2-D chart, returns an object that represents either a single radar chart group (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object) or a collection of the radar chart groups (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> collection).</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rectangles">
      <MemberSignature Language="C#" Value="public object Rectangles (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Rectangles([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.Rectangles(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Rectangles (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(774)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="9658f-509">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-509">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Refresh() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.Refresh" />
      <MemberSignature Language="VB.NET" Value="Public Sub Refresh ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Refresh();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1417)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9658f-510">Atualiza o cache da <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> ou <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-510">Updates the cache of the <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> or <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RightAngleAxes">
      <MemberSignature Language="C#" Value="public object RightAngleAxes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object RightAngleAxes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.RightAngleAxes" />
      <MemberSignature Language="VB.NET" Value="Public Property RightAngleAxes As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ RightAngleAxes { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(58)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(58)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(58)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9658f-511">
            <b>True</b> se os eixos do gráfico estiverem em reto, independentemente de rotação de gráfico ou a elevação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-511">
              <b>True</b> if the chart axes are at right angles, independent of chart rotation or elevation.</span>
          </span>
          <span data-ttu-id="9658f-512">Aplica a gráficos de barras, colunas e linhas somente para 3D.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-512">Applies only to 3-D line, column, and bar charts.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="9658f-513">
            <para>Se essa propriedade for <b>True</b>, o <see cref="P:Microsoft.Office.Interop.Excel._Chart.Perspective" /> propriedade será ignorada.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-513">
              <para>If this property is <b>True</b>, the <see cref="P:Microsoft.Office.Interop.Excel._Chart.Perspective" /> property is ignored.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rotation">
      <MemberSignature Language="C#" Value="public object Rotation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Rotation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Rotation" />
      <MemberSignature Language="VB.NET" Value="Public Property Rotation As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Rotation { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(59)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(59)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(59)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9658f-514">Retorna ou define a rotação da exibição do gráfico 3D (a rotação da área de plotagem ao redor do eixo z em graus).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-514">Returns or sets the rotation of the 3-D chart view (the rotation of the plot area around the z-axis in degrees).</span>
          </span>
          <span data-ttu-id="9658f-515">O valor dessa propriedade deve ser de 0 a 360, exceto para gráficos de barras 3D, onde o valor deve estar entre 0 e 44.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-515">The value of this property must be from 0 to 360, except for 3-D bar charts, where the value must be from 0 to 44.</span>
          </span>
          <span data-ttu-id="9658f-516">O valor padrão é 20.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-516">The default value is 20.</span>
          </span>
          <span data-ttu-id="9658f-517">Aplica-se somente a gráficos 3D.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-517">Applies only to 3-D charts.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveAs">
      <MemberSignature Language="C#" Value="public void SaveAs (string Filename, object FileFormat, object Password, object WriteResPassword, object ReadOnlyRecommended, object CreateBackup, object AddToMru, object TextCodepage, object TextVisualLayout, object Local);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveAs([in]string Filename, [in]object FileFormat, [in]object Password, [in]object WriteResPassword, [in]object ReadOnlyRecommended, [in]object CreateBackup, [in]object AddToMru, [in]object TextCodepage, [in]object TextVisualLayout, [in]object Local) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.SaveAs(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveAs (Filename As String, Optional FileFormat As Object, Optional Password As Object, Optional WriteResPassword As Object, Optional ReadOnlyRecommended As Object, Optional CreateBackup As Object, Optional AddToMru As Object, Optional TextCodepage As Object, Optional TextVisualLayout As Object, Optional Local As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1925)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="FileFormat" Type="System.Object" />
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="WriteResPassword" Type="System.Object" />
        <Parameter Name="ReadOnlyRecommended" Type="System.Object" />
        <Parameter Name="CreateBackup" Type="System.Object" />
        <Parameter Name="AddToMru" Type="System.Object" />
        <Parameter Name="TextCodepage" Type="System.Object" />
        <Parameter Name="TextVisualLayout" Type="System.Object" />
        <Parameter Name="Local" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="9658f-518">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-518">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9658f-519">Uma string que indica o nome do arquivo a ser salvo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-519">A string that indicates the name of the file to be saved.</span>
          </span>
          <span data-ttu-id="9658f-520">Você pode incluir um caminho completo. Se não fizer isso, o Microsoft Excel salva o arquivo na pasta atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-520">You can include a full path; if you don't, Microsoft Excel saves the file in the current folder.</span>
          </span>
        </param>
        <param name="FileFormat">
          <span data-ttu-id="9658f-521">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-521">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9658f-522">O formato de arquivo a ser usado ao salvar o arquivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-522">The file format to use when you save the file.</span>
          </span>
          <span data-ttu-id="9658f-523">Para obter uma lista de escolhas válidas, consulte o <see cref="P:Microsoft.Office.Interop.Excel._Workbook.FileFormat" /> propriedade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-523">For a list of valid choices, see the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.FileFormat" /> property.</span>
          </span>
          <span data-ttu-id="9658f-524">Para um arquivo existente, o formato padrão é o último formato de arquivo especificado; para um novo arquivo, o padrão é o formato da versão do Excel que está sendo usado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-524">For an existing file, the default format is the last file format specified; for a new file, the default is the format of the version of Excel being used.</span>
          </span>
        </param>
        <param name="Password">
          <span data-ttu-id="9658f-525">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-525">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9658f-526">Uma cadeia de caracteres que diferencia maiúsculas de minúsculas (até 15 caracteres) que indica a senha de proteção a ser dada ao arquivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-526">A case-sensitive string (no more than 15 characters) that indicates the protection password to be given to the file.</span>
          </span>
        </param>
        <param name="WriteResPassword">
          <span data-ttu-id="9658f-527">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-527">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9658f-528">Uma string que indica a senha de reserva de gravação para esse arquivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-528">A string that indicates the write-reservation password for this file.</span>
          </span>
          <span data-ttu-id="9658f-529">Se um arquivo for salvo com a senha e a senha não for fornecida quando o arquivo é aberto, o arquivo é aberto como somente leitura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-529">If a file is saved with the password and the password isn't supplied when the file is opened, the file is opened as read-only.</span>
          </span>
        </param>
        <param name="ReadOnlyRecommended">
          <span data-ttu-id="9658f-530">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-530">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9658f-531">
            <b>True</b> para exibir uma mensagem quando o arquivo for aberto, recomendando que o arquivo seja aberto como somente leitura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-531">
              <b>True</b> to display a message when the file is opened, recommending that the file be opened as read-only.</span>
          </span>
        </param>
        <param name="CreateBackup">
          <span data-ttu-id="9658f-532">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-532">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9658f-533">
            <b>True</b> para criar um arquivo de backup.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-533">
              <b>True</b> to create a backup file.</span>
          </span>
        </param>
        <param name="AddToMru">
          <span data-ttu-id="9658f-534">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-534">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9658f-535">
            <b>True</b> para adicionar essa pasta de trabalho à lista de arquivos recentemente usados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-535">
              <b>True</b> to add this workbook to the list of recently used files.</span>
          </span>
          <span data-ttu-id="9658f-536">O valor padrão é <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-536">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="TextCodepage">
          <span data-ttu-id="9658f-537">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-537">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9658f-538">Não usado no Microsoft Excel em inglês (EUA).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-538">Not used in U.S. English Microsoft Excel.</span>
          </span>
        </param>
        <param name="TextVisualLayout">
          <span data-ttu-id="9658f-539">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-539">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9658f-540">Não usado no Microsoft Excel em inglês (EUA).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-540">Not used in U.S. English Microsoft Excel.</span>
          </span>
        </param>
        <param name="Local">
          <span data-ttu-id="9658f-541">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-541">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9658f-542">
            <b>True</b> salva os arquivos no idioma do Microsoft Excel (incluindo as configurações do painel de controle).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-542">
              <b>True</b> saves files against the language of Microsoft Excel (including control panel settings).</span>
          </span>
          <span data-ttu-id="9658f-543">
            <b>False</b> (padrão) salva os arquivos no idioma do Visual Basic for Applications (que normalmente é inglês (EUA), a menos que o projeto VBA em que <b>Workbooks</b> é executado a partir é um projeto VBA XL5/95 antigo e internacionalizado).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-543">
              <b>False</b> (default) saves files against the language of Visual Basic for Applications (which is typically U.S. English unless the VBA project where <b>Workbooks.Open</b> is run from is an old internationalized XL5/95 VBA project).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9658f-544">Salva alterações feitas no gráfico ou na planilha em um arquivo diferente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-544">Saves changes to the chart or worksheet in a different file.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveChartTemplate">
      <MemberSignature Language="C#" Value="public void SaveChartTemplate (string Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveChartTemplate([in]string Filename) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.SaveChartTemplate(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveChartTemplate (Filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveChartTemplate(System::String ^ Filename);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2508)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="9658f-545">O nome do modelo de gráfico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-545">The name of the chart template.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9658f-546">Salva um modelo de gráfico personalizado na lista de modelos de gráficos disponíveis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-546">Saves a custom chart template to the list of available chart templates.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="9658f-547">
            <para>Por padrão, esse método salva o gráfico ativo para o diretório de modelo de gráfico do usuário.  Se um caminho UNC ou URL for especificado, o gráfico serão salvas no local especificado em vez disso. </para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-547">
              <para>By default, this method saves the active chart to the user's chart template directory.  If a UNC or URL is specified, the chart will be saved to the specified location instead. </para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scripts">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.Scripts Scripts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.Scripts Scripts" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Scripts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Scripts As Scripts" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::Scripts ^ Scripts { Microsoft::Office::Core::Scripts ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1816)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1816)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.Scripts</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9658f-548">Retorna o <see cref="T:Microsoft.Office.Core.Scripts" /> coleção que contém <see cref="T:Microsoft.Office.Core.Script" /> objetos que representam blocos de script ou código no documento especificado quando ele for salvo como uma página da Web.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-548">Returns the <see cref="T:Microsoft.Office.Core.Scripts" /> collection, which contains <see cref="T:Microsoft.Office.Core.Script" /> objects representing blocks of script or code in the specified document when it’s saved as a Web page.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollBars">
      <MemberSignature Language="C#" Value="public object ScrollBars (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ScrollBars([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.ScrollBars(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScrollBars (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(830)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="9658f-549">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-549">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select (object Replace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select([in]object Replace) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.Select(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select (Optional Replace As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(235)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Replace" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Replace">
          <span data-ttu-id="9658f-550">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-550">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9658f-551">Para substituir o objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-551">The object to replace.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9658f-552">Seleciona o objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-552">Selects the object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SeriesCollection">
      <MemberSignature Language="C#" Value="public object SeriesCollection (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object SeriesCollection([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.SeriesCollection(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function SeriesCollection (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(68)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="9658f-553">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-553">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9658f-554">O nome ou número da série.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-554">The name or number of the series.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9658f-555">Retorna um object que representa uma única série (um <see cref="T:Microsoft.Office.Interop.Excel.Series" /> objeto) ou uma coleção de todas as séries (uma <see cref="T:Microsoft.Office.Interop.Excel.SeriesCollection" /> coleção) no gráfico ou grupo de gráficos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-555">Returns an object that represents either a single series (a <see cref="T:Microsoft.Office.Interop.Excel.Series" /> object) or a collection of all the series (a <see cref="T:Microsoft.Office.Interop.Excel.SeriesCollection" /> collection) in the chart or chart group.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SeriesNameLevel">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlSeriesNameLevel SeriesNameLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlSeriesNameLevel SeriesNameLevel" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.SeriesNameLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property SeriesNameLevel As XlSeriesNameLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlSeriesNameLevel SeriesNameLevel { Microsoft::Office::Interop::Excel::XlSeriesNameLevel get(); void set(Microsoft::Office::Interop::Excel::XlSeriesNameLevel value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3049)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3049)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(3049)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlSeriesNameLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9658f-556">Retorna um <see cref="T:Microsoft.Office.Interop.Excel.XlSeriesNameLevel" /> constante referindo-se ao nível de onde os nomes das sequências estão sendo originados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-556">Returns an <see cref="T:Microsoft.Office.Interop.Excel.XlSeriesNameLevel" /> constant referring to the level of where the series names are being sourced from.</span>
          </span>
          <span data-ttu-id="9658f-557">
            <b>Inteiro</b> (<b>int</b> em c#) Leitura/gravação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-557">
              <b>Integer</b> (<b>int</b> in C#) Read/Write.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBackgroundPicture">
      <MemberSignature Language="C#" Value="public void SetBackgroundPicture (string Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetBackgroundPicture([in]string Filename) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.SetBackgroundPicture(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetBackgroundPicture (Filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetBackgroundPicture(System::String ^ Filename);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1188)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="9658f-558">
            <b>String</b> necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-558">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="9658f-559">O nome do arquivo gráfico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-559">The name of the graphic file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9658f-560">Define o gráfico de plano de fundo para um gráfico ou planilha.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-560">Sets the background graphic for a worksheet or chart.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDefaultChart">
      <MemberSignature Language="C#" Value="public void SetDefaultChart (object Name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDefaultChart([in]object Name) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.SetDefaultChart(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDefaultChart (Name As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetDefaultChart(System::Object ^ Name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(219)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name">
          <span data-ttu-id="9658f-561">Especifica o nome do modelo de gráfico padrão que será usado ao criar novos gráficos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-561">Specifies the name of the default chart template that will be used when creating new charts.</span>
          </span>
          <span data-ttu-id="9658f-562">Esse nome pode ser uma cadeia de caracteres nomeando um gráfico na Galeria de um modelo definido pelo usuário ou pode ser uma constante especial <see cref="F:Microsoft.Office.Interop.Excel.XlChartGallery.xlBuiltIn" /> para especificar um modelo de gráfico interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-562">This name can be a string naming a chart in the gallery for a user-defined template or it can be a special constant <see cref="F:Microsoft.Office.Interop.Excel.XlChartGallery.xlBuiltIn" /> to specify a built-in chart template.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9658f-563">Especifica o nome do modelo de gráfico que o Microsoft Excel usa ao criar novos gráficos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-563">Specifies the name of the  chart template that Microsoft Excel uses when creating new charts.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetElement">
      <MemberSignature Language="C#" Value="public void SetElement (Microsoft.Office.Core.MsoChartElementType Element);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetElement([in]valuetype Microsoft.Office.Core.MsoChartElementType Element) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.SetElement(Microsoft.Office.Core.MsoChartElementType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetElement (Element As MsoChartElementType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetElement(Microsoft::Office::Core::MsoChartElementType Element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2502)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Element" Type="Microsoft.Office.Core.MsoChartElementType" />
      </Parameters>
      <Docs>
        <param name="Element">
          <span data-ttu-id="9658f-564">Especifica o tipo de elemento do gráfico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-564">Specifies the chart element type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9658f-565">Conjuntos de elementos em um gráfico do gráfico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-565">Sets chart elements on a chart.</span>
          </span>
          <span data-ttu-id="9658f-566">Leitura/gravação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-566">Read/write.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="9658f-567">
            <para>Para gráficos, os seguintes comandos na guia Layout correspondem ao <see cref="M:Microsoft.Office.Interop.Excel._Chart.SetElement(Microsoft.Office.Core.MsoChartElementType)" /> método:</para>
            <list type="bullet">
              <item>
                <description>tudo no grupo Labels.</description>
              </item>
              <item>
                <description>Tudo no grupo Axes.</description>
              </item>
              <item>
                <description>Tudo no grupo Analysis.</description>
              </item>
              <item>
                <description>Botões PlotArea, Chart Wall e base do gráfico.</description>
              </item>
            </list>
            <para></para>
            <para>
              <b>MsoChartElementType</b> é uma enumeração de constantes que se referem a todos os comandos acima.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-567">
              <para>For charts, the following commands in the Layout tab correspond to the <see cref="M:Microsoft.Office.Interop.Excel._Chart.SetElement(Microsoft.Office.Core.MsoChartElementType)" /> method:</para>
              <list type="bullet">
                <item>
                  <description>Everything in the Labels group.</description>
                </item>
                <item>
                  <description>Everything in the Axes group.</description>
                </item>
                <item>
                  <description>Everything in the Analysis group.</description>
                </item>
                <item>
                  <description>PlotArea, Chart Wall, and Chart Floor buttons.</description>
                </item>
              </list>
              <para></para>
              <para>
                <b>MsoChartElementType</b> is an enumeration of constants that refer to all of the above commands.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSourceData">
      <MemberSignature Language="C#" Value="public void SetSourceData (Microsoft.Office.Interop.Excel.Range Source, object PlotBy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetSourceData([in]class Microsoft.Office.Interop.Excel.Range Source, [in]object PlotBy) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.SetSourceData(Microsoft.Office.Interop.Excel.Range,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSourceData (Source As Range, Optional PlotBy As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1413)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Source" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="PlotBy" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Source">
          <span data-ttu-id="9658f-568">Necessário <see cref="T:Microsoft.Office.Interop.Excel.Range" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-568">Required <see cref="T:Microsoft.Office.Interop.Excel.Range" />.</span>
          </span>
          <span data-ttu-id="9658f-569">O intervalo que contém os dados de origem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-569">The range that contains the source data.</span>
          </span>
        </param>
        <param name="PlotBy">
          <span data-ttu-id="9658f-570">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-570">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9658f-571">Especifica a maneira como os dados deve ser plotados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-571">Specifies the way the data is to be plotted.</span>
          </span>
          <span data-ttu-id="9658f-572">Pode ser um dos seguintes <see cref="T:Microsoft.Office.Interop.Excel.XlRowCol" /> constantes: <b>xlColumns</b> ou <b>xlRows</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-572">Can be either of the following <see cref="T:Microsoft.Office.Interop.Excel.XlRowCol" /> constants: <b>xlColumns</b> or <b>xlRows</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9658f-573">Define o intervalo de dados de origem para o gráfico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-573">Sets the source data range for the chart.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Shapes">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shapes Shapes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Shapes Shapes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Shapes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Shapes As Shapes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Shapes ^ Shapes { Microsoft::Office::Interop::Excel::Shapes ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1377)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1377)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shapes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9658f-574">Retorna um <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> object que representa todas as formas na planilha de gráfico ou planilha.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-574">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> object that represents all the shapes on the worksheet or chart sheet.</span>
          </span>
          <span data-ttu-id="9658f-575">Somente leitura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-575">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowAllFieldButtons">
      <MemberSignature Language="C#" Value="public bool ShowAllFieldButtons { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowAllFieldButtons" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.ShowAllFieldButtons" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowAllFieldButtons As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowAllFieldButtons { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2864)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2864)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2864)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9658f-576">Obtém ou define se deseja exibir todos os botões de campos em um gráfico dinâmico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-576">Gets or sets whether to display all field buttons on a PivotChart.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9658f-577">
            <b>true</b> se todos os botões em um gráfico dinâmico de campo devem ser exibidos; Caso contrário, <b>false</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-577">
              <b>true</b> if all field buttons on a PivotChart should be displayed; otherwise, <b>false</b>.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="9658f-578">
            <para>Leitura/gravação.</para> Conjunto de 
          <para>o <see cref="P:Microsoft.Office.Interop.Excel._Chart.ShowAllFieldButtons" /> propriedade como <b>true</b> para exibir todos os botões de campos na tabela dinâmica especificada. Defina a propriedade como <b>false</b> para ocultar todos os botões de campos.</para><para>o <see cref="P:Microsoft.Office.Interop.Excel._Chart.ShowAllFieldButtons" /> propriedade corresponde ao comando Ocultar tudo na lista suspensa botões de campos da guia analisar, que está disponível quando um gráfico dinâmico é selecionado.</para><para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-578">
              <para>Read/write.</para>
              <para>Set the <see cref="P:Microsoft.Office.Interop.Excel._Chart.ShowAllFieldButtons" /> property to <b>true</b> to display all field buttons on the specified PivotChart. Set the property to <b>false</b> to hide all field buttons.</para>
              <para>The <see cref="P:Microsoft.Office.Interop.Excel._Chart.ShowAllFieldButtons" /> property corresponds to the Hide All command on the Field Buttons drop-down list of the Analyze tab, which is available when a PivotChart is selected.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowAxisFieldButtons">
      <MemberSignature Language="C#" Value="public bool ShowAxisFieldButtons { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowAxisFieldButtons" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.ShowAxisFieldButtons" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowAxisFieldButtons As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowAxisFieldButtons { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2862)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2862)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2862)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9658f-579">Obtém ou define se deseja exibir os botões de campos de eixo em um gráfico dinâmico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-579">Gets or sets whether to display axis field buttons on a PivotChart.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9658f-580">
            <b>true</b> se botões de campo de eixo em um gráfico dinâmico deve ser exibido; Caso contrário, <b>false</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-580">
              <b>true</b> if axis field buttons on a PivotChart should be displayed; otherwise, <b>false</b>.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="9658f-581">
            <para>Leitura/gravação.</para> Conjunto de 
          <para>o <see cref="P:Microsoft.Office.Interop.Excel._Chart.ShowAxisFieldButtons" /> propriedade como <b>true</b> para exibir os botões de campos de eixo na tabela dinâmica especificada. Defina a propriedade como <b>false</b> para ocultar os botões.</para><para>o <see cref="P:Microsoft.Office.Interop.Excel._Chart.ShowAxisFieldButtons" /> propriedade corresponde ao comando Mostrar botões de campos de eixo na lista suspensa botões de campos da guia analisar, que está disponível quando um gráfico dinâmico é selecionado.</para><para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-581">
              <para>Read/write.</para>
              <para>Set the <see cref="P:Microsoft.Office.Interop.Excel._Chart.ShowAxisFieldButtons" /> property to <b>true</b> to display axis field buttons on the specified PivotChart. Set the property to <b>false</b> to hide the buttons.</para>
              <para>The <see cref="P:Microsoft.Office.Interop.Excel._Chart.ShowAxisFieldButtons" /> property corresponds to the Show Axis Field Buttons command on the Field Buttons drop-down list of the Analyze tab, which is available when a PivotChart is selected.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowDataLabelsOverMaximum">
      <MemberSignature Language="C#" Value="public bool ShowDataLabelsOverMaximum { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowDataLabelsOverMaximum" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.ShowDataLabelsOverMaximum" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowDataLabelsOverMaximum As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowDataLabelsOverMaximum { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2504)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2504)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2504)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9658f-582">Retorna ou define se deseja mostrar os rótulos de dados quando o valor é maior que o valor máximo no eixo dos valores.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-582">Returns or sets whether to show the data labels when the value is greater than the  maximum value on the value axis.</span>
          </span>
          <span data-ttu-id="9658f-583">Leitura/gravação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-583">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9658f-584">
            <b>Boolean</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-584">
              <b>Boolean</b>
            </span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="9658f-585">
            <para>Se você alterar o eixo dos valores de tal forma que se tornou menor que o tamanho dos pontos de dados, você pode usar essa propriedade para definir se deve mostrar os rótulos de dados. Essa propriedade se aplica somente a gráficos 2D.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-585">
              <para>If you change the value axis in such a way that it became  smaller than the size of the data points, you can use this property to set whether to show the data labels. This property applies to 2-D charts only.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowLegendFieldButtons">
      <MemberSignature Language="C#" Value="public bool ShowLegendFieldButtons { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowLegendFieldButtons" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.ShowLegendFieldButtons" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowLegendFieldButtons As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowLegendFieldButtons { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2861)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2861)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2861)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9658f-586">Obtém ou define se deseja exibir os botões de campos de legenda em um gráfico dinâmico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-586">Gets or sets whether to display legend field buttons on a PivotChart.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9658f-587">
            <b>true</b> se o campo legenda botões em um gráfico dinâmico deve ser exibido; Caso contrário, <b>false</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-587">
              <b>true</b> if legend field buttons on a PivotChart should be displayed; otherwise, <b>false</b>.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="9658f-588">
            <para>Leitura/gravação.</para> Conjunto de 
          <para>o <see cref="P:Microsoft.Office.Interop.Excel._Chart.ShowLegendFieldButtons" /> propriedade como <b>true</b> para exibir os botões de campos de legenda na tabela dinâmica especificada. Defina a propriedade como <b>false</b> para ocultar os botões.</para><para>o <see cref="P:Microsoft.Office.Interop.Excel._Chart.ShowLegendFieldButtons" /> propriedade corresponde ao comando Mostrar botões de campos de legenda na lista suspensa botões de campos da guia analisar, que está disponível quando um gráfico dinâmico é selecionado.</para><para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-588">
              <para>Read/write.</para>
              <para>Set the <see cref="P:Microsoft.Office.Interop.Excel._Chart.ShowLegendFieldButtons" /> property to <b>true</b> to display legend field buttons on the specified PivotChart. Set the property to <b>false</b> to hide the buttons.</para>
              <para>The <see cref="P:Microsoft.Office.Interop.Excel._Chart.ShowLegendFieldButtons" /> property corresponds to the Show Legend Field Buttons command on the Field Buttons drop-down list of the Analyze tab, which is available when a PivotChart is selected.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowReportFilterFieldButtons">
      <MemberSignature Language="C#" Value="public bool ShowReportFilterFieldButtons { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowReportFilterFieldButtons" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.ShowReportFilterFieldButtons" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowReportFilterFieldButtons As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowReportFilterFieldButtons { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2860)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2860)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2860)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9658f-589">Obtém ou define se deseja exibir os botões de campos de filtro de relatório em um gráfico dinâmico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-589">Gets or sets whether to display the report filter field buttons on a PivotChart.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9658f-590">
            <b>true</b> se o campo de filtro de relatório botões em um gráfico dinâmico deve ser exibido; Caso contrário, <b>false</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-590">
              <b>true</b> if the report filter field buttons on a PivotChart should be displayed; otherwise, <b>false</b>.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="9658f-591">
            <para>Leitura/gravação.</para> Conjunto de 
          <para>o <see cref="P:Microsoft.Office.Interop.Excel._Chart.ShowReportFilterFieldButtons" /> propriedade como <b>true</b> para exibir os botões de campo de filtro de relatório na tabela dinâmica especificada. Defina a propriedade como <b>false</b> para ocultar os botões.</para><para>o <see cref="P:Microsoft.Office.Interop.Excel._Chart.ShowReportFilterFieldButtons" /> propriedade corresponde ao comando Mostrar botões de campos de filtro de relatório na lista suspensa botões de campos da guia analisar, que está disponível quando um gráfico dinâmico é selecionado.</para><para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-591">
              <para>Read/write.</para>
              <para>Set the <see cref="P:Microsoft.Office.Interop.Excel._Chart.ShowReportFilterFieldButtons" /> property to <b>true</b> to display the Report Filter Field buttons on the specified PivotChart. Set the property to <b>false</b> to hide the buttons.</para>
              <para>The <see cref="P:Microsoft.Office.Interop.Excel._Chart.ShowReportFilterFieldButtons" /> property corresponds to the Show Report Filter Field Buttons command on the Field Buttons drop-down list of the Analyze tab, which is available when a PivotChart is selected.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowValueFieldButtons">
      <MemberSignature Language="C#" Value="public bool ShowValueFieldButtons { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowValueFieldButtons" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.ShowValueFieldButtons" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowValueFieldButtons As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowValueFieldButtons { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2863)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2863)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2863)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9658f-592">Obtém ou define se deseja exibir os botões de campo de valor em um gráfico dinâmico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-592">Gets or sets whether to display the value field buttons on a PivotChart.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9658f-593">
            <b>true</b> se o campo de valor botões em um gráfico dinâmico deve ser exibido; Caso contrário, <b>false</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-593">
              <b>true</b> if the value field buttons on a PivotChart should be displayed; otherwise, <b>false</b>.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="9658f-594">
            <para>Leitura/gravação.</para> Conjunto de 
          <para>o <see cref="P:Microsoft.Office.Interop.Excel._Chart.ShowValueFieldButtons" /> propriedade como <b>true</b> para exibir os botões de campo de valor na tabela dinâmica especificada. Defina a propriedade como <b>false</b> para ocultar botão.</para><para>o <see cref="P:Microsoft.Office.Interop.Excel._Chart.ShowValueFieldButtons" /> propriedade corresponde ao comando Mostrar botões de campos de valor na lista suspensa botões de campos da guia analisar, que está disponível quando um gráfico dinâmico é selecionado.</para><para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-594">
              <para>Read/write.</para>
              <para>Set the <see cref="P:Microsoft.Office.Interop.Excel._Chart.ShowValueFieldButtons" /> property to <b>true</b> to display the Value Field buttons on the specified PivotChart. Set the property to <b>false</b> to hide the button.</para>
              <para>The <see cref="P:Microsoft.Office.Interop.Excel._Chart.ShowValueFieldButtons" /> property corresponds to the Show Value Field Buttons command on the Field Buttons drop-down list of the Analyze tab, which is available when a PivotChart is selected.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowWindow">
      <MemberSignature Language="C#" Value="public bool ShowWindow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowWindow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.ShowWindow" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowWindow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowWindow { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1399)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1399)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1399)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9658f-595">
            <b>True</b> se o gráfico incorporado é exibido em uma janela separada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-595">
              <b>True</b> if the embedded chart is displayed in a separate window.</span>
          </span>
          <span data-ttu-id="9658f-596">O <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> objeto usado com esta propriedade deve se referir a um gráfico incorporado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-596">The <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> object used with this property must refer to an embedded chart.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SideWall">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Walls SideWall { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Walls SideWall" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.SideWall" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SideWall As Walls" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Walls ^ SideWall { Microsoft::Office::Interop::Excel::Walls ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2505)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2505)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Walls</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9658f-597">Retorna um <see cref="T:Microsoft.Office.Interop.Excel.Walls" /> objeto que permite ao usuário formatar individualmente a parede lateral de um gráfico 3D.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-597">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Walls" /> object that allows the user to individually format the side wall of a 3-D chart.</span>
          </span>
          <span data-ttu-id="9658f-598">Somente leitura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-598">Read-only.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Excel.Walls" />
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SizeWithWindow">
      <MemberSignature Language="C#" Value="public bool SizeWithWindow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SizeWithWindow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.SizeWithWindow" />
      <MemberSignature Language="VB.NET" Value="Public Property SizeWithWindow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SizeWithWindow { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(94)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(94)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(94)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9658f-599">
            <b>True</b> se o Microsoft Excel redimensiona o gráfico para corresponder ao tamanho da janela de folha de gráfico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-599">
              <b>True</b> if Microsoft Excel resizes the chart to match the size of the chart sheet window.</span>
          </span>
          <span data-ttu-id="9658f-600">
            <b>False</b> se o tamanho do gráfico não estiver vinculado ao tamanho da janela.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-600">
              <b>False</b> if the chart size isn't attached to the window size.</span>
          </span>
          <span data-ttu-id="9658f-601">Só se aplica a planilhas de gráfico (não se aplica a gráficos incorporados).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-601">Applies only to chart sheets (doesn't apply to embedded charts).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Spinners">
      <MemberSignature Language="C#" Value="public object Spinners (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Spinners([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.Spinners(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Spinners (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(838)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="9658f-602">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-602">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubType">
      <MemberSignature Language="C#" Value="public int SubType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SubType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.SubType" />
      <MemberSignature Language="VB.NET" Value="Public Property SubType As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SubType { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(109)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(109)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(109)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9658f-603">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-603">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SurfaceGroup">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ChartGroup SurfaceGroup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ChartGroup SurfaceGroup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.SurfaceGroup" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SurfaceGroup As ChartGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ChartGroup ^ SurfaceGroup { Microsoft::Office::Interop::Excel::ChartGroup ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(22)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(22)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9658f-604">Retorna um <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object que representa o grupo de gráficos de superfície de um gráfico 3D.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-604">Returns a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object that represents the surface chart group of a 3-D chart.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tab">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Tab Tab { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Tab Tab" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Tab" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Tab As Tab" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Tab ^ Tab { Microsoft::Office::Interop::Excel::Tab ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1041)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1041)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Tab</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9658f-605">Retorna um <see cref="T:Microsoft.Office.Interop.Excel.Tab" /> objeto para um gráfico ou uma planilha.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-605">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Tab" /> object for a chart or a worksheet.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextBoxes">
      <MemberSignature Language="C#" Value="public object TextBoxes (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object TextBoxes([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.TextBoxes(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function TextBoxes (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(777)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="9658f-606">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-606">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public int Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Type { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9658f-607">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-607">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Unprotect">
      <MemberSignature Language="C#" Value="public void Unprotect (object Password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Unprotect([in]object Password) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.Unprotect(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unprotect (Optional Password As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(285)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Password" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Password">
          <span data-ttu-id="9658f-608">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-608">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9658f-609">Uma string que indica a senha diferencia maiusculas de minúsculas usar para unprotect a planilha ou pasta de trabalho.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-609">A string that denotes the case-sensitive password to use to unprotect the sheet or workbook.</span>
          </span>
          <span data-ttu-id="9658f-610">Se a planilha ou pasta de trabalho não está protegida por senha, esse argumento será ignorado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-610">If the sheet or workbook isn't protected with a password, this argument is ignored.</span>
          </span>
          <span data-ttu-id="9658f-611">Se você omitir esse argumento para uma planilha protegida com uma senha, você será solicitado para a senha.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-611">If you omit this argument for a sheet that's protected with a password, you'll be prompted for the password.</span>
          </span>
          <span data-ttu-id="9658f-612">Se você omitir esse argumento para uma pasta de trabalho for protegida por uma senha, o método falhará.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-612">If you omit this argument for a workbook that's protected with a password, the method fails.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9658f-p229">Remove a proteção de uma planilha ou de uma pasta de trabalho. Esse método não terá efeito caso a planilha ou a pasta de trabalho não esteja protegida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-p229">Removes protection from a sheet or workbook. This method has no effect if the sheet or workbook isn't protected.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="9658f-615">
            <para>Se você esquecer a senha, você não pode ser unprotect a planilha ou pasta de trabalho. É uma boa ideia manter uma lista de suas senhas e seus respectivos nomes de documentos em um local seguro.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-615">
              <para>If you forget the password, you cannot unprotect the sheet or workbook. It's a good idea to keep a list of your passwords and their corresponding document names in a safe place.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlSheetVisibility Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlSheetVisibility Visible" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Property Visible As XlSheetVisibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlSheetVisibility Visible { Microsoft::Office::Interop::Excel::XlSheetVisibility get(); void set(Microsoft::Office::Interop::Excel::XlSheetVisibility value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlSheetVisibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9658f-616">Determina se o objeto está visível.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-616">Determines whether the object is visible.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Walls">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Walls Walls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Walls Walls" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Walls" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Walls As Walls" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Walls ^ Walls { Microsoft::Office::Interop::Excel::Walls ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(86)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(86)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Walls</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9658f-617">Retorna um <see cref="T:Microsoft.Office.Interop.Excel.Walls" /> object que representa as paredes do gráfico 3D.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-617">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Walls" /> object that represents the walls of the 3-D chart.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="9658f-618">
            <para>Essa propriedade não se aplica a gráficos de pizza 3D.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-618">
              <para>This property doesn't apply to 3-D pie charts.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WallsAndGridlines2D">
      <MemberSignature Language="C#" Value="public bool WallsAndGridlines2D { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WallsAndGridlines2D" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.WallsAndGridlines2D" />
      <MemberSignature Language="VB.NET" Value="Public Property WallsAndGridlines2D As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WallsAndGridlines2D { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(210)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(210)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(210)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9658f-619">
            <b>True</b> se as linhas de grade são desenhadas de forma bidimensional em um gráfico 3D.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-619">
              <b>True</b> if gridlines are drawn two-dimensionally on a 3-D chart.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XYGroups">
      <MemberSignature Language="C#" Value="public object XYGroups (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object XYGroups([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.XYGroups(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function XYGroups (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="9658f-620">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-620">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9658f-621">Especifica o grupo de gráficos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-621">Specifies the chart group.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9658f-622">Em um gráfico 2D, retorna um objeto representando um um grupo de gráficos de dispersão único (um <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> objeto) ou uma coleção dos grupos de gráficos de dispersão (um <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> conjunto).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9658f-622">On a 2-D chart, returns an object that represents either a single scatter chart group (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object) or a collection of the scatter chart groups (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> collection).</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>