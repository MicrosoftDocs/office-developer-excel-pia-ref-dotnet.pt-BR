<Type Name="Workbook" FullName="Microsoft.Office.Interop.Excel.Workbook">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="92ffce8b5e62ce88e392a62537bf1cc2d3a58d10" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="07/19/2018" />
    <Meta Name="ms.locfileid" Value="20587350" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface Workbook : Microsoft.Office.Interop.Excel._Workbook, Microsoft.Office.Interop.Excel.WorkbookEvents_Event" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Workbook implements class Microsoft.Office.Interop.Excel._Workbook, class Microsoft.Office.Interop.Excel.WorkbookEvents_Event" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.Workbook" />
  <TypeSignature Language="VB.NET" Value="Public Interface Workbook&#xA;Implements _Workbook, WorkbookEvents_Event" />
  <TypeSignature Language="C++ CLI" Value="public interface class Workbook : Microsoft::Office::Interop::Excel::_Workbook, Microsoft::Office::Interop::Excel::WorkbookEvents_Event" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Office.Interop.Excel._Workbook</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Office.Interop.Excel.WorkbookEvents_Event</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.CoClass(typeof(Microsoft.Office.Interop.Excel.WorkbookClass))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000208DA-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="5de94-101">Representa uma pasta de trabalho do Microsoft Excel.</span>
      <span class="sxs-lookup">
        <span data-stu-id="5de94-101">Represents a Microsoft Excel workbook.</span>
      </span>
    </summary>
    <remarks>
      <span data-ttu-id="5de94-102">
        <para>Esta é uma interface .NET derivada uma co-classe COM exigidos pelo código gerenciado para a interoperabilidade com o objeto COM correspondente. Use esta interface derivada para acessar todos os membros de evento, propriedade e método do objeto COM. Entretanto, se um método ou evento que você deseja usar compartilhar o mesmo nome sob o mesmo objeto de COM, cast à interface principal correspondente para chamar o método e convertido para a interface de eventos mais recente para se conectar ao evento. Consulte este tópico para obter informações sobre o objeto COM. Para obter informações sobre os método e a propriedade membros do objeto COM, consulte <see cref="T:Microsoft.Office.Interop.Excel._Workbook" />.</para>
        <para>o <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> objeto é um membro do <see cref="T:Microsoft.Office.Interop.Excel.Workbooks" /> conjunto. A coleção de <b>pastas de trabalho</b> contém todos os objetos de <b>pasta de trabalho</b> abertas no momento no Microsoft Excel.</para>
        <para>As seguintes propriedades para retornar um objeto de <b>pasta de trabalho</b> são descritas nesta seção:</para>
        <list type="bullet">
          <item>
            <description>
              <see cref="P:Microsoft.Office.Interop.Excel._Application.Workbooks" /> propriedade</description>
          </item>
          <item>
            <description>
              <see cref="P:Microsoft.Office.Interop.Excel._Application.ActiveWorkbook" /> propriedade</description>
          </item>
          <item>
            <description>
              <see cref="P:Microsoft.Office.Interop.Excel._Application.ThisWorkbook" /> propriedade</description>
          </item>
        </list>
        <para>Propriedade Workbooks</para>
        <para>Usar <b>pastas de trabalho</b>(<paramref name="index" />), onde <paramref name="index" /> é o nome da pasta de trabalho ou o número de índice, para retornar um único objeto <b>Workbook</b> .</para>
        <para>o número de índice denota a ordem na qual as pastas de trabalho foram abertas ou criadas. Workbooks(1) é a primeira pasta de trabalho criada e Workbooks(Workbooks.Count) é a última criada. Ativar uma pasta de trabalho não altera seu número de índice. Todas as pastas de trabalho estão incluídas na contagem do índice, mesmo que elas estejam ocultas.</para>
        <para>o <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Name" /> propriedade retorna o nome da pasta de trabalho. Você não pode definir o nome usando essa propriedade; Se você precisar alterar o nome, use o <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" /> método para salvar a pasta de trabalho com um nome diferente.</para>
        <para>Propriedade ActiveWorkbook</para>
        <para>a propriedade <b>ActiveWorkbook</b> retorna a pasta de trabalho ativa no momento.</para>
        <para>Propriedade ThisWorkbook</para> Propriedade 
      <para>o <b>ThisWorkbook</b> retorna a pasta de trabalho onde o código do Visual Basic está sendo executado. Na maioria dos casos, isso é o mesmo que a pasta de trabalho ativa. No entanto, se o código do Visual Basic for parte de um suplemento, a propriedade <b>ThisWorkbook</b> não devolvem a pasta de trabalho ativa. Nesse caso, a pasta de trabalho ativa é a pasta de trabalho chamando o suplemento, portanto, a propriedade <b>ThisWorkbook</b> retorna a pasta de trabalho do suplemento. </para><para>Se você vai ser criando um suplemento de código do Visual Basic, você deve usar a propriedade <b>ThisWorkbook</b> para se qualificar qualquer instrução que deve ser executada na pasta de trabalho que você compila em add-in.</para><para /></span>
      <span class="sxs-lookup">
        <span data-stu-id="5de94-102">
          <para>This is a .NET interface derived from a COM coclass that is required by managed code for interoperability with the corresponding COM object. Use this derived interface to access all method, property, and event members of the COM object. However, if a method or event you want to use shares the same name under the same COM object, cast to the corresponding primary interface to call the method, and cast to the latest events interface to connect to the event. Refer to this topic for information about the COM object. For information about the method and property members of the COM object, see <see cref="T:Microsoft.Office.Interop.Excel._Workbook" />.</para>
          <para>The <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object is a member of the <see cref="T:Microsoft.Office.Interop.Excel.Workbooks" /> collection. The <b>Workbooks</b> collection contains all the <b>Workbook</b> objects currently open in Microsoft Excel.</para>
          <para>The following properties for returning a <b>Workbook</b> object are described in this section:</para>
          <list type="bullet">
            <item>
              <description>
                <see cref="P:Microsoft.Office.Interop.Excel._Application.Workbooks" /> property</description>
            </item>
            <item>
              <description>
                <see cref="P:Microsoft.Office.Interop.Excel._Application.ActiveWorkbook" /> property</description>
            </item>
            <item>
              <description>
                <see cref="P:Microsoft.Office.Interop.Excel._Application.ThisWorkbook" /> property</description>
            </item>
          </list>
          <para>Workbooks Property</para>
          <para>Use <b>Workbooks</b>(<paramref name="index" />), where <paramref name="index" /> is the workbook name or index number, to return a single <b>Workbook</b> object.</para>
          <para>The index number denotes the order in which the workbooks were opened or created. Workbooks(1) is the first workbook created, and Workbooks(Workbooks.Count) is the last one created. Activating a workbook doesn’t change its index number. All workbooks are included in the index count, even if they’re hidden.</para>
          <para>The <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Name" /> property returns the workbook name. You cannot set the name by using this property; if you need to change the name, use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method to save the workbook under a different name.</para>
          <para>ActiveWorkbook Property</para>
          <para>The <b>ActiveWorkbook</b> property returns the workbook that’s currently active.</para>
          <para>ThisWorkbook Property</para>
          <para>The <b>ThisWorkbook</b> property returns the workbook where the Visual Basic code is running. In most cases, this is the same as the active workbook. However, if the Visual Basic code is part of an add-in, the <b>ThisWorkbook</b> property won’t return the active workbook. In this case, the active workbook is the workbook calling the add-in, so the <b>ThisWorkbook</b> property returns the add-in workbook. </para>
          <para>If you’ll be creating an add-in from your Visual Basic code, you should use the <b>ThisWorkbook</b> property to qualify any statement that must be run on the workbook you compile into the add-in.</para>
          <para />
        </span>
      </span>
    </remarks>
  </Docs>
  <Members />
</Type>