<Type Name="Sheets" FullName="Microsoft.Office.Interop.Excel.Sheets">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="db6b3bb11f3b424395c8a07057d1712212b447b0" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="09/24/2018" />
    <Meta Name="ms.locfileid" Value="20581211" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface Sheets : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Sheets implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.Sheets" />
  <TypeSignature Language="VB.NET" Value="Public Interface Sheets&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class Sheets : System::Collections::IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000208D7-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4288)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="631c8-101">Uma coleção de todas as planilhas na pasta de trabalho ativa ou especificada.</span>
      <span class="sxs-lookup">
        <span data-stu-id="631c8-101">A collection of all the sheets in the specified or active workbook.</span>
      </span>
    </summary>
    <remarks>
      <para>
        <span data-ttu-id="631c8-102">A coleção <b>Sheets</b> pode conter <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> ou <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> objetos.</span>
        <span class="sxs-lookup">
          <span data-stu-id="631c8-102">The <b>Sheets</b> collection can contain <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> or <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> objects.</span>
        </span>
        <span data-ttu-id="631c8-103">A coleção <b>Sheets</b> é útil quando você deseja retornar planilhas de qualquer tipo.</span>
        <span class="sxs-lookup">
          <span data-stu-id="631c8-103">The <b>Sheets</b> collection is useful when you want to return sheets of any type.</span>
        </span>
        <span data-ttu-id="631c8-104">Se você precisar trabalhar com planilhas de apenas um tipo, consulte o tópico do objeto para esse tipo de planilha.</span>
        <span class="sxs-lookup">
          <span data-stu-id="631c8-104">If you need to work with sheets of only one type, see the object topic for that sheet type.</span>
        </span>
      </para>
      <para>
        <span data-ttu-id="631c8-105">Use o <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Sheets" /> propriedade para retornar a coleção <b>Sheets</b> .</span>
        <span class="sxs-lookup">
          <span data-stu-id="631c8-105">Use the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Sheets" /> property to return the <b>Sheets</b> collection.</span>
        </span>
      </para>
      <para>
        <span data-ttu-id="631c8-106">Use o <see cref="M:Microsoft.Office.Interop.Excel.Sheets.Add(System.Object,System.Object,System.Object,System.Object)" /> método para criar uma nova planilha e adicioná-lo à coleção.</span>
        <span class="sxs-lookup">
          <span data-stu-id="631c8-106">Use the <see cref="M:Microsoft.Office.Interop.Excel.Sheets.Add(System.Object,System.Object,System.Object,System.Object)" /> method to create a new sheet and add it to the collection.</span>
        </span>
      </para>
      <para>
        <span data-ttu-id="631c8-107">Use <b>folhas</b>(<paramref name="index" />), onde <paramref name="index" /> é o nome da planilha ou o número de índice, para retornar um único <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> ou <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> objeto.</span>
        <span class="sxs-lookup">
          <span data-stu-id="631c8-107">Use <b>Sheets</b>(<paramref name="index" />), where <paramref name="index" /> is the sheet name or index number, to return a single <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> or <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> object.</span>
        </span>
      </para>
      <para>
        <span data-ttu-id="631c8-108">Use <b>folhas</b>(<paramref name="array" />) para especificar mais de uma planilha.</span>
        <span class="sxs-lookup">
          <span data-stu-id="631c8-108">Use <b>Sheets</b>(<paramref name="array" />) to specify more than one sheet.</span>
        </span>
      </para>
      <para></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="_Default">
      <MemberSignature Language="C#" Value="public object this[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object _Default(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Sheets._Default(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property _Default(Index As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::Object ^] { System::Object ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="631c8-109">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631c8-109">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_PrintOut">
      <MemberSignature Language="C#" Value="public void _PrintOut (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _PrintOut([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Sheets._PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _PrintOut (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(905)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(7)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">To be added.</param>
        <param name="To">To be added.</param>
        <param name="Copies">To be added.</param>
        <param name="Preview">To be added.</param>
        <param name="ActivePrinter">To be added.</param>
        <param name="PrintToFile">To be added.</param>
        <param name="Collate">To be added.</param>
        <summary>
          <span data-ttu-id="631c8-110">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631c8-110">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public object Add (object Before, object After, object Count, object Type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Add([in]object Before, [in]object After, [in]object Count, [in]object Type) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Sheets.Add(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (Optional Before As Object, Optional After As Object, Optional Count As Object, Optional Type As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(181)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(4)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Before" Type="System.Object" />
        <Parameter Name="After" Type="System.Object" />
        <Parameter Name="Count" Type="System.Object" />
        <Parameter Name="Type" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Before">
          <span data-ttu-id="631c8-111">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631c8-111">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="631c8-112">Um objeto que especifica a planilha antes da qual a nova planilha será adicionada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631c8-112">An object that specifies the sheet before which the new sheet is added.</span>
          </span>
        </param>
        <param name="After">
          <span data-ttu-id="631c8-113">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631c8-113">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="631c8-114">Um objeto que especifica a planilha depois após a qual a nova planilha será adicionada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631c8-114">An object that specifies the sheet after which the new sheet is added.</span>
          </span>
        </param>
        <param name="Count">
          <span data-ttu-id="631c8-115">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631c8-115">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="631c8-116">O número de folhas a ser adicionado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631c8-116">The number of sheets to be added.</span>
          </span>
          <span data-ttu-id="631c8-117">O valor padrão é um.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631c8-117">The default value is one.</span>
          </span>
        </param>
        <param name="Type">
          <span data-ttu-id="631c8-118">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631c8-118">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="631c8-119">Especifica o tipo de planilha.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631c8-119">Specifies the sheet type.</span>
          </span>
          <span data-ttu-id="631c8-120">Pode ser uma das seguintes opções <see cref="T:Microsoft.Office.Interop.Excel.XlSheetType" /> constantes: <b>xlWorksheet</b>, <b>xlChart</b>, <b>xlExcel4MacroSheet</b>ou <b>xlExcel4IntlMacroSheet</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631c8-120">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlSheetType" /> constants: <b>xlWorksheet</b>, <b>xlChart</b>, <b>xlExcel4MacroSheet</b>, or <b>xlExcel4IntlMacroSheet</b>.</span>
          </span>
          <span data-ttu-id="631c8-121">Se você estiver inserindo uma planilha com base em um modelo existente, especifique o caminho para o modelo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631c8-121">If you are inserting a sheet based on an existing template, specify the path to the template.</span>
          </span>
          <span data-ttu-id="631c8-122">O valor padrão é <b>xlWorksheet</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631c8-122">The default value is <b>xlWorksheet</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="631c8-p106">Cria uma nova planilha, um novo gráfico ou uma nova folha de macro. A nova planilha se torna a planilha ativa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631c8-p106">Creates a new worksheet, chart, or macro sheet. The new worksheet becomes the active sheet.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <span data-ttu-id="631c8-125">Se <paramref name="Before" /> e <paramref name="After" /> são ambos omitidos, a nova planilha será inserido antes da planilha ativa.</span>
            <span class="sxs-lookup">
              <span data-stu-id="631c8-125">If <paramref name="Before" /> and <paramref name="After" /> are both omitted, the new sheet is inserted before the active sheet.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add2">
      <MemberSignature Language="C#" Value="public object Add2 (object Before, object After, object Count, object NewLayout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Add2([in]object Before, [in]object After, [in]object Count, [in]object NewLayout) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Sheets.Add2(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add2 (Optional Before As Object, Optional After As Object, Optional Count As Object, Optional NewLayout As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3054)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Before" Type="System.Object" />
        <Parameter Name="After" Type="System.Object" />
        <Parameter Name="Count" Type="System.Object" />
        <Parameter Name="NewLayout" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Before">To be added.</param>
        <param name="After">To be added.</param>
        <param name="Count">To be added.</param>
        <param name="NewLayout">To be added.</param>
        <summary>
          <span data-ttu-id="631c8-126">Este método só é implementado para o objeto de coleção <b>Charts</b> e produzirá um erro em tempo de execução se usada em <b>planilhas</b> e <b>folhas de</b> objetos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631c8-126">This method is only implemented for the <b>Charts</b> collection object and will produce a run time error if used on the <b>Sheets</b> and <b>Worksheets</b> objects.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Sheets.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="631c8-127">Retorna um <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object que representa o aplicativo Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631c8-127">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span>
          </span>
          <span data-ttu-id="631c8-128">Somente leitura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631c8-128">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public void Copy (object Before, object After);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy([in]object Before, [in]object After) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Sheets.Copy(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Copy (Optional Before As Object, Optional After As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(551)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Before" Type="System.Object" />
        <Parameter Name="After" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Before">
          <span data-ttu-id="631c8-129">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631c8-129">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="631c8-130">A planilha antes da qual a planilha copiada será colocada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631c8-130">The sheet before which the copied sheet will be placed.</span>
          </span>
          <span data-ttu-id="631c8-131">Não é possível especificar <paramref name="Before" /> se você especificar <paramref name="After" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631c8-131">You cannot specify <paramref name="Before" /> if you specify <paramref name="After" />.</span>
          </span>
        </param>
        <param name="After">
          <span data-ttu-id="631c8-132">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631c8-132">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="631c8-133">A planilha após o qual a planilha copiada será colocada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631c8-133">The sheet after which the copied sheet will be placed.</span>
          </span>
          <span data-ttu-id="631c8-134">Não é possível especificar <paramref name="After" /> se você especificar <paramref name="Before" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631c8-134">You cannot specify <paramref name="After" /> if you specify <paramref name="Before" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="631c8-135">Copia a planilha para outro local na pasta de trabalho.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631c8-135">Copies the sheet to another location in the workbook.</span>
          </span>
        </summary>
        <remarks>
          <para>
            <span data-ttu-id="631c8-136">Se você não especificar um <paramref name="Before" /> ou <paramref name="After" />, o Microsoft Excel criará uma nova pasta de trabalho contendo a planilha copiada.</span>
            <span class="sxs-lookup">
              <span data-stu-id="631c8-136">If you don't specify either <paramref name="Before" /> or <paramref name="After" />, Microsoft Excel creates a new workbook that contains the copied sheet.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Sheets.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="631c8-137">Retorna o número de objetos na coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631c8-137">Returns the number of objects in the collection.</span>
          </span>
          <span data-ttu-id="631c8-138">
            <b>Integer</b> somente leitura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631c8-138">Read-only <b>Integer</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Sheets.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="631c8-139">Retorna um inteiro de 32 bits que indica o aplicativo no qual esse objeto foi criado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631c8-139">Returns a 32-bit integer that indicates the application in which this object was created.</span>
          </span>
          <span data-ttu-id="631c8-140">Se o objeto foi criado no Microsoft Excel, essa propriedade retorna a cadeia de caracteres XCEL, que é equivalente ao número hexadecimal 5843454C.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631c8-140">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span>
          </span>
          <span data-ttu-id="631c8-141">Somente leitura <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631c8-141">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="631c8-142">A propriedade <b>Creator</b> é projetada para ser usado no Microsoft Excel para Macintosh, onde cada aplicativo possui um código de criador de quatro caracteres.</span>
            <span class="sxs-lookup">
              <span data-stu-id="631c8-142">The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span>
            </span>
            <span data-ttu-id="631c8-143">Por exemplo, o Microsoft Excel tem o código de criador XCEL.</span>
            <span class="sxs-lookup">
              <span data-stu-id="631c8-143">For example, Microsoft Excel has the creator code XCEL.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Sheets.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(117)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="631c8-144">Exclui o objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631c8-144">Deletes the object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FillAcrossSheets">
      <MemberSignature Language="C#" Value="public void FillAcrossSheets (Microsoft.Office.Interop.Excel.Range Range, Microsoft.Office.Interop.Excel.XlFillWith Type = Microsoft.Office.Interop.Excel.XlFillWith.xlFillWithAll);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FillAcrossSheets([in]class Microsoft.Office.Interop.Excel.Range Range, [in]valuetype Microsoft.Office.Interop.Excel.XlFillWith Type) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Sheets.FillAcrossSheets(Microsoft.Office.Interop.Excel.Range,Microsoft.Office.Interop.Excel.XlFillWith)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(469)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Range" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlFillWith" />
      </Parameters>
      <Docs>
        <param name="Range">
          <span data-ttu-id="631c8-145">Objeto de <b>intervalo</b> necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631c8-145">Required <b>Range</b> object.</span>
          </span>
          <span data-ttu-id="631c8-146">O intervalo para preencher em todas as planilhas na coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631c8-146">The range to fill on all the worksheets in the collection.</span>
          </span>
          <span data-ttu-id="631c8-147">O intervalo deve ser de uma planilha dentro da coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631c8-147">The range must be from a worksheet within the collection.</span>
          </span>
        </param>
        <param name="Type">
          <span data-ttu-id="631c8-148">Opcional <see cref="T:Microsoft.Office.Interop.Excel.XlFillWith" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631c8-148">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlFillWith" />.</span>
          </span>
          <span data-ttu-id="631c8-149">Especifica como copiar o intervalo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631c8-149">Specifies how to copy the range.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="631c8-150">Copia um intervalo para a mesma área em todas as outras planilhas de uma coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631c8-150">Copies a range to the same area on all other worksheets in a collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Sheets.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-4)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HPageBreaks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.HPageBreaks HPageBreaks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.HPageBreaks HPageBreaks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Sheets.HPageBreaks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HPageBreaks As HPageBreaks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::HPageBreaks ^ HPageBreaks { Microsoft::Office::Interop::Excel::HPageBreaks ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1418)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1418)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.HPageBreaks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="631c8-151">Retorna um <see cref="T:Microsoft.Office.Interop.Excel.HPageBreaks" /> coleção que representa a página horizontal quebras na planilha.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631c8-151">Returns an <see cref="T:Microsoft.Office.Interop.Excel.HPageBreaks" /> collection that represents the horizontal page breaks on the sheet.</span>
          </span>
          <span data-ttu-id="631c8-152">Somente leitura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631c8-152">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="631c8-153">Não há um limite de 1,026 quebras de página horizontais por planilha.</span>
            <span class="sxs-lookup">
              <span data-stu-id="631c8-153">There is a limit of 1,026 horizontal page breaks per sheet.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object Item[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Sheets.Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item(Index As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Item[System::Object ^] { System::Object ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="631c8-154">
            <b>Objeto</b>necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631c8-154">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="631c8-155">O nome ou número de índice do objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631c8-155">The name or index number of the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="631c8-156">Retorna um único objeto de uma coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631c8-156">Returns a single object from a collection.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Move">
      <MemberSignature Language="C#" Value="public void Move (object Before, object After);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Move([in]object Before, [in]object After) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Sheets.Move(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Move (Optional Before As Object, Optional After As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(637)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Before" Type="System.Object" />
        <Parameter Name="After" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Before">
          <span data-ttu-id="631c8-157">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631c8-157">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="631c8-158">A planilha antes da qual a planilha movida será colocada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631c8-158">The sheet before which the moved sheet will be placed.</span>
          </span>
          <span data-ttu-id="631c8-159">Não é possível especificar <paramref name="Before" /> se você especificar <paramref name="After" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631c8-159">You cannot specify <paramref name="Before" /> if you specify <paramref name="After" />.</span>
          </span>
        </param>
        <param name="After">
          <span data-ttu-id="631c8-160">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631c8-160">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="631c8-161">A planilha após o qual a planilha movida será colocada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631c8-161">The sheet after which the moved sheet will be placed.</span>
          </span>
          <span data-ttu-id="631c8-162">Não é possível especificar <paramref name="After" /> se você especificar <paramref name="Before" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631c8-162">You cannot specify <paramref name="After" /> if you specify <paramref name="Before" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="631c8-163">Move a planilha para outro lugar na pasta de trabalho.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631c8-163">Moves the sheet to another location in the workbook.</span>
          </span>
        </summary>
        <remarks>
          <para>
            <span data-ttu-id="631c8-164">Se você não especificar um <paramref name="Before" /> ou <paramref name="After" />, o Microsoft Excel criará uma nova pasta de trabalho contendo a planilha movida.</span>
            <span class="sxs-lookup">
              <span data-stu-id="631c8-164">If you don't specify either <paramref name="Before" /> or <paramref name="After" />, Microsoft Excel creates a new workbook that contains the moved sheet.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Sheets.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="631c8-p119">Retorna o objeto pai para o objeto especificado. Somente leitura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631c8-p119">Returns the parent object for the specified object. Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintOut">
      <MemberSignature Language="C#" Value="public void PrintOut (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate, object PrToFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintOut([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate, [in]object PrToFileName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Sheets.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrintOut (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object, Optional PrToFileName As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1772)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(8)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
        <Parameter Name="PrToFileName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">
          <span data-ttu-id="631c8-167">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631c8-167">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="631c8-168">O número de página pela qual começar a impressão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631c8-168">The number of the page at which to start printing.</span>
          </span>
          <span data-ttu-id="631c8-169">Se esse argumento for omitido, a impressão começará no início.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631c8-169">If this argument is omitted, printing starts at the beginning.</span>
          </span>
        </param>
        <param name="To">
          <span data-ttu-id="631c8-170">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631c8-170">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="631c8-171">O número da última página a ser impresso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631c8-171">The number of the last page to print.</span>
          </span>
          <span data-ttu-id="631c8-172">Se esse argumento for omitido, a impressão termina com a última página.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631c8-172">If this argument is omitted, printing ends with the last page.</span>
          </span>
        </param>
        <param name="Copies">
          <span data-ttu-id="631c8-173">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631c8-173">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="631c8-174">O número de cópias que serão impressas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631c8-174">The number of copies to print.</span>
          </span>
          <span data-ttu-id="631c8-175">Se esse argumento for omitido, será impressa uma cópia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631c8-175">If this argument is omitted, one copy is printed.</span>
          </span>
        </param>
        <param name="Preview">
          <span data-ttu-id="631c8-176">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631c8-176">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="631c8-177">
            <b>True</b> para que o Microsoft Excel invocar a visualização de impressão antes de imprimir o objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631c8-177">
              <b>True</b> to have Microsoft Excel invoke print preview before printing the object.</span>
          </span>
          <span data-ttu-id="631c8-178">
            <b>False</b> (ou omitido) para imprimir o objeto imediatamente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631c8-178">
              <b>False</b> (or omitted) to print the object immediately.</span>
          </span>
        </param>
        <param name="ActivePrinter">
          <span data-ttu-id="631c8-179">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631c8-179">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="631c8-180">Define o nome da impressora ativa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631c8-180">Sets the name of the active printer.</span>
          </span>
        </param>
        <param name="PrintToFile">
          <span data-ttu-id="631c8-181">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631c8-181">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="631c8-182">
            <b>True</b> para imprimir em um arquivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631c8-182">
              <b>True</b> to print to a file.</span>
          </span>
          <span data-ttu-id="631c8-183">Se <paramref name="PrToFileName" /> não for especificado, o Microsoft Excel solicita que o usuário insira o nome do arquivo de saída.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631c8-183">If <paramref name="PrToFileName" /> is not specified, Microsoft Excel prompts the user to enter the name of the output file.</span>
          </span>
        </param>
        <param name="Collate">
          <span data-ttu-id="631c8-184">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631c8-184">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="631c8-185">
            <b>True</b> para agrupar várias cópias.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631c8-185">
              <b>True</b> to collate multiple copies.</span>
          </span>
        </param>
        <param name="PrToFileName">
          <span data-ttu-id="631c8-186">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631c8-186">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="631c8-187">Se <paramref name="PrintToFile" /> estiver definida como <b>True</b>, este argumento especificará o nome do arquivo que você deseja imprimir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631c8-187">If <paramref name="PrintToFile" /> is set to <b>True</b>, this argument specifies the name of the file you want to print to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="631c8-188">Imprime o objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631c8-188">Prints the object.</span>
          </span>
        </summary>
        <remarks>
          <para>
            <span data-ttu-id="631c8-189">"Páginas" nas descrições de <paramref name="From" /> e <paramref name="To" /> se refere a páginas impressas — não a páginas gerais na planilha ou pasta de trabalho.</span>
            <span class="sxs-lookup">
              <span data-stu-id="631c8-189">"Pages" in the descriptions of <paramref name="From" /> and <paramref name="To" /> refers to printed pages — not overall pages in the sheet or workbook.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintOutEx">
      <MemberSignature Language="C#" Value="public void PrintOutEx (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate, object PrToFileName, object IgnorePrintAreas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintOutEx([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate, [in]object PrToFileName, [in]object IgnorePrintAreas) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Sheets.PrintOutEx(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrintOutEx (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object, Optional PrToFileName As Object, Optional IgnorePrintAreas As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2361)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(9)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
        <Parameter Name="PrToFileName" Type="System.Object" />
        <Parameter Name="IgnorePrintAreas" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">To be added.</param>
        <param name="To">To be added.</param>
        <param name="Copies">To be added.</param>
        <param name="Preview">To be added.</param>
        <param name="ActivePrinter">To be added.</param>
        <param name="PrintToFile">To be added.</param>
        <param name="Collate">To be added.</param>
        <param name="PrToFileName">To be added.</param>
        <param name="IgnorePrintAreas">To be added.</param>
        <summary>
          <span data-ttu-id="631c8-190">Reservado para uso interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631c8-190">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintPreview">
      <MemberSignature Language="C#" Value="public void PrintPreview (object EnableChanges);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintPreview([in]object EnableChanges) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Sheets.PrintPreview(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrintPreview (Optional EnableChanges As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(281)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="EnableChanges" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="EnableChanges">
          <span data-ttu-id="631c8-191">Permite que as alterações ao objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631c8-191">Enables changes to the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="631c8-192">Mostra uma visualização de como o objeto aparecerá quando for impresso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631c8-192">Shows a preview of the object as it would look when printed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select (object Replace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select([in]object Replace) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Sheets.Select(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select (Optional Replace As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(235)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Replace" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Replace">
          <span data-ttu-id="631c8-193">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631c8-193">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="631c8-194">Para substituir o objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631c8-194">The object to replace.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="631c8-195">Seleciona o objeto</span>
          <span class="sxs-lookup">
            <span data-stu-id="631c8-195">Selects the object</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public object Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Visible" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Sheets.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Property Visible As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Visible { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="631c8-196">Determina se o objeto está visível.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631c8-196">Determines whether the object is visible.</span>
          </span>
          <span data-ttu-id="631c8-197">
            <b>Objeto</b> de leitura/gravação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631c8-197">Read/write <b>Object</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VPageBreaks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.VPageBreaks VPageBreaks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.VPageBreaks VPageBreaks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Sheets.VPageBreaks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VPageBreaks As VPageBreaks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::VPageBreaks ^ VPageBreaks { Microsoft::Office::Interop::Excel::VPageBreaks ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1419)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1419)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.VPageBreaks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="631c8-198">Retorna um <see cref="T:Microsoft.Office.Interop.Excel.VPageBreaks" /> coleção que representa a página vertical quebras na planilha.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631c8-198">Returns a <see cref="T:Microsoft.Office.Interop.Excel.VPageBreaks" /> collection that represents the vertical page breaks on the sheet.</span>
          </span>
          <span data-ttu-id="631c8-199">Somente leitura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631c8-199">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>