<Type Name="OLEObjects" FullName="Microsoft.Office.Interop.Excel.OLEObjects">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c7a55aea3278bf57d03536464456af6c54d9afe8" /><Meta Name="ms.sourcegitcommit" Value="f58b07bd9753015d401a69461f61bc174edee843" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="01/27/2021" /><Meta Name="ms.locfileid" Value="50011204" /></Metadata><TypeSignature Language="C#" Value="public interface OLEObjects : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract OLEObjects implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.OLEObjects" />
  <TypeSignature Language="VB.NET" Value="Public Interface OLEObjects&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class OLEObjects : System::Collections::IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000208A3-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="ec08c-101">Uma coleção de todos <see cref="T:Microsoft.Office.Interop.Excel.OLEObject" /> os objetos na planilha especificada.</span><span class="sxs-lookup"><span data-stu-id="ec08c-101">A collection of all the <see cref="T:Microsoft.Office.Interop.Excel.OLEObject" /> objects on the specified worksheet.</span></span> <span data-ttu-id="ec08c-102">Cada objeto <b>OLEObject</b> representa um controle ActiveX ou um objeto OLE vinculado ou inserido.</span><span class="sxs-lookup"><span data-stu-id="ec08c-102">Each <b>OLEObject</b> object represents an ActiveX control or a linked or embedded OLE object.</span></span></summary>
    <remarks><para><span data-ttu-id="ec08c-103">Use o <see cref="M:Microsoft.Office.Interop.Excel._Worksheet.OLEObjects(System.Object)" /> método para retornar a coleção <b>OLEObjects</b> .</span><span class="sxs-lookup"><span data-stu-id="ec08c-103">Use the <see cref="M:Microsoft.Office.Interop.Excel._Worksheet.OLEObjects(System.Object)" /> method to return the <b>OLEObjects</b> collection.</span></span></para>
      <para><span data-ttu-id="ec08c-104">Use o <see cref="M:Microsoft.Office.Interop.Excel.OLEObjects.Add(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> método para criar um novo objeto OLE e adicioná-lo à coleção <b>OLEObjects</b> .</span><span class="sxs-lookup"><span data-stu-id="ec08c-104">Use the <see cref="M:Microsoft.Office.Interop.Excel.OLEObjects.Add(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method to create a new OLE object and add it to the <b>OLEObjects</b> collection.</span></span></para>
      <para><span data-ttu-id="ec08c-105">Um controle ActiveX em uma planilha tem dois nomes: o nome da forma com o controle, que você poderá ver na caixa Nome quando exibir a planilha e o nome do código para o controle, que você poderá ver na célula à direita da janela (Nome) na janela Propriedades.</span><span class="sxs-lookup"><span data-stu-id="ec08c-105">An ActiveX control on a sheet has two names: the name of the shape that contains the control, which you can see in the Name box when you view the sheet, and the code name for the control, which you can see in the cell to the right of (Name) in the Properties window.</span></span> <span data-ttu-id="ec08c-106">Quando você adiciona pela primeira vez um controle a uma planilha, o nome da forma e o nome do código coincidem.</span><span class="sxs-lookup"><span data-stu-id="ec08c-106">When you first add a control to a sheet, the shape name and code name match.</span></span> <span data-ttu-id="ec08c-107">No entanto, se você alterar o nome da forma ou o nome do código, o outro não é alterado automaticamente para corresponder.</span><span class="sxs-lookup"><span data-stu-id="ec08c-107">However, if you change either the shape name or code name, the other is not automatically changed to match.</span></span></para>
      <para><span data-ttu-id="ec08c-108">Use o nome do código de um controle nos nomes dos seus procedimentos de evento.</span><span class="sxs-lookup"><span data-stu-id="ec08c-108">You use the code name of a control in the names of its event procedures.</span></span> <span data-ttu-id="ec08c-109">No entanto, quando você retorna um controle da coleção <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> <b>ou OLEObjects</b> de uma planilha, deve usar o nome da forma, não o nome do código, para referir-se ao controle pelo nome.</span><span class="sxs-lookup"><span data-stu-id="ec08c-109">However, when you return a control from the <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> or <b>OLEObjects</b> collection for a sheet, you must use the shape name, not the code name, to refer to the control by name.</span></span> <span data-ttu-id="ec08c-110">Por exemplo, suponha que você adicione uma caixa de seleção a uma planilha e que o nome da forma padrão e o nome do código padrão sejam CaixadeSeleção1.</span><span class="sxs-lookup"><span data-stu-id="ec08c-110">For example, assume that you add a check box to a sheet and that both the default shape name and the default code name are CheckBox1.</span></span> <span data-ttu-id="ec08c-111">Se você alterar o nome do código de controle digitando chkFinished ao lado de (Nome) na janela Propriedades, deverá usar chkFinished em nomes de procedimentos de evento, mas ainda precisa usar CheckBox1 para retornar o controle da coleção <b>Shapes</b> ou <b>OLEObjects.</b></span><span class="sxs-lookup"><span data-stu-id="ec08c-111">If you then change the control code name by typing chkFinished next to (Name) in the Properties window, you must use chkFinished in event procedures names, but you still have to use CheckBox1 to return the control from the <b>Shapes</b> or <b>OLEObjects</b> collection.</span></span></para>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="_Dummy12">
      <MemberSignature Language="C#" Value="public void _Dummy12 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _Dummy12() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.OLEObjects._Dummy12" />
      <MemberSignature Language="VB.NET" Value="Public Sub _Dummy12 ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void _Dummy12();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(65548)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1089)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec08c-112">Reservado para uso interno.</span><span class="sxs-lookup"><span data-stu-id="ec08c-112">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Dummy15">
      <MemberSignature Language="C#" Value="public void _Dummy15 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _Dummy15() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.OLEObjects._Dummy15" />
      <MemberSignature Language="VB.NET" Value="Public Sub _Dummy15 ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void _Dummy15();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(65551)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1089)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec08c-113">Reservado para uso interno.</span><span class="sxs-lookup"><span data-stu-id="ec08c-113">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Dummy22">
      <MemberSignature Language="C#" Value="public void _Dummy22 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _Dummy22() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.OLEObjects._Dummy22" />
      <MemberSignature Language="VB.NET" Value="Public Sub _Dummy22 ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void _Dummy22();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(65558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1089)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec08c-114">Reservado para uso interno.</span><span class="sxs-lookup"><span data-stu-id="ec08c-114">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Dummy3">
      <MemberSignature Language="C#" Value="public void _Dummy3 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _Dummy3() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.OLEObjects._Dummy3" />
      <MemberSignature Language="VB.NET" Value="Public Sub _Dummy3 ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void _Dummy3();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(65539)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1089)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec08c-115">Reservado para uso interno.</span><span class="sxs-lookup"><span data-stu-id="ec08c-115">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Dummy30">
      <MemberSignature Language="C#" Value="public void _Dummy30 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _Dummy30() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.OLEObjects._Dummy30" />
      <MemberSignature Language="VB.NET" Value="Public Sub _Dummy30 ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void _Dummy30();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(65566)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1089)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec08c-116">Reservado para uso interno.</span><span class="sxs-lookup"><span data-stu-id="ec08c-116">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Dummy32">
      <MemberSignature Language="C#" Value="public void _Dummy32 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _Dummy32() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.OLEObjects._Dummy32" />
      <MemberSignature Language="VB.NET" Value="Public Sub _Dummy32 ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void _Dummy32();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(65568)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1089)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec08c-117">Reservado para uso interno.</span><span class="sxs-lookup"><span data-stu-id="ec08c-117">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Dummy33">
      <MemberSignature Language="C#" Value="public void _Dummy33 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _Dummy33() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.OLEObjects._Dummy33" />
      <MemberSignature Language="VB.NET" Value="Public Sub _Dummy33 ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void _Dummy33();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(65569)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1089)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec08c-118">Reservado para uso interno.</span><span class="sxs-lookup"><span data-stu-id="ec08c-118">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Dummy34">
      <MemberSignature Language="C#" Value="public void _Dummy34 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _Dummy34() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.OLEObjects._Dummy34" />
      <MemberSignature Language="VB.NET" Value="Public Sub _Dummy34 ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void _Dummy34();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(65570)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1089)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec08c-119">Reservado para uso interno.</span><span class="sxs-lookup"><span data-stu-id="ec08c-119">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Dummy36">
      <MemberSignature Language="C#" Value="public void _Dummy36 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _Dummy36() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.OLEObjects._Dummy36" />
      <MemberSignature Language="VB.NET" Value="Public Sub _Dummy36 ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void _Dummy36();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(65572)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1089)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec08c-120">Reservado para uso interno.</span><span class="sxs-lookup"><span data-stu-id="ec08c-120">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Dummy37">
      <MemberSignature Language="C#" Value="public void _Dummy37 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _Dummy37() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.OLEObjects._Dummy37" />
      <MemberSignature Language="VB.NET" Value="Public Sub _Dummy37 ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void _Dummy37();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(65573)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1089)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec08c-121">Reservado para uso interno.</span><span class="sxs-lookup"><span data-stu-id="ec08c-121">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Dummy38">
      <MemberSignature Language="C#" Value="public void _Dummy38 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _Dummy38() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.OLEObjects._Dummy38" />
      <MemberSignature Language="VB.NET" Value="Public Sub _Dummy38 ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void _Dummy38();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(65574)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1089)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec08c-122">Reservado para uso interno.</span><span class="sxs-lookup"><span data-stu-id="ec08c-122">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Dummy39">
      <MemberSignature Language="C#" Value="public void _Dummy39 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _Dummy39() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.OLEObjects._Dummy39" />
      <MemberSignature Language="VB.NET" Value="Public Sub _Dummy39 ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void _Dummy39();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(65575)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1089)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec08c-123">Reservado para uso interno.</span><span class="sxs-lookup"><span data-stu-id="ec08c-123">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Dummy40">
      <MemberSignature Language="C#" Value="public void _Dummy40 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _Dummy40() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.OLEObjects._Dummy40" />
      <MemberSignature Language="VB.NET" Value="Public Sub _Dummy40 ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void _Dummy40();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(65576)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1089)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec08c-124">Reservado para uso interno.</span><span class="sxs-lookup"><span data-stu-id="ec08c-124">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Dummy41">
      <MemberSignature Language="C#" Value="public void _Dummy41 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _Dummy41() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.OLEObjects._Dummy41" />
      <MemberSignature Language="VB.NET" Value="Public Sub _Dummy41 ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void _Dummy41();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(65577)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1089)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec08c-125">Reservado para uso interno.</span><span class="sxs-lookup"><span data-stu-id="ec08c-125">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.OLEObject Add (object ClassType, object Filename, object Link, object DisplayAsIcon, object IconFileName, object IconIndex, object IconLabel, object Left, object Top, object Width, object Height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.OLEObject Add([in]object ClassType, [in]object Filename, [in]object Link, [in]object DisplayAsIcon, [in]object IconFileName, [in]object IconIndex, [in]object IconLabel, [in]object Left, [in]object Top, [in]object Width, [in]object Height) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.OLEObjects.Add(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (Optional ClassType As Object, Optional Filename As Object, Optional Link As Object, Optional DisplayAsIcon As Object, Optional IconFileName As Object, Optional IconIndex As Object, Optional IconLabel As Object, Optional Left As Object, Optional Top As Object, Optional Width As Object, Optional Height As Object) As OLEObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(181)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.OLEObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ClassType" Type="System.Object" />
        <Parameter Name="Filename" Type="System.Object" />
        <Parameter Name="Link" Type="System.Object" />
        <Parameter Name="DisplayAsIcon" Type="System.Object" />
        <Parameter Name="IconFileName" Type="System.Object" />
        <Parameter Name="IconIndex" Type="System.Object" />
        <Parameter Name="IconLabel" Type="System.Object" />
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Top" Type="System.Object" />
        <Parameter Name="Width" Type="System.Object" />
        <Parameter Name="Height" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ClassType"><span data-ttu-id="ec08c-126">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="ec08c-126">Optional <b>Object</b>.</span></span> <span data-ttu-id="ec08c-127">(Você deve especificar um <paramref name="ClassType" /> ou <paramref name="FileName" /> .) Uma cadeia de caracteres que contém o identificador programático do objeto a ser criado.</span><span class="sxs-lookup"><span data-stu-id="ec08c-127">(You must specify either <paramref name="ClassType" /> or <paramref name="FileName" />.) A string that contains the programmatic identifier for the object to be created.</span></span> <span data-ttu-id="ec08c-128">Se <paramref name="ClassType" /> for especificado e for <paramref name="FileName" /> <paramref name="Link" /> ignorado.</span><span class="sxs-lookup"><span data-stu-id="ec08c-128">If <paramref name="ClassType" /> is specified, <paramref name="FileName" /> and <paramref name="Link" /> are ignored.</span></span></param>
        <param name="Filename"><span data-ttu-id="ec08c-129">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="ec08c-129">Optional <b>Object</b>.</span></span> <span data-ttu-id="ec08c-130">(Você deve especificar um <paramref name="ClassType" /> ou <paramref name="FileName" /> .) Uma cadeia de caracteres que especifica o arquivo a ser usado para criar o objeto OLE.</span><span class="sxs-lookup"><span data-stu-id="ec08c-130">(You must specify either <paramref name="ClassType" /> or <paramref name="FileName" />.) A string that specifies the file to be used to create the OLE object.</span></span></param>
        <param name="Link"><span data-ttu-id="ec08c-131">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="ec08c-131">Optional <b>Object</b>.</span></span> <span data-ttu-id="ec08c-132"><b>True</b> para ter o novo objeto OLE baseado <paramref name="FileName" /> em ser vinculado a esse arquivo.</span><span class="sxs-lookup"><span data-stu-id="ec08c-132"><b>True</b> to have the new OLE object based on <paramref name="FileName" /> be linked to that file.</span></span> <span data-ttu-id="ec08c-133">Se o objeto não estiver vinculado, ele será criado como uma cópia do arquivo.</span><span class="sxs-lookup"><span data-stu-id="ec08c-133">If the object isn't linked, the object is created as a copy of the file.</span></span> <span data-ttu-id="ec08c-134">O valor padrão é <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="ec08c-134">The default value is <b>False</b>.</span></span></param>
        <param name="DisplayAsIcon"><span data-ttu-id="ec08c-135">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="ec08c-135">Optional <b>Object</b>.</span></span> <span data-ttu-id="ec08c-136"><b>True</b> para exibir o novo objeto OLE como um ícone ou como sua imagem comum.</span><span class="sxs-lookup"><span data-stu-id="ec08c-136"><b>True</b> to display the new OLE object either as an icon or as its regular picture.</span></span> <span data-ttu-id="ec08c-137">Se esse argumento for <b>True</b>e <paramref name="IconFileName" /> puder ser usado para especificar um <paramref name="IconIndex" /> ícone.</span><span class="sxs-lookup"><span data-stu-id="ec08c-137">If this argument is <b>True</b>, <paramref name="IconFileName" /> and <paramref name="IconIndex" /> can be used to specify an icon.</span></span></param>
        <param name="IconFileName"><span data-ttu-id="ec08c-138">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="ec08c-138">Optional <b>Object</b>.</span></span> <span data-ttu-id="ec08c-139">Uma sequência de caracteres que especifica o arquivo que contém o ícone a ser exibido.</span><span class="sxs-lookup"><span data-stu-id="ec08c-139">A string that specifies the file that contains the icon to be displayed.</span></span> <span data-ttu-id="ec08c-140">Este argumento é usado somente se <paramref name="DisplayAsIcon" /> for <b>True</b>.</span><span class="sxs-lookup"><span data-stu-id="ec08c-140">This argument is used only if <paramref name="DisplayAsIcon" /> is <b>True</b>.</span></span> <span data-ttu-id="ec08c-141">Se esse argumento não for especificado ou o arquivo não contiver ícones, o ícone padrão da classe OLE será usado</span><span class="sxs-lookup"><span data-stu-id="ec08c-141">If this argument isn't specified or the file contains no icons, the default icon for the OLE class is used</span></span></param>
        <param name="IconIndex"><span data-ttu-id="ec08c-142">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="ec08c-142">Optional <b>Object</b>.</span></span> <span data-ttu-id="ec08c-143">O número do ícone no arquivo de ícone.</span><span class="sxs-lookup"><span data-stu-id="ec08c-143">The number of the icon in the icon file.</span></span> <span data-ttu-id="ec08c-144">Isso é usado somente se <paramref name="DisplayAsIcon" /> for <b>True</b> e se referir a um arquivo válido que <paramref name="IconFileName" /> contém ícones.</span><span class="sxs-lookup"><span data-stu-id="ec08c-144">This is used only if <paramref name="DisplayAsIcon" /> is <b>True</b> and <paramref name="IconFileName" /> refers to a valid file that contains icons.</span></span> <span data-ttu-id="ec08c-145">Se um ícone com o número de índice determinado não existir no arquivo especificado por , o primeiro <paramref name="IconFileName" /> ícone no arquivo será usado.</span><span class="sxs-lookup"><span data-stu-id="ec08c-145">If an icon with the given index number doesn't exist in the file specified by <paramref name="IconFileName" />, the first icon in the file is used.</span></span></param>
        <param name="IconLabel"><span data-ttu-id="ec08c-146">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="ec08c-146">Optional <b>Object</b>.</span></span> <span data-ttu-id="ec08c-147">Uma sequência de caracteres que especifica um rótulo a ser exibido abaixo do ícone.</span><span class="sxs-lookup"><span data-stu-id="ec08c-147">A string that specifies a label to display beneath the icon.</span></span> <span data-ttu-id="ec08c-148">Isso é usado somente se <paramref name="DisplayAsIcon" /> for <b>True</b>.</span><span class="sxs-lookup"><span data-stu-id="ec08c-148">This is used only if <paramref name="DisplayAsIcon" /> is <b>True</b>.</span></span> <span data-ttu-id="ec08c-149">Se esse argumento for omitido ou for uma sequência de caracteres vazia (""), nenhuma legenda será exibida.</span><span class="sxs-lookup"><span data-stu-id="ec08c-149">If this argument is omitted or is an empty string (""), no caption is displayed.</span></span></param>
        <param name="Left"><span data-ttu-id="ec08c-150">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="ec08c-150">Optional <b>Object</b>.</span></span> <span data-ttu-id="ec08c-151">As coordenadas iniciais do novo objeto em pontos, em relação ao canto superior esquerdo da célula A1 em uma planilha ou ao canto superior esquerdo de um gráfico.</span><span class="sxs-lookup"><span data-stu-id="ec08c-151">The initial coordinates of the new object in points, relative to the upper-left corner of cell A1 on a worksheet, or to the upper-left corner of a chart.</span></span></param>
        <param name="Top"><span data-ttu-id="ec08c-152">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="ec08c-152">Optional <b>Object</b>.</span></span> <span data-ttu-id="ec08c-153">As coordenadas iniciais do novo objeto em pontos, em relação ao canto superior esquerdo da célula A1 em uma planilha ou ao canto superior esquerdo de um gráfico.</span><span class="sxs-lookup"><span data-stu-id="ec08c-153">The initial coordinates of the new object in points, relative to the upper-left corner of cell A1 on a worksheet, or to the upper-left corner of a chart.</span></span></param>
        <param name="Width"><span data-ttu-id="ec08c-154">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="ec08c-154">Optional <b>Object</b>.</span></span> <span data-ttu-id="ec08c-155">O tamanho inicial do novo objeto em pontos.</span><span class="sxs-lookup"><span data-stu-id="ec08c-155">The initial size of the new object in points.</span></span></param>
        <param name="Height"><span data-ttu-id="ec08c-156">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="ec08c-156">Optional <b>Object</b>.</span></span> <span data-ttu-id="ec08c-157">O tamanho inicial do novo objeto, em pontos.</span><span class="sxs-lookup"><span data-stu-id="ec08c-157">The initial size of the new object, in points.</span></span></param>
        <summary><span data-ttu-id="ec08c-158">Adiciona um novo objeto OLE a uma planilha.</span><span class="sxs-lookup"><span data-stu-id="ec08c-158">Adds a new OLE object to a sheet.</span></span> <span data-ttu-id="ec08c-159">Retorna um <see cref="T:Microsoft.Office.Interop.Excel.OLEObject" /> objeto.</span><span class="sxs-lookup"><span data-stu-id="ec08c-159">Returns an <see cref="T:Microsoft.Office.Interop.Excel.OLEObject" /> object.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.OLEObjects.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec08c-160">Retorna um <see cref="T:Microsoft.Office.Interop.Excel.Application" /> objeto que representa o aplicativo Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="ec08c-160">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoLoad">
      <MemberSignature Language="C#" Value="public bool AutoLoad { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoLoad" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.OLEObjects.AutoLoad" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoLoad As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoLoad { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1186)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1186)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1186)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec08c-161"><b>True</b> se o objeto OLE for carregado automaticamente quando a pasta de trabalho que o contém for aberta.</span><span class="sxs-lookup"><span data-stu-id="ec08c-161"><b>True</b> if the OLE object is automatically loaded when the workbook that contains it is opened.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="ec08c-162">Esta propriedade é ignorada pelos controles ActiveX.</span><span class="sxs-lookup"><span data-stu-id="ec08c-162">This property is ignored by ActiveX controls.</span></span> <span data-ttu-id="ec08c-163">Esses controles são carregados sempre que uma pasta de trabalho é aberta.</span><span class="sxs-lookup"><span data-stu-id="ec08c-163">ActiveX controls are always loaded when a workbook is opened.</span></span></para>
          <para><span data-ttu-id="ec08c-164">Para a maioria dos tipos de objeto OLE, essa propriedade não deve ser definida como <b>True</b>.</span><span class="sxs-lookup"><span data-stu-id="ec08c-164">For most OLE object types, this property shouldn’t be set to <b>True</b>.</span></span> <span data-ttu-id="ec08c-165">Por padrão, a <b>propriedade AutoLoad</b> é definida como <b>False</b> para novos objetos OLE; isso economiza tempo e memória quando o Microsoft Excel está carregando as planilhas.</span><span class="sxs-lookup"><span data-stu-id="ec08c-165">By default, the <b>AutoLoad</b> property is set to <b>False</b> for new OLE objects; this saves time and memory when Microsoft Excel is loading workbooks.</span></span> <span data-ttu-id="ec08c-166">A vantagem de carregar automaticamente objetos OLE é que, para objetos que representam dados voláteis, os links para dados de origem podem ser restabelecidos imediatamente e os objetos podem ser renderizados novamente, se necessário.</span><span class="sxs-lookup"><span data-stu-id="ec08c-166">The benefit of automatically loading OLE objects is that, for objects that represent volatile data, links to source data can be reestablished immediately and the objects can be rendered again, if necessary.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Border">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Border Border { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Border Border" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.OLEObjects.Border" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Border As Border" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Border ^ Border { Microsoft::Office::Interop::Excel::Border ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(128)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(128)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Border</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec08c-167">Retorna um <see cref="T:Microsoft.Office.Interop.Excel.Border" /> objeto que representa a borda do objeto.</span><span class="sxs-lookup"><span data-stu-id="ec08c-167">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Border" /> object that represents the border of the object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BringToFront">
      <MemberSignature Language="C#" Value="public object BringToFront ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object BringToFront() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.OLEObjects.BringToFront" />
      <MemberSignature Language="VB.NET" Value="Public Function BringToFront () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ BringToFront();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(602)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec08c-168">Traz o objeto para o início da ordem z.</span><span class="sxs-lookup"><span data-stu-id="ec08c-168">Brings the object to the front of the z-order.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public object Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Copy() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.OLEObjects.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Function Copy () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Copy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(551)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec08c-169">Copia o objeto para a Área de Transferência.</span><span class="sxs-lookup"><span data-stu-id="ec08c-169">Copies the object to the Clipboard.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyPicture">
      <MemberSignature Language="C#" Value="public object CopyPicture (Microsoft.Office.Interop.Excel.XlPictureAppearance Appearance = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlPrinter, Microsoft.Office.Interop.Excel.XlCopyPictureFormat Format = Microsoft.Office.Interop.Excel.XlCopyPictureFormat.xlPicture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CopyPicture([in]valuetype Microsoft.Office.Interop.Excel.XlPictureAppearance Appearance, [in]valuetype Microsoft.Office.Interop.Excel.XlCopyPictureFormat Format) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.OLEObjects.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyPicture (Optional Appearance As XlPictureAppearance = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlPrinter, Optional Format As XlCopyPictureFormat = Microsoft.Office.Interop.Excel.XlCopyPictureFormat.xlPicture) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(213)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Appearance" Type="Microsoft.Office.Interop.Excel.XlPictureAppearance" />
        <Parameter Name="Format" Type="Microsoft.Office.Interop.Excel.XlCopyPictureFormat" />
      </Parameters>
      <Docs>
        <param name="Appearance"><span data-ttu-id="ec08c-170">Opcional <see cref="T:Microsoft.Office.Interop.Excel.XlPictureAppearance" /> .</span><span class="sxs-lookup"><span data-stu-id="ec08c-170">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlPictureAppearance" />.</span></span> <span data-ttu-id="ec08c-171">Especifica como a imagem deve ser copiada.</span><span class="sxs-lookup"><span data-stu-id="ec08c-171">Specifies how the picture should be copied.</span></span></param>
        <param name="Format"><span data-ttu-id="ec08c-172">Opcional <see cref="T:Microsoft.Office.Interop.Excel.XlCopyPictureFormat" /> .</span><span class="sxs-lookup"><span data-stu-id="ec08c-172">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlCopyPictureFormat" />.</span></span> <span data-ttu-id="ec08c-173">O formato da imagem.</span><span class="sxs-lookup"><span data-stu-id="ec08c-173">The format of the picture.</span></span></param>
        <summary><span data-ttu-id="ec08c-174">Copia o objeto selecionado para a Área de Transferência como uma imagem.</span><span class="sxs-lookup"><span data-stu-id="ec08c-174">Copies the selected object to the Clipboard as a picture.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.OLEObjects.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec08c-175">Retorna o número de objetos na coleção.</span><span class="sxs-lookup"><span data-stu-id="ec08c-175">Returns the number of objects in the collection.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.OLEObjects.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec08c-176">Retorna um inteiro de 32 bits que indica o aplicativo no qual esse objeto foi criado.</span><span class="sxs-lookup"><span data-stu-id="ec08c-176">Returns a 32-bit integer that indicates the application in which this object was created.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="ec08c-177">Se o objeto foi criado no Microsoft Excel, essa propriedade retornará a sequência XCEL, que é equivalente ao número hexadecimal 5843454C.</span><span class="sxs-lookup"><span data-stu-id="ec08c-177">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span></span></para>
          <para><span data-ttu-id="ec08c-178">A propriedade <b>Creator</b> foi projetada para ser usada no Microsoft Excel para Macintosh, onde cada aplicativo possui um código de criador de quatro caracteres.</span><span class="sxs-lookup"><span data-stu-id="ec08c-178">The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span></span> <span data-ttu-id="ec08c-179">Por exemplo, o Microsoft Excel possui o código de criador XCEL.</span><span class="sxs-lookup"><span data-stu-id="ec08c-179">For example, Microsoft Excel has the creator code XCEL.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Cut">
      <MemberSignature Language="C#" Value="public object Cut ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Cut() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.OLEObjects.Cut" />
      <MemberSignature Language="VB.NET" Value="Public Function Cut () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Cut();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(565)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec08c-180">Recorta o objeto para a Área de Transferência ou o cola em um local especificado.</span><span class="sxs-lookup"><span data-stu-id="ec08c-180">Cuts the object to the Clipboard or pastes it into a specified destination.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="ec08c-181">O intervalo recortado precisa ser constituído de células adjacentes.</span><span class="sxs-lookup"><span data-stu-id="ec08c-181">The cut range must be made up of adjacent cells.</span></span></para>
          <para><span data-ttu-id="ec08c-182">Somente gráficos incorporados podem ser recortados.</span><span class="sxs-lookup"><span data-stu-id="ec08c-182">Only embedded charts can be cut.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public object Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Delete() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.OLEObjects.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Function Delete () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(117)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec08c-183">Exclui o objeto.</span><span class="sxs-lookup"><span data-stu-id="ec08c-183">Deletes the object.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Duplicate">
      <MemberSignature Language="C#" Value="public object Duplicate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Duplicate() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.OLEObjects.Duplicate" />
      <MemberSignature Language="VB.NET" Value="Public Function Duplicate () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Duplicate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1039)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec08c-184">Duplica o objeto e retorna uma referência para a nova cópia.</span><span class="sxs-lookup"><span data-stu-id="ec08c-184">Duplicates the object and returns a reference to the new copy.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.OLEObjects.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(600)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(600)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(600)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec08c-185"><b>True</b> se o objeto estiver habilitado.</span><span class="sxs-lookup"><span data-stu-id="ec08c-185"><b>True</b> if the object is enabled.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.OLEObjects.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-4)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Group">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.GroupObject Group ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.GroupObject Group() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.OLEObjects.Group" />
      <MemberSignature Language="VB.NET" Value="Public Function Group () As GroupObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::GroupObject ^ Group();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(46)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.GroupObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec08c-186">Reservado para uso interno.</span><span class="sxs-lookup"><span data-stu-id="ec08c-186">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public double Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Height" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.OLEObjects.Height" />
      <MemberSignature Language="VB.NET" Value="Public Property Height As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Height { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(123)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(123)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(123)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec08c-187">A altura, em pontos, do objeto.</span><span class="sxs-lookup"><span data-stu-id="ec08c-187">The height, in points, of the object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Interior">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Interior Interior { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Interior Interior" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.OLEObjects.Interior" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Interior As Interior" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Interior ^ Interior { Microsoft::Office::Interop::Excel::Interior ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(129)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(129)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Interior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec08c-188">Retorna um <see cref="T:Microsoft.Office.Interop.Excel.Interior" /> objeto que representa o interior do objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="ec08c-188">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Interior" /> object that represents the interior of the specified object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object Item (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Item([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.OLEObjects.Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Item (Index As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Item(System::Object ^ Index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="ec08c-189">Objeto <b>Required</b>.</span><span class="sxs-lookup"><span data-stu-id="ec08c-189">Required <b>Object</b>.</span></span> <span data-ttu-id="ec08c-190">O nome ou número de índice do objeto.</span><span class="sxs-lookup"><span data-stu-id="ec08c-190">The name or index number for the object.</span></span></param>
        <summary><span data-ttu-id="ec08c-191">Retorna um único objeto de uma coleção.</span><span class="sxs-lookup"><span data-stu-id="ec08c-191">Returns a single object from a collection.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="public double Left { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Left" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.OLEObjects.Left" />
      <MemberSignature Language="VB.NET" Value="Public Property Left As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Left { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(127)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(127)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(127)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec08c-192">A distância, em pontos, entre a borda esquerda do objeto à borda esquerda da coluna A (em uma planilha) ou da borda esquerda da área do gráfico (em um gráfico).</span><span class="sxs-lookup"><span data-stu-id="ec08c-192">The distance, in points, from the left edge of the object to the left edge of column A (on a worksheet) or the left edge of the chart area (on a chart).</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Locked">
      <MemberSignature Language="C#" Value="public bool Locked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Locked" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.OLEObjects.Locked" />
      <MemberSignature Language="VB.NET" Value="Public Property Locked As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Locked { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(269)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(269)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(269)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec08c-193"><b>True</b> se o objeto estiver bloqueado; <b>False</b> se o objeto puder ser modificado quando a planilha estiver protegida.</span><span class="sxs-lookup"><span data-stu-id="ec08c-193"><b>True</b> if the object is locked; <b>False</b> if the object can be modified when the sheet is protected.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAction">
      <MemberSignature Language="C#" Value="public string OnAction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnAction" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.OLEObjects.OnAction" />
      <MemberSignature Language="VB.NET" Value="Public Property OnAction As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnAction { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(596)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(596)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(596)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec08c-194">Reservado para uso interno.</span><span class="sxs-lookup"><span data-stu-id="ec08c-194">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.OLEObjects.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec08c-195">Retorna o objeto pai do objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="ec08c-195">Returns the parent object for the specified object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Placement">
      <MemberSignature Language="C#" Value="public object Placement { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Placement" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.OLEObjects.Placement" />
      <MemberSignature Language="VB.NET" Value="Public Property Placement As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Placement { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(617)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(617)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(617)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec08c-196">Retorna ou define a maneira como o objeto é anexado às células abaixo dele.</span><span class="sxs-lookup"><span data-stu-id="ec08c-196">Returns or sets the way the object is attached to the cells below it.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="ec08c-197">Use uma das seguintes constantes:</span><span class="sxs-lookup"><span data-stu-id="ec08c-197">Use one of the following constants:</span></span></para>
          <para><span data-ttu-id="ec08c-198">
            <b>xlFreeFloating</b>
          </span><span class="sxs-lookup"><span data-stu-id="ec08c-198">
            <b>xlFreeFloating</b>
          </span></span></para>
          <para><span data-ttu-id="ec08c-199">
            <b>xlMove</b>
          </span><span class="sxs-lookup"><span data-stu-id="ec08c-199">
            <b>xlMove</b>
          </span></span></para>
          <para><span data-ttu-id="ec08c-200">
            <b>xlMoveAndSize</b>
          </span><span class="sxs-lookup"><span data-stu-id="ec08c-200">
            <b>xlMoveAndSize</b>
          </span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintObject">
      <MemberSignature Language="C#" Value="public bool PrintObject { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PrintObject" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.OLEObjects.PrintObject" />
      <MemberSignature Language="VB.NET" Value="Public Property PrintObject As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PrintObject { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(618)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(618)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(618)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec08c-201"><b>True</b> se o objeto será impresso quando o documento for impresso.</span><span class="sxs-lookup"><span data-stu-id="ec08c-201"><b>True</b> if the object will be printed when the document is printed.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public object Select (object Replace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Select([in]object Replace) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.OLEObjects.Select(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Select (Optional Replace As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(235)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Replace" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Replace"><span data-ttu-id="ec08c-202">Objeto <b>opcional</b>.</span><span class="sxs-lookup"><span data-stu-id="ec08c-202">Optional <b>Object</b>.</span></span> <span data-ttu-id="ec08c-203"><b>True</b> para substituir a seleção atual pelo objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="ec08c-203"><b>True</b> to replace the current selection with the specified object.</span></span> <span data-ttu-id="ec08c-204"><b>False</b> para estender a seleção atual para incluir qualquer selecionada anteriormente objetos e o objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="ec08c-204"><b>False</b> to extend the current selection to include any previously selected objects and the specified object.</span></span></param>
        <summary><span data-ttu-id="ec08c-205">Seleciona o objeto.</span><span class="sxs-lookup"><span data-stu-id="ec08c-205">Selects the object.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendToBack">
      <MemberSignature Language="C#" Value="public object SendToBack ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object SendToBack() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.OLEObjects.SendToBack" />
      <MemberSignature Language="VB.NET" Value="Public Function SendToBack () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ SendToBack();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(605)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec08c-206">Envia o objeto para o final da ordem z.</span><span class="sxs-lookup"><span data-stu-id="ec08c-206">Sends the object to the back of the z-order.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Shadow">
      <MemberSignature Language="C#" Value="public bool Shadow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Shadow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.OLEObjects.Shadow" />
      <MemberSignature Language="VB.NET" Value="Public Property Shadow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Shadow { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(103)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(103)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(103)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec08c-207"><b>True</b> se a fonte for uma fonte de sombra ou se o objeto tiver uma sombra.</span><span class="sxs-lookup"><span data-stu-id="ec08c-207"><b>True</b> if the font is a shadow font or if the object has a shadow.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShapeRange">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ShapeRange ShapeRange { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ShapeRange ShapeRange" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.OLEObjects.ShapeRange" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ShapeRange As ShapeRange" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ShapeRange ^ ShapeRange { Microsoft::Office::Interop::Excel::ShapeRange ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1528)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1528)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ShapeRange</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec08c-208">Retorna um <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> objeto que representa o objeto ou objetos especificados.</span><span class="sxs-lookup"><span data-stu-id="ec08c-208">Returns a <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> object that represents the specified object or objects.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceName">
      <MemberSignature Language="C#" Value="public string SourceName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SourceName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.OLEObjects.SourceName" />
      <MemberSignature Language="VB.NET" Value="Public Property SourceName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SourceName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(721)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(721)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(721)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec08c-209">Retorna ou define o nome de origem do link do objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="ec08c-209">Returns or sets the specified object's link source name.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Top">
      <MemberSignature Language="C#" Value="public double Top { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Top" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.OLEObjects.Top" />
      <MemberSignature Language="VB.NET" Value="Public Property Top As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Top { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(126)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(126)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(126)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec08c-210">A distância, em pontos, da borda superior do objeto até a parte superior da linha 1 (em uma planilha) ou a parte superior da área do gráfico (em um gráfico).</span><span class="sxs-lookup"><span data-stu-id="ec08c-210">The distance, in points, from the top edge of the object to the top of row 1 (on a worksheet) or the top of the chart area (on a chart).</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.OLEObjects.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Visible { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec08c-211">Determina se o objeto será visível.</span><span class="sxs-lookup"><span data-stu-id="ec08c-211">Determines whether the object is visible.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public double Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Width" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.OLEObjects.Width" />
      <MemberSignature Language="VB.NET" Value="Public Property Width As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Width { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(122)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(122)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(122)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec08c-212">A largura, em pontos, do objeto.</span><span class="sxs-lookup"><span data-stu-id="ec08c-212">The width, in points, of the object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ZOrder">
      <MemberSignature Language="C#" Value="public int ZOrder { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ZOrder" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.OLEObjects.ZOrder" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ZOrder As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ZOrder { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(622)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(622)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec08c-213">Retorna a posição do objeto na ordem z.</span><span class="sxs-lookup"><span data-stu-id="ec08c-213">Returns the z-order position of the object.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="ec08c-214">Em qualquer coleção de objetos, o objeto no final da ordem z é (1) e o objeto na frente da ordem <paramref name="collection" /> z é <paramref name="collection" /> ( <paramref name="collection" /> .<b> Contagem</b>).</span><span class="sxs-lookup"><span data-stu-id="ec08c-214">In any collection of objects, the object at the back of the z-order is <paramref name="collection" />(1), and the object at the front of the z-order is <paramref name="collection" />(<paramref name="collection" />.<b>Count</b>).</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
  </Members>
</Type>